// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/novel/novelclassify/v1/novel_classify.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type NovelClassifyPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *NovelClassifyReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *NovelClassifyPageReq) Reset() {
	*x = NovelClassifyPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelClassifyPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelClassifyPageReq) ProtoMessage() {}

func (x *NovelClassifyPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelClassifyPageReq.ProtoReflect.Descriptor instead.
func (*NovelClassifyPageReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP(), []int{0}
}

func (x *NovelClassifyPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *NovelClassifyPageReq) GetParam() *NovelClassifyReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type NovelClassifyPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*NovelClassifyReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NovelClassifyPageReply) Reset() {
	*x = NovelClassifyPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelClassifyPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelClassifyPageReply) ProtoMessage() {}

func (x *NovelClassifyPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelClassifyPageReply.ProtoReflect.Descriptor instead.
func (*NovelClassifyPageReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP(), []int{1}
}

func (x *NovelClassifyPageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *NovelClassifyPageReply) GetItems() []*NovelClassifyReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type NovelClassifyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//父类ID,默认0,表示无
	Pid int64 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	//分类名称
	ClassifyName string `protobuf:"bytes,3,opt,name=classifyName,proto3" json:"classifyName,omitempty"`
	//状态 0
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	//排序字段
	OrderNum int32 `protobuf:"varint,5,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	//备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,11,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelClassifyReq) Reset() {
	*x = NovelClassifyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelClassifyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelClassifyReq) ProtoMessage() {}

func (x *NovelClassifyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelClassifyReq.ProtoReflect.Descriptor instead.
func (*NovelClassifyReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP(), []int{2}
}

func (x *NovelClassifyReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelClassifyReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *NovelClassifyReq) GetClassifyName() string {
	if x != nil {
		return x.ClassifyName
	}
	return ""
}

func (x *NovelClassifyReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NovelClassifyReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *NovelClassifyReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *NovelClassifyReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelClassifyReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelClassifyReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelClassifyReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelClassifyReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type NovelClassifyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//父类ID,默认0,表示无
	Pid int64 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	//分类名称
	ClassifyName string `protobuf:"bytes,3,opt,name=classifyName,proto3" json:"classifyName,omitempty"`
	//状态 0
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	//排序字段
	OrderNum int32 `protobuf:"varint,5,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	//备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,11,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelClassifyReply) Reset() {
	*x = NovelClassifyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelClassifyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelClassifyReply) ProtoMessage() {}

func (x *NovelClassifyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelClassifyReply.ProtoReflect.Descriptor instead.
func (*NovelClassifyReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP(), []int{3}
}

func (x *NovelClassifyReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelClassifyReply) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *NovelClassifyReply) GetClassifyName() string {
	if x != nil {
		return x.ClassifyName
	}
	return ""
}

func (x *NovelClassifyReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NovelClassifyReply) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *NovelClassifyReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *NovelClassifyReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelClassifyReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelClassifyReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelClassifyReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelClassifyReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建NovelClassify请求
type NovelClassifyCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//父类ID,默认0,表示无
	Pid int64 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
	//分类名称
	ClassifyName string `protobuf:"bytes,2,opt,name=classifyName,proto3" json:"classifyName,omitempty"`
	//状态 0
	Status int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	//排序字段
	OrderNum int32 `protobuf:"varint,4,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	//备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *NovelClassifyCreateReq) Reset() {
	*x = NovelClassifyCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelClassifyCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelClassifyCreateReq) ProtoMessage() {}

func (x *NovelClassifyCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelClassifyCreateReq.ProtoReflect.Descriptor instead.
func (*NovelClassifyCreateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP(), []int{4}
}

func (x *NovelClassifyCreateReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *NovelClassifyCreateReq) GetClassifyName() string {
	if x != nil {
		return x.ClassifyName
	}
	return ""
}

func (x *NovelClassifyCreateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NovelClassifyCreateReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *NovelClassifyCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建NovelClassify返回
type NovelClassifyCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//父类ID,默认0,表示无
	Pid int64 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	//分类名称
	ClassifyName string `protobuf:"bytes,3,opt,name=classifyName,proto3" json:"classifyName,omitempty"`
	//状态 0
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	//排序字段
	OrderNum int32 `protobuf:"varint,5,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	//备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,11,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelClassifyCreateReply) Reset() {
	*x = NovelClassifyCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelClassifyCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelClassifyCreateReply) ProtoMessage() {}

func (x *NovelClassifyCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelClassifyCreateReply.ProtoReflect.Descriptor instead.
func (*NovelClassifyCreateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP(), []int{5}
}

func (x *NovelClassifyCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelClassifyCreateReply) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *NovelClassifyCreateReply) GetClassifyName() string {
	if x != nil {
		return x.ClassifyName
	}
	return ""
}

func (x *NovelClassifyCreateReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NovelClassifyCreateReply) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *NovelClassifyCreateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *NovelClassifyCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelClassifyCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelClassifyCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelClassifyCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelClassifyCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新NovelClassify请求
type NovelClassifyUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//父类ID,默认0,表示无
	Pid int64 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	//分类名称
	ClassifyName string `protobuf:"bytes,3,opt,name=classifyName,proto3" json:"classifyName,omitempty"`
	//状态 0
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	//排序字段
	OrderNum int32 `protobuf:"varint,5,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	//备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *NovelClassifyUpdateReq) Reset() {
	*x = NovelClassifyUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelClassifyUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelClassifyUpdateReq) ProtoMessage() {}

func (x *NovelClassifyUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelClassifyUpdateReq.ProtoReflect.Descriptor instead.
func (*NovelClassifyUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP(), []int{6}
}

func (x *NovelClassifyUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelClassifyUpdateReq) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *NovelClassifyUpdateReq) GetClassifyName() string {
	if x != nil {
		return x.ClassifyName
	}
	return ""
}

func (x *NovelClassifyUpdateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NovelClassifyUpdateReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *NovelClassifyUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新NovelClassify返回
type NovelClassifyUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//父类ID,默认0,表示无
	Pid int64 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	//分类名称
	ClassifyName string `protobuf:"bytes,3,opt,name=classifyName,proto3" json:"classifyName,omitempty"`
	//状态 0
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	//排序字段
	OrderNum int32 `protobuf:"varint,5,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	//备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *NovelClassifyUpdateReply) Reset() {
	*x = NovelClassifyUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelClassifyUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelClassifyUpdateReply) ProtoMessage() {}

func (x *NovelClassifyUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelClassifyUpdateReply.ProtoReflect.Descriptor instead.
func (*NovelClassifyUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP(), []int{7}
}

func (x *NovelClassifyUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelClassifyUpdateReply) GetPid() int64 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *NovelClassifyUpdateReply) GetClassifyName() string {
	if x != nil {
		return x.ClassifyName
	}
	return ""
}

func (x *NovelClassifyUpdateReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NovelClassifyUpdateReply) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *NovelClassifyUpdateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 删除NovelClassify请求
type NovelClassifyDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NovelClassifyDeleteReq) Reset() {
	*x = NovelClassifyDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelClassifyDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelClassifyDeleteReq) ProtoMessage() {}

func (x *NovelClassifyDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelClassifyDeleteReq.ProtoReflect.Descriptor instead.
func (*NovelClassifyDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP(), []int{8}
}

func (x *NovelClassifyDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除NovelClassify请求
type NovelClassifyBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *NovelClassifyBatchDeleteReq) Reset() {
	*x = NovelClassifyBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelClassifyBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelClassifyBatchDeleteReq) ProtoMessage() {}

func (x *NovelClassifyBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelClassifyBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*NovelClassifyBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP(), []int{9}
}

func (x *NovelClassifyBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除NovelClassify返回
type NovelClassifyDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NovelClassifyDeleteReply) Reset() {
	*x = NovelClassifyDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelClassifyDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelClassifyDeleteReply) ProtoMessage() {}

func (x *NovelClassifyDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelClassifyDeleteReply.ProtoReflect.Descriptor instead.
func (*NovelClassifyDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP(), []int{10}
}

func (x *NovelClassifyDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_novel_novelclassify_v1_novel_classify_proto protoreflect.FileDescriptor

var file_api_novel_novelclassify_v1_novel_classify_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x10, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x79, 0x0a, 0x14, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x7d, 0x0a, 0x16,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12,
	0x3a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xec, 0x02, 0x0a, 0x10,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xee, 0x02, 0x0a, 0x12, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03,
	0x70, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x16,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xf4, 0x02, 0x0a, 0x18, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xaa, 0x01, 0x0a, 0x16, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xac, 0x01, 0x0a,
	0x18, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x28, 0x0a, 0x16, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x1b, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x32, 0x0a, 0x18, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xdc, 0x06, 0x0a, 0x0d, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x89, 0x01, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x26, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12,
	0x17, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x79, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x7d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x22, 0x2e, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x24, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17,
	0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8f, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12,
	0x28, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x1a, 0x17, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x8a, 0x01, 0x0a, 0x13, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x12, 0x28, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22,
	0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x8c, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x12, 0x28,
	0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x76,
	0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x91, 0x01, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x12, 0x2d, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x2a, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c,
	0x2f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x42, 0x24, 0x5a, 0x22, 0x68, 0x6f, 0x70,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_novel_novelclassify_v1_novel_classify_proto_rawDescOnce sync.Once
	file_api_novel_novelclassify_v1_novel_classify_proto_rawDescData = file_api_novel_novelclassify_v1_novel_classify_proto_rawDesc
)

func file_api_novel_novelclassify_v1_novel_classify_proto_rawDescGZIP() []byte {
	file_api_novel_novelclassify_v1_novel_classify_proto_rawDescOnce.Do(func() {
		file_api_novel_novelclassify_v1_novel_classify_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_novel_novelclassify_v1_novel_classify_proto_rawDescData)
	})
	return file_api_novel_novelclassify_v1_novel_classify_proto_rawDescData
}

var file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_novel_novelclassify_v1_novel_classify_proto_goTypes = []interface{}{
	(*NovelClassifyPageReq)(nil),        // 0: novelclassify.v1.NovelClassifyPageReq
	(*NovelClassifyPageReply)(nil),      // 1: novelclassify.v1.NovelClassifyPageReply
	(*NovelClassifyReq)(nil),            // 2: novelclassify.v1.NovelClassifyReq
	(*NovelClassifyReply)(nil),          // 3: novelclassify.v1.NovelClassifyReply
	(*NovelClassifyCreateReq)(nil),      // 4: novelclassify.v1.NovelClassifyCreateReq
	(*NovelClassifyCreateReply)(nil),    // 5: novelclassify.v1.NovelClassifyCreateReply
	(*NovelClassifyUpdateReq)(nil),      // 6: novelclassify.v1.NovelClassifyUpdateReq
	(*NovelClassifyUpdateReply)(nil),    // 7: novelclassify.v1.NovelClassifyUpdateReply
	(*NovelClassifyDeleteReq)(nil),      // 8: novelclassify.v1.NovelClassifyDeleteReq
	(*NovelClassifyBatchDeleteReq)(nil), // 9: novelclassify.v1.NovelClassifyBatchDeleteReq
	(*NovelClassifyDeleteReply)(nil),    // 10: novelclassify.v1.NovelClassifyDeleteReply
	(*pagin.Pagination)(nil),            // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),       // 12: google.protobuf.Timestamp
}
var file_api_novel_novelclassify_v1_novel_classify_proto_depIdxs = []int32{
	11, // 0: novelclassify.v1.NovelClassifyPageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: novelclassify.v1.NovelClassifyPageReq.param:type_name -> novelclassify.v1.NovelClassifyReq
	11, // 2: novelclassify.v1.NovelClassifyPageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: novelclassify.v1.NovelClassifyPageReply.items:type_name -> novelclassify.v1.NovelClassifyReply
	12, // 4: novelclassify.v1.NovelClassifyReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: novelclassify.v1.NovelClassifyReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: novelclassify.v1.NovelClassifyReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: novelclassify.v1.NovelClassifyReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: novelclassify.v1.NovelClassifyCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: novelclassify.v1.NovelClassifyCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: novelclassify.v1.NovelClassify.GetPageNovelClassify:input_type -> novelclassify.v1.NovelClassifyPageReq
	2,  // 11: novelclassify.v1.NovelClassify.GetNovelClassify:input_type -> novelclassify.v1.NovelClassifyReq
	6,  // 12: novelclassify.v1.NovelClassify.UpdateNovelClassify:input_type -> novelclassify.v1.NovelClassifyUpdateReq
	4,  // 13: novelclassify.v1.NovelClassify.CreateNovelClassify:input_type -> novelclassify.v1.NovelClassifyCreateReq
	8,  // 14: novelclassify.v1.NovelClassify.DeleteNovelClassify:input_type -> novelclassify.v1.NovelClassifyDeleteReq
	9,  // 15: novelclassify.v1.NovelClassify.BatchDeleteNovelClassify:input_type -> novelclassify.v1.NovelClassifyBatchDeleteReq
	1,  // 16: novelclassify.v1.NovelClassify.GetPageNovelClassify:output_type -> novelclassify.v1.NovelClassifyPageReply
	3,  // 17: novelclassify.v1.NovelClassify.GetNovelClassify:output_type -> novelclassify.v1.NovelClassifyReply
	7,  // 18: novelclassify.v1.NovelClassify.UpdateNovelClassify:output_type -> novelclassify.v1.NovelClassifyUpdateReply
	5,  // 19: novelclassify.v1.NovelClassify.CreateNovelClassify:output_type -> novelclassify.v1.NovelClassifyCreateReply
	10, // 20: novelclassify.v1.NovelClassify.DeleteNovelClassify:output_type -> novelclassify.v1.NovelClassifyDeleteReply
	10, // 21: novelclassify.v1.NovelClassify.BatchDeleteNovelClassify:output_type -> novelclassify.v1.NovelClassifyDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_novel_novelclassify_v1_novel_classify_proto_init() }
func file_api_novel_novelclassify_v1_novel_classify_proto_init() {
	if File_api_novel_novelclassify_v1_novel_classify_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelClassifyPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelClassifyPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelClassifyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelClassifyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelClassifyCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelClassifyCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelClassifyUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelClassifyUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelClassifyDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelClassifyBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelClassifyDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_novel_novelclassify_v1_novel_classify_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_novel_novelclassify_v1_novel_classify_proto_goTypes,
		DependencyIndexes: file_api_novel_novelclassify_v1_novel_classify_proto_depIdxs,
		MessageInfos:      file_api_novel_novelclassify_v1_novel_classify_proto_msgTypes,
	}.Build()
	File_api_novel_novelclassify_v1_novel_classify_proto = out.File
	file_api_novel_novelclassify_v1_novel_classify_proto_rawDesc = nil
	file_api_novel_novelclassify_v1_novel_classify_proto_goTypes = nil
	file_api_novel_novelclassify_v1_novel_classify_proto_depIdxs = nil
}
