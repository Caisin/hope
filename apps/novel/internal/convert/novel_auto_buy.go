// Code generated by Caisin. DO NOT EDIT.
// source: apps/novel/internal/data/ent/schema/novel_auto_buy.go

package convert

import (
	"google.golang.org/protobuf/types/known/timestamppb"
	v1 "hope/api/novel/novelautobuy/v1"
	"hope/apps/novel/internal/data/ent"
)

func NovelAutoBuyUpdateReq2Data(v *v1.NovelAutoBuyUpdateReq) *ent.NovelAutoBuy {
	if v == nil {
		return nil
	}
	return &ent.NovelAutoBuy{
		ID:     v.Id,
		UserId: v.UserId,
	}
}

func NovelAutoBuyData2UpdateReq(v *ent.NovelAutoBuy) *v1.NovelAutoBuyUpdateReq {
	if v == nil {
		return nil
	}
	return &v1.NovelAutoBuyUpdateReq{
		Id:     v.ID,
		UserId: v.UserId,
	}
}

func NovelAutoBuyCreateReq2Data(v *v1.NovelAutoBuyCreateReq) *ent.NovelAutoBuy {
	if v == nil {
		return nil
	}
	return &ent.NovelAutoBuy{
		UserId: v.UserId,
	}
}

func NovelAutoBuyData2CreateReq(v *ent.NovelAutoBuy) *v1.NovelAutoBuyCreateReq {
	if v == nil {
		return nil
	}
	return &v1.NovelAutoBuyCreateReq{
		UserId: v.UserId,
	}
}

func NovelAutoBuyReq2Data(v *v1.NovelAutoBuyReq) *ent.NovelAutoBuy {
	if v == nil {
		return nil
	}
	return &ent.NovelAutoBuy{
		UserId: v.UserId,
	}
}

func NovelAutoBuyData2Req(v *ent.NovelAutoBuy) *v1.NovelAutoBuyReq {
	if v == nil {
		return nil
	}
	return &v1.NovelAutoBuyReq{
		UserId: v.UserId,
	}
}

func NovelAutoBuyReply2Data(v *v1.NovelAutoBuyReply) *ent.NovelAutoBuy {
	if v == nil {
		return nil
	}
	return &ent.NovelAutoBuy{
		ID:        v.Id,
		UserId:    v.UserId,
		NovelId:   v.NovelId,
		CreatedAt: v.CreatedAt.AsTime(),
		UpdatedAt: v.UpdatedAt.AsTime(),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func NovelAutoBuyData2Reply(v *ent.NovelAutoBuy) *v1.NovelAutoBuyReply {
	if v == nil {
		return nil
	}
	return &v1.NovelAutoBuyReply{
		Id:        v.ID,
		UserId:    v.UserId,
		NovelId:   v.NovelId,
		CreatedAt: timestamppb.New(v.CreatedAt),
		UpdatedAt: timestamppb.New(v.UpdatedAt),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func NovelAutoBuyUpdateReply2Data(v *v1.NovelAutoBuyUpdateReply) *ent.NovelAutoBuy {
	if v == nil {
		return nil
	}
	return &ent.NovelAutoBuy{
		ID:     v.Id,
		UserId: v.UserId,
	}
}

func NovelAutoBuyData2UpdateReply(v *ent.NovelAutoBuy) *v1.NovelAutoBuyUpdateReply {
	if v == nil {
		return nil
	}
	return &v1.NovelAutoBuyUpdateReply{
		Id:     v.ID,
		UserId: v.UserId,
	}
}

func NovelAutoBuyCreateReply2Data(v *v1.NovelAutoBuyCreateReply) *ent.NovelAutoBuy {
	if v == nil {
		return nil
	}
	return &ent.NovelAutoBuy{
		ID:        v.Id,
		UserId:    v.UserId,
		NovelId:   v.NovelId,
		CreatedAt: v.CreatedAt.AsTime(),
		UpdatedAt: v.UpdatedAt.AsTime(),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func NovelAutoBuyData2CreateReply(v *ent.NovelAutoBuy) *v1.NovelAutoBuyCreateReply {
	if v == nil {
		return nil
	}
	return &v1.NovelAutoBuyCreateReply{
		Id:        v.ID,
		UserId:    v.UserId,
		NovelId:   v.NovelId,
		CreatedAt: timestamppb.New(v.CreatedAt),
		UpdatedAt: timestamppb.New(v.UpdatedAt),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}
