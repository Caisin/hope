// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/param/pageconfig/v1/page_config.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type PageConfigData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//页面编码
	PageCode string `protobuf:"bytes,2,opt,name=pageCode,proto3" json:"pageCode,omitempty"`
	//页面名称
	PageName string `protobuf:"bytes,3,opt,name=pageName,proto3" json:"pageName,omitempty"`
	//分组编码集,逗号分割
	GroupCodes string `protobuf:"bytes,4,opt,name=groupCodes,proto3" json:"groupCodes,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,8,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,9,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *PageConfigData) Reset() {
	*x = PageConfigData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigData) ProtoMessage() {}

func (x *PageConfigData) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigData.ProtoReflect.Descriptor instead.
func (*PageConfigData) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{0}
}

func (x *PageConfigData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PageConfigData) GetPageCode() string {
	if x != nil {
		return x.PageCode
	}
	return ""
}

func (x *PageConfigData) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *PageConfigData) GetGroupCodes() string {
	if x != nil {
		return x.GroupCodes
	}
	return ""
}

func (x *PageConfigData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PageConfigData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PageConfigData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *PageConfigData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *PageConfigData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type PageConfigPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *PageConfigReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *PageConfigPageReq) Reset() {
	*x = PageConfigPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigPageReq) ProtoMessage() {}

func (x *PageConfigPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigPageReq.ProtoReflect.Descriptor instead.
func (*PageConfigPageReq) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{1}
}

func (x *PageConfigPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *PageConfigPageReq) GetParam() *PageConfigReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type PageConfigPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*PageConfigData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *PageConfigPageReply) Reset() {
	*x = PageConfigPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigPageReply) ProtoMessage() {}

func (x *PageConfigPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigPageReply.ProtoReflect.Descriptor instead.
func (*PageConfigPageReply) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{2}
}

func (x *PageConfigPageReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PageConfigPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PageConfigPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageConfigPageReply) GetItems() []*PageConfigData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type PageConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//页面编码
	PageCode string `protobuf:"bytes,2,opt,name=pageCode,proto3" json:"pageCode,omitempty"`
	//页面名称
	PageName string `protobuf:"bytes,3,opt,name=pageName,proto3" json:"pageName,omitempty"`
	//分组编码集,逗号分割
	GroupCodes string `protobuf:"bytes,4,opt,name=groupCodes,proto3" json:"groupCodes,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,8,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,9,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *PageConfigReq) Reset() {
	*x = PageConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigReq) ProtoMessage() {}

func (x *PageConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigReq.ProtoReflect.Descriptor instead.
func (*PageConfigReq) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{3}
}

func (x *PageConfigReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PageConfigReq) GetPageCode() string {
	if x != nil {
		return x.PageCode
	}
	return ""
}

func (x *PageConfigReq) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *PageConfigReq) GetGroupCodes() string {
	if x != nil {
		return x.GroupCodes
	}
	return ""
}

func (x *PageConfigReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PageConfigReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PageConfigReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *PageConfigReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *PageConfigReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type PageConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *PageConfigData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PageConfigReply) Reset() {
	*x = PageConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigReply) ProtoMessage() {}

func (x *PageConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigReply.ProtoReflect.Descriptor instead.
func (*PageConfigReply) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{4}
}

func (x *PageConfigReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PageConfigReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PageConfigReply) GetResult() *PageConfigData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建PageConfig请求
type PageConfigCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//页面编码
	PageCode string `protobuf:"bytes,1,opt,name=pageCode,proto3" json:"pageCode,omitempty"`
	//页面名称
	PageName string `protobuf:"bytes,2,opt,name=pageName,proto3" json:"pageName,omitempty"`
	//分组编码集,逗号分割
	GroupCodes string `protobuf:"bytes,3,opt,name=groupCodes,proto3" json:"groupCodes,omitempty"`
}

func (x *PageConfigCreateReq) Reset() {
	*x = PageConfigCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigCreateReq) ProtoMessage() {}

func (x *PageConfigCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigCreateReq.ProtoReflect.Descriptor instead.
func (*PageConfigCreateReq) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{5}
}

func (x *PageConfigCreateReq) GetPageCode() string {
	if x != nil {
		return x.PageCode
	}
	return ""
}

func (x *PageConfigCreateReq) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *PageConfigCreateReq) GetGroupCodes() string {
	if x != nil {
		return x.GroupCodes
	}
	return ""
}

// 创建PageConfig返回
type PageConfigCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *PageConfigData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PageConfigCreateReply) Reset() {
	*x = PageConfigCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigCreateReply) ProtoMessage() {}

func (x *PageConfigCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigCreateReply.ProtoReflect.Descriptor instead.
func (*PageConfigCreateReply) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{6}
}

func (x *PageConfigCreateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PageConfigCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PageConfigCreateReply) GetResult() *PageConfigData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新PageConfig请求
type PageConfigUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//页面编码
	PageCode string `protobuf:"bytes,2,opt,name=pageCode,proto3" json:"pageCode,omitempty"`
	//页面名称
	PageName string `protobuf:"bytes,3,opt,name=pageName,proto3" json:"pageName,omitempty"`
	//分组编码集,逗号分割
	GroupCodes string `protobuf:"bytes,4,opt,name=groupCodes,proto3" json:"groupCodes,omitempty"`
}

func (x *PageConfigUpdateReq) Reset() {
	*x = PageConfigUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigUpdateReq) ProtoMessage() {}

func (x *PageConfigUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigUpdateReq.ProtoReflect.Descriptor instead.
func (*PageConfigUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{7}
}

func (x *PageConfigUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PageConfigUpdateReq) GetPageCode() string {
	if x != nil {
		return x.PageCode
	}
	return ""
}

func (x *PageConfigUpdateReq) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *PageConfigUpdateReq) GetGroupCodes() string {
	if x != nil {
		return x.GroupCodes
	}
	return ""
}

// 更新PageConfig返回
type PageConfigUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *PageConfigData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PageConfigUpdateReply) Reset() {
	*x = PageConfigUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigUpdateReply) ProtoMessage() {}

func (x *PageConfigUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigUpdateReply.ProtoReflect.Descriptor instead.
func (*PageConfigUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{8}
}

func (x *PageConfigUpdateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PageConfigUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PageConfigUpdateReply) GetResult() *PageConfigData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除PageConfig请求
type PageConfigDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PageConfigDeleteReq) Reset() {
	*x = PageConfigDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigDeleteReq) ProtoMessage() {}

func (x *PageConfigDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigDeleteReq.ProtoReflect.Descriptor instead.
func (*PageConfigDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{9}
}

func (x *PageConfigDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除PageConfig请求
type PageConfigBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *PageConfigBatchDeleteReq) Reset() {
	*x = PageConfigBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigBatchDeleteReq) ProtoMessage() {}

func (x *PageConfigBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*PageConfigBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{10}
}

func (x *PageConfigBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除PageConfig返回
type PageConfigDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PageConfigDeleteReply) Reset() {
	*x = PageConfigDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageConfigDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageConfigDeleteReply) ProtoMessage() {}

func (x *PageConfigDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_pageconfig_v1_page_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageConfigDeleteReply.ProtoReflect.Descriptor instead.
func (*PageConfigDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP(), []int{11}
}

func (x *PageConfigDeleteReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PageConfigDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PageConfigDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_param_pageconfig_v1_page_config_proto protoreflect.FileDescriptor

var file_api_param_pageconfig_v1_page_config_proto_rawDesc = []byte{
	0x0a, 0x29, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2f, 0x70, 0x61, 0x67, 0x65,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x70, 0x61, 0x67,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc0, 0x02, 0x0a, 0x0e, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x11, 0x50,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x8e, 0x01,
	0x0a, 0x13, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xbf,
	0x02, 0x0a, 0x0d, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x76, 0x0a, 0x0f, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x35, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x6d, 0x0a, 0x13, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x15, 0x50, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x7d, 0x0a, 0x13, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x15, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x61,
	0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x25, 0x0a, 0x13, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x18, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x5d, 0x0a, 0x15, 0x50, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xe8, 0x05, 0x0a, 0x0a, 0x50, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x77, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x2e, 0x70, 0x61, 0x67,
	0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x70,
	0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61,
	0x67, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x6b,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1c, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e,
	0x70, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7d, 0x0a, 0x10, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x22, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x19, 0x1a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x78, 0x0a, 0x10, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22,
	0x2e, 0x70, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14,
	0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x3a, 0x01, 0x2a, 0x12, 0x7a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70,
	0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x7f, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x2e, 0x70, 0x61, 0x67, 0x65,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11,
	0x2a, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x21, 0x5a, 0x1f, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_param_pageconfig_v1_page_config_proto_rawDescOnce sync.Once
	file_api_param_pageconfig_v1_page_config_proto_rawDescData = file_api_param_pageconfig_v1_page_config_proto_rawDesc
)

func file_api_param_pageconfig_v1_page_config_proto_rawDescGZIP() []byte {
	file_api_param_pageconfig_v1_page_config_proto_rawDescOnce.Do(func() {
		file_api_param_pageconfig_v1_page_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_param_pageconfig_v1_page_config_proto_rawDescData)
	})
	return file_api_param_pageconfig_v1_page_config_proto_rawDescData
}

var file_api_param_pageconfig_v1_page_config_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_param_pageconfig_v1_page_config_proto_goTypes = []interface{}{
	(*PageConfigData)(nil),           // 0: pageconfig.v1.PageConfigData
	(*PageConfigPageReq)(nil),        // 1: pageconfig.v1.PageConfigPageReq
	(*PageConfigPageReply)(nil),      // 2: pageconfig.v1.PageConfigPageReply
	(*PageConfigReq)(nil),            // 3: pageconfig.v1.PageConfigReq
	(*PageConfigReply)(nil),          // 4: pageconfig.v1.PageConfigReply
	(*PageConfigCreateReq)(nil),      // 5: pageconfig.v1.PageConfigCreateReq
	(*PageConfigCreateReply)(nil),    // 6: pageconfig.v1.PageConfigCreateReply
	(*PageConfigUpdateReq)(nil),      // 7: pageconfig.v1.PageConfigUpdateReq
	(*PageConfigUpdateReply)(nil),    // 8: pageconfig.v1.PageConfigUpdateReply
	(*PageConfigDeleteReq)(nil),      // 9: pageconfig.v1.PageConfigDeleteReq
	(*PageConfigBatchDeleteReq)(nil), // 10: pageconfig.v1.PageConfigBatchDeleteReq
	(*PageConfigDeleteReply)(nil),    // 11: pageconfig.v1.PageConfigDeleteReply
	(*timestamppb.Timestamp)(nil),    // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),         // 13: pagin.Pagination
}
var file_api_param_pageconfig_v1_page_config_proto_depIdxs = []int32{
	12, // 0: pageconfig.v1.PageConfigData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 1: pageconfig.v1.PageConfigData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 2: pageconfig.v1.PageConfigPageReq.pagin:type_name -> pagin.Pagination
	3,  // 3: pageconfig.v1.PageConfigPageReq.param:type_name -> pageconfig.v1.PageConfigReq
	0,  // 4: pageconfig.v1.PageConfigPageReply.items:type_name -> pageconfig.v1.PageConfigData
	12, // 5: pageconfig.v1.PageConfigReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 6: pageconfig.v1.PageConfigReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 7: pageconfig.v1.PageConfigReply.result:type_name -> pageconfig.v1.PageConfigData
	0,  // 8: pageconfig.v1.PageConfigCreateReply.result:type_name -> pageconfig.v1.PageConfigData
	0,  // 9: pageconfig.v1.PageConfigUpdateReply.result:type_name -> pageconfig.v1.PageConfigData
	1,  // 10: pageconfig.v1.PageConfig.GetPageConfigPage:input_type -> pageconfig.v1.PageConfigPageReq
	3,  // 11: pageconfig.v1.PageConfig.GetPageConfig:input_type -> pageconfig.v1.PageConfigReq
	7,  // 12: pageconfig.v1.PageConfig.UpdatePageConfig:input_type -> pageconfig.v1.PageConfigUpdateReq
	5,  // 13: pageconfig.v1.PageConfig.CreatePageConfig:input_type -> pageconfig.v1.PageConfigCreateReq
	9,  // 14: pageconfig.v1.PageConfig.DeletePageConfig:input_type -> pageconfig.v1.PageConfigDeleteReq
	10, // 15: pageconfig.v1.PageConfig.BatchDeletePageConfig:input_type -> pageconfig.v1.PageConfigBatchDeleteReq
	2,  // 16: pageconfig.v1.PageConfig.GetPageConfigPage:output_type -> pageconfig.v1.PageConfigPageReply
	4,  // 17: pageconfig.v1.PageConfig.GetPageConfig:output_type -> pageconfig.v1.PageConfigReply
	8,  // 18: pageconfig.v1.PageConfig.UpdatePageConfig:output_type -> pageconfig.v1.PageConfigUpdateReply
	6,  // 19: pageconfig.v1.PageConfig.CreatePageConfig:output_type -> pageconfig.v1.PageConfigCreateReply
	11, // 20: pageconfig.v1.PageConfig.DeletePageConfig:output_type -> pageconfig.v1.PageConfigDeleteReply
	11, // 21: pageconfig.v1.PageConfig.BatchDeletePageConfig:output_type -> pageconfig.v1.PageConfigDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_param_pageconfig_v1_page_config_proto_init() }
func file_api_param_pageconfig_v1_page_config_proto_init() {
	if File_api_param_pageconfig_v1_page_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_pageconfig_v1_page_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageConfigDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_param_pageconfig_v1_page_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_param_pageconfig_v1_page_config_proto_goTypes,
		DependencyIndexes: file_api_param_pageconfig_v1_page_config_proto_depIdxs,
		MessageInfos:      file_api_param_pageconfig_v1_page_config_proto_msgTypes,
	}.Build()
	File_api_param_pageconfig_v1_page_config_proto = out.File
	file_api_param_pageconfig_v1_page_config_proto_rawDesc = nil
	file_api_param_pageconfig_v1_page_config_proto_goTypes = nil
	file_api_param_pageconfig_v1_page_config_proto_depIdxs = nil
}
