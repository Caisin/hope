syntax = "proto3";
package sysconfig.v1;

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/descriptor.proto";
import "pagin.proto";

option go_package = "hope/api/admin/sysconfig/v1;v1";

// The SysConfig service definition.
service SysConfig {

  // 分页查询SysConfig
  rpc GetPageSysConfig (SysConfigPageReq) returns (SysConfigPageReply)  {
    option (google.api.http) = {
      get: "/v1/sysconfig/page"
    };
  }

  // 获取SysConfig
  rpc GetSysConfig (SysConfigReq) returns (SysConfigReply)  {
    option (google.api.http) = {
      get: "/v1/sysconfig/{id}"
    };
  }

  // 更新SysConfig
  rpc UpdateSysConfig (SysConfigUpdateReq) returns (SysConfigUpdateReply)  {
    option (google.api.http) = {
      put: "/v1/sysconfig/{id}"
      body: "*"
    };
  }

  // 创建SysConfig
  rpc CreateSysConfig (SysConfigCreateReq) returns (SysConfigCreateReply)  {
    option (google.api.http) = {
      post: "/v1/sysconfig"
      body: "*"
    };
  }

  // 删除SysConfig
  rpc DeleteSysConfig (SysConfigDeleteReq) returns (SysConfigDeleteReply)  {
    option (google.api.http) = {
      delete: "/v1/sysconfig/{id}"
    };
  }

  // 批量删除SysConfig
  rpc BatchDeleteSysConfig (SysConfigBatchDeleteReq) returns (SysConfigDeleteReply)  {
    option (google.api.http) = {
      delete: "/v1/sysconfig"
    };
  }

}

// 查询搜索请求
message SysConfigPageReq {
    //分页查询参数
    pagin.Pagination pagin = 1;
    //查询条件参数
    SysConfigReq param = 2;
}

// 查询搜索返回
message SysConfigPageReply {
    //分页参数
    pagin.Pagination pagin = 1;
    //查询条目
    repeated SysConfigReply items = 2;
}


// 查询搜索请求
message SysConfigReq {
    int64 id = 1;
    //配置名称
    string configName = 2;
    //配置Key
    string configKey = 3;
    //配置值
    string configValue = 4;
    //配置类型
    string configType = 5;
    //是否前台
    int32 isFrontend = 6;
    //状态:U:使用状态,E:失效状态
    string state = 7;
    //备注
    string remark = 8;
    //创建时间
    google.protobuf.Timestamp createdAt = 9;
    //更新时间
    google.protobuf.Timestamp updatedAt = 10;
    //创建者
    int64 createBy = 11;
    //更新者
    int64 updateBy = 12;
    //租户
    int64 tenantId = 13;

}

// 查询搜索返回
message SysConfigReply {
    int64 id = 1;
    //配置名称
    string configName = 2;
    //配置Key
    string configKey = 3;
    //配置值
    string configValue = 4;
    //配置类型
    string configType = 5;
    //是否前台
    int32 isFrontend = 6;
    //状态:U:使用状态,E:失效状态
    string state = 7;
    //备注
    string remark = 8;
    //创建时间
    google.protobuf.Timestamp createdAt = 9;
    //更新时间
    google.protobuf.Timestamp updatedAt = 10;
    //创建者
    int64 createBy = 11;
    //更新者
    int64 updateBy = 12;
    //租户
    int64 tenantId = 13;

}

// 创建SysConfig请求
message SysConfigCreateReq {
    //配置名称
    string configName = 1;
    //配置Key
    string configKey = 2;
    //配置值
    string configValue = 3;
    //配置类型
    string configType = 4;
    //是否前台
    int32 isFrontend = 5;
    //状态:U:使用状态,E:失效状态
    string state = 6;
    //备注
    string remark = 7;

}

// 创建SysConfig返回
message SysConfigCreateReply {
    int64 id = 1;
    //配置名称
    string configName = 2;
    //配置Key
    string configKey = 3;
    //配置值
    string configValue = 4;
    //配置类型
    string configType = 5;
    //是否前台
    int32 isFrontend = 6;
    //状态:U:使用状态,E:失效状态
    string state = 7;
    //备注
    string remark = 8;
    //创建时间
    google.protobuf.Timestamp createdAt = 9;
    //更新时间
    google.protobuf.Timestamp updatedAt = 10;
    //创建者
    int64 createBy = 11;
    //更新者
    int64 updateBy = 12;
    //租户
    int64 tenantId = 13;

}

// 更新SysConfig请求
message SysConfigUpdateReq {
    int64 id = 1;
    //配置名称
    string configName = 2;
    //配置Key
    string configKey = 3;
    //配置值
    string configValue = 4;
    //配置类型
    string configType = 5;
    //是否前台
    int32 isFrontend = 6;
    //状态:U:使用状态,E:失效状态
    string state = 7;
    //备注
    string remark = 8;

}


// 更新SysConfig返回
message SysConfigUpdateReply {
    int64 id = 1;
    //配置名称
    string configName = 2;
    //配置Key
    string configKey = 3;
    //配置值
    string configValue = 4;
    //配置类型
    string configType = 5;
    //是否前台
    int32 isFrontend = 6;
    //状态:U:使用状态,E:失效状态
    string state = 7;
    //备注
    string remark = 8;

}

// 删除SysConfig请求
message SysConfigDeleteReq {
    int64 id = 1;
}


// 批量删除SysConfig请求
message SysConfigBatchDeleteReq {
    repeated int64 ids = 1;
}


// 删除SysConfig返回
message SysConfigDeleteReply {
    bool result = 1;
}

