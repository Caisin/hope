// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/param/viptype/v1/vip_type.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type VipTypePageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *VipTypeReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *VipTypePageReq) Reset() {
	*x = VipTypePageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipTypePageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipTypePageReq) ProtoMessage() {}

func (x *VipTypePageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipTypePageReq.ProtoReflect.Descriptor instead.
func (*VipTypePageReq) Descriptor() ([]byte, []int) {
	return file_api_param_viptype_v1_vip_type_proto_rawDescGZIP(), []int{0}
}

func (x *VipTypePageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *VipTypePageReq) GetParam() *VipTypeReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type VipTypePageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*VipTypeReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *VipTypePageReply) Reset() {
	*x = VipTypePageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipTypePageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipTypePageReply) ProtoMessage() {}

func (x *VipTypePageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipTypePageReply.ProtoReflect.Descriptor instead.
func (*VipTypePageReply) Descriptor() ([]byte, []int) {
	return file_api_param_viptype_v1_vip_type_proto_rawDescGZIP(), []int{1}
}

func (x *VipTypePageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *VipTypePageReply) GetItems() []*VipTypeReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type VipTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//账本名称
	VipName string `protobuf:"bytes,2,opt,name=vipName,proto3" json:"vipName,omitempty"`
	//是否超级vip
	IsSuper bool `protobuf:"varint,3,opt,name=isSuper,proto3" json:"isSuper,omitempty"`
	//有效天数
	ValidDays int32 `protobuf:"varint,4,opt,name=validDays,proto3" json:"validDays,omitempty"`
	//折扣率
	DiscountRate int64 `protobuf:"varint,5,opt,name=discountRate,proto3" json:"discountRate,omitempty"`
	//头像ID
	AvatarId int64 `protobuf:"varint,6,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
	//描述
	Summary string `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,12,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *VipTypeReq) Reset() {
	*x = VipTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipTypeReq) ProtoMessage() {}

func (x *VipTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipTypeReq.ProtoReflect.Descriptor instead.
func (*VipTypeReq) Descriptor() ([]byte, []int) {
	return file_api_param_viptype_v1_vip_type_proto_rawDescGZIP(), []int{2}
}

func (x *VipTypeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipTypeReq) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *VipTypeReq) GetIsSuper() bool {
	if x != nil {
		return x.IsSuper
	}
	return false
}

func (x *VipTypeReq) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

func (x *VipTypeReq) GetDiscountRate() int64 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *VipTypeReq) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *VipTypeReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *VipTypeReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VipTypeReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *VipTypeReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *VipTypeReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *VipTypeReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type VipTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//账本名称
	VipName string `protobuf:"bytes,2,opt,name=vipName,proto3" json:"vipName,omitempty"`
	//是否超级vip
	IsSuper bool `protobuf:"varint,3,opt,name=isSuper,proto3" json:"isSuper,omitempty"`
	//有效天数
	ValidDays int32 `protobuf:"varint,4,opt,name=validDays,proto3" json:"validDays,omitempty"`
	//折扣率
	DiscountRate int64 `protobuf:"varint,5,opt,name=discountRate,proto3" json:"discountRate,omitempty"`
	//头像ID
	AvatarId int64 `protobuf:"varint,6,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
	//描述
	Summary string `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,12,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *VipTypeReply) Reset() {
	*x = VipTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipTypeReply) ProtoMessage() {}

func (x *VipTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipTypeReply.ProtoReflect.Descriptor instead.
func (*VipTypeReply) Descriptor() ([]byte, []int) {
	return file_api_param_viptype_v1_vip_type_proto_rawDescGZIP(), []int{3}
}

func (x *VipTypeReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipTypeReply) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *VipTypeReply) GetIsSuper() bool {
	if x != nil {
		return x.IsSuper
	}
	return false
}

func (x *VipTypeReply) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

func (x *VipTypeReply) GetDiscountRate() int64 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *VipTypeReply) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *VipTypeReply) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *VipTypeReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VipTypeReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *VipTypeReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *VipTypeReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *VipTypeReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建VipType请求
type VipTypeCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//账本名称
	VipName string `protobuf:"bytes,1,opt,name=vipName,proto3" json:"vipName,omitempty"`
	//是否超级vip
	IsSuper bool `protobuf:"varint,2,opt,name=isSuper,proto3" json:"isSuper,omitempty"`
	//有效天数
	ValidDays int32 `protobuf:"varint,3,opt,name=validDays,proto3" json:"validDays,omitempty"`
	//折扣率
	DiscountRate int64 `protobuf:"varint,4,opt,name=discountRate,proto3" json:"discountRate,omitempty"`
	//头像ID
	AvatarId int64 `protobuf:"varint,5,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
	//描述
	Summary string `protobuf:"bytes,6,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *VipTypeCreateReq) Reset() {
	*x = VipTypeCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipTypeCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipTypeCreateReq) ProtoMessage() {}

func (x *VipTypeCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipTypeCreateReq.ProtoReflect.Descriptor instead.
func (*VipTypeCreateReq) Descriptor() ([]byte, []int) {
	return file_api_param_viptype_v1_vip_type_proto_rawDescGZIP(), []int{4}
}

func (x *VipTypeCreateReq) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *VipTypeCreateReq) GetIsSuper() bool {
	if x != nil {
		return x.IsSuper
	}
	return false
}

func (x *VipTypeCreateReq) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

func (x *VipTypeCreateReq) GetDiscountRate() int64 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *VipTypeCreateReq) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *VipTypeCreateReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

// 创建VipType返回
type VipTypeCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//账本名称
	VipName string `protobuf:"bytes,2,opt,name=vipName,proto3" json:"vipName,omitempty"`
	//是否超级vip
	IsSuper bool `protobuf:"varint,3,opt,name=isSuper,proto3" json:"isSuper,omitempty"`
	//有效天数
	ValidDays int32 `protobuf:"varint,4,opt,name=validDays,proto3" json:"validDays,omitempty"`
	//折扣率
	DiscountRate int64 `protobuf:"varint,5,opt,name=discountRate,proto3" json:"discountRate,omitempty"`
	//头像ID
	AvatarId int64 `protobuf:"varint,6,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
	//描述
	Summary string `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,12,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *VipTypeCreateReply) Reset() {
	*x = VipTypeCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipTypeCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipTypeCreateReply) ProtoMessage() {}

func (x *VipTypeCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipTypeCreateReply.ProtoReflect.Descriptor instead.
func (*VipTypeCreateReply) Descriptor() ([]byte, []int) {
	return file_api_param_viptype_v1_vip_type_proto_rawDescGZIP(), []int{5}
}

func (x *VipTypeCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipTypeCreateReply) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *VipTypeCreateReply) GetIsSuper() bool {
	if x != nil {
		return x.IsSuper
	}
	return false
}

func (x *VipTypeCreateReply) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

func (x *VipTypeCreateReply) GetDiscountRate() int64 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *VipTypeCreateReply) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *VipTypeCreateReply) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *VipTypeCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *VipTypeCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *VipTypeCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *VipTypeCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *VipTypeCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新VipType请求
type VipTypeUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//账本名称
	VipName string `protobuf:"bytes,2,opt,name=vipName,proto3" json:"vipName,omitempty"`
	//是否超级vip
	IsSuper bool `protobuf:"varint,3,opt,name=isSuper,proto3" json:"isSuper,omitempty"`
	//有效天数
	ValidDays int32 `protobuf:"varint,4,opt,name=validDays,proto3" json:"validDays,omitempty"`
	//折扣率
	DiscountRate int64 `protobuf:"varint,5,opt,name=discountRate,proto3" json:"discountRate,omitempty"`
	//头像ID
	AvatarId int64 `protobuf:"varint,6,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
	//描述
	Summary string `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *VipTypeUpdateReq) Reset() {
	*x = VipTypeUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipTypeUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipTypeUpdateReq) ProtoMessage() {}

func (x *VipTypeUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipTypeUpdateReq.ProtoReflect.Descriptor instead.
func (*VipTypeUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_param_viptype_v1_vip_type_proto_rawDescGZIP(), []int{6}
}

func (x *VipTypeUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipTypeUpdateReq) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *VipTypeUpdateReq) GetIsSuper() bool {
	if x != nil {
		return x.IsSuper
	}
	return false
}

func (x *VipTypeUpdateReq) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

func (x *VipTypeUpdateReq) GetDiscountRate() int64 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *VipTypeUpdateReq) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *VipTypeUpdateReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

// 更新VipType返回
type VipTypeUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//账本名称
	VipName string `protobuf:"bytes,2,opt,name=vipName,proto3" json:"vipName,omitempty"`
	//是否超级vip
	IsSuper bool `protobuf:"varint,3,opt,name=isSuper,proto3" json:"isSuper,omitempty"`
	//有效天数
	ValidDays int32 `protobuf:"varint,4,opt,name=validDays,proto3" json:"validDays,omitempty"`
	//折扣率
	DiscountRate int64 `protobuf:"varint,5,opt,name=discountRate,proto3" json:"discountRate,omitempty"`
	//头像ID
	AvatarId int64 `protobuf:"varint,6,opt,name=avatarId,proto3" json:"avatarId,omitempty"`
	//描述
	Summary string `protobuf:"bytes,7,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *VipTypeUpdateReply) Reset() {
	*x = VipTypeUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipTypeUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipTypeUpdateReply) ProtoMessage() {}

func (x *VipTypeUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipTypeUpdateReply.ProtoReflect.Descriptor instead.
func (*VipTypeUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_param_viptype_v1_vip_type_proto_rawDescGZIP(), []int{7}
}

func (x *VipTypeUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipTypeUpdateReply) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *VipTypeUpdateReply) GetIsSuper() bool {
	if x != nil {
		return x.IsSuper
	}
	return false
}

func (x *VipTypeUpdateReply) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

func (x *VipTypeUpdateReply) GetDiscountRate() int64 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *VipTypeUpdateReply) GetAvatarId() int64 {
	if x != nil {
		return x.AvatarId
	}
	return 0
}

func (x *VipTypeUpdateReply) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

// 删除VipType请求
type VipTypeDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *VipTypeDeleteReq) Reset() {
	*x = VipTypeDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipTypeDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipTypeDeleteReq) ProtoMessage() {}

func (x *VipTypeDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipTypeDeleteReq.ProtoReflect.Descriptor instead.
func (*VipTypeDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_viptype_v1_vip_type_proto_rawDescGZIP(), []int{8}
}

func (x *VipTypeDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除VipType请求
type VipTypeBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *VipTypeBatchDeleteReq) Reset() {
	*x = VipTypeBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipTypeBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipTypeBatchDeleteReq) ProtoMessage() {}

func (x *VipTypeBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipTypeBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*VipTypeBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_viptype_v1_vip_type_proto_rawDescGZIP(), []int{9}
}

func (x *VipTypeBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除VipType返回
type VipTypeDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *VipTypeDeleteReply) Reset() {
	*x = VipTypeDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VipTypeDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipTypeDeleteReply) ProtoMessage() {}

func (x *VipTypeDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_viptype_v1_vip_type_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipTypeDeleteReply.ProtoReflect.Descriptor instead.
func (*VipTypeDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_param_viptype_v1_vip_type_proto_rawDescGZIP(), []int{10}
}

func (x *VipTypeDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_param_viptype_v1_vip_type_proto protoreflect.FileDescriptor

var file_api_param_viptype_v1_vip_type_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2f, 0x76, 0x69, 0x70, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x67, 0x0a, 0x0e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x69, 0x70, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x6b, 0x0a, 0x10, 0x56, 0x69, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x90, 0x03, 0x0a, 0x0a, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x44, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x92, 0x03, 0x0a, 0x0c, 0x56, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x70, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xbe, 0x01,
	0x0a, 0x10, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44,
	0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x98,
	0x03, 0x0a, 0x12, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xce, 0x01, 0x0a, 0x10, 0x56, 0x69,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x53, 0x75, 0x70,
	0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0xd0, 0x01, 0x0a, 0x12, 0x56,
	0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x53, 0x75, 0x70, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x53, 0x75, 0x70, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61,
	0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44,
	0x61, 0x79, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x22, 0x22, 0x0a,
	0x10, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x29, 0x0a, 0x15, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x12,
	0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xf3, 0x04, 0x0a, 0x07, 0x56,
	0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x64, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x2e, 0x76, 0x69, 0x70, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f,
	0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x58, 0x0a, 0x0a,
	0x47, 0x65, 0x74, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x2e, 0x76, 0x69, 0x70,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x18, 0x2e, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x2e, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x1a, 0x10, 0x2f,
	0x76, 0x31, 0x2f, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a,
	0x01, 0x2a, 0x12, 0x65, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1c, 0x2e, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x1e, 0x2e, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56,
	0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x76,
	0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x67, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x2e, 0x76, 0x69, 0x70,
	0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x76, 0x69, 0x70, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12,
	0x2a, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x6c, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x2e, 0x76, 0x69, 0x70, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x76, 0x69,
	0x70, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x13, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0d, 0x2a, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65,
	0x42, 0x1e, 0x5a, 0x1c, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x2f, 0x76, 0x69, 0x70, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_param_viptype_v1_vip_type_proto_rawDescOnce sync.Once
	file_api_param_viptype_v1_vip_type_proto_rawDescData = file_api_param_viptype_v1_vip_type_proto_rawDesc
)

func file_api_param_viptype_v1_vip_type_proto_rawDescGZIP() []byte {
	file_api_param_viptype_v1_vip_type_proto_rawDescOnce.Do(func() {
		file_api_param_viptype_v1_vip_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_param_viptype_v1_vip_type_proto_rawDescData)
	})
	return file_api_param_viptype_v1_vip_type_proto_rawDescData
}

var file_api_param_viptype_v1_vip_type_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_param_viptype_v1_vip_type_proto_goTypes = []interface{}{
	(*VipTypePageReq)(nil),        // 0: viptype.v1.VipTypePageReq
	(*VipTypePageReply)(nil),      // 1: viptype.v1.VipTypePageReply
	(*VipTypeReq)(nil),            // 2: viptype.v1.VipTypeReq
	(*VipTypeReply)(nil),          // 3: viptype.v1.VipTypeReply
	(*VipTypeCreateReq)(nil),      // 4: viptype.v1.VipTypeCreateReq
	(*VipTypeCreateReply)(nil),    // 5: viptype.v1.VipTypeCreateReply
	(*VipTypeUpdateReq)(nil),      // 6: viptype.v1.VipTypeUpdateReq
	(*VipTypeUpdateReply)(nil),    // 7: viptype.v1.VipTypeUpdateReply
	(*VipTypeDeleteReq)(nil),      // 8: viptype.v1.VipTypeDeleteReq
	(*VipTypeBatchDeleteReq)(nil), // 9: viptype.v1.VipTypeBatchDeleteReq
	(*VipTypeDeleteReply)(nil),    // 10: viptype.v1.VipTypeDeleteReply
	(*pagin.Pagination)(nil),      // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_api_param_viptype_v1_vip_type_proto_depIdxs = []int32{
	11, // 0: viptype.v1.VipTypePageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: viptype.v1.VipTypePageReq.param:type_name -> viptype.v1.VipTypeReq
	11, // 2: viptype.v1.VipTypePageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: viptype.v1.VipTypePageReply.items:type_name -> viptype.v1.VipTypeReply
	12, // 4: viptype.v1.VipTypeReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: viptype.v1.VipTypeReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: viptype.v1.VipTypeReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: viptype.v1.VipTypeReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: viptype.v1.VipTypeCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: viptype.v1.VipTypeCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: viptype.v1.VipType.GetPageVipType:input_type -> viptype.v1.VipTypePageReq
	2,  // 11: viptype.v1.VipType.GetVipType:input_type -> viptype.v1.VipTypeReq
	6,  // 12: viptype.v1.VipType.UpdateVipType:input_type -> viptype.v1.VipTypeUpdateReq
	4,  // 13: viptype.v1.VipType.CreateVipType:input_type -> viptype.v1.VipTypeCreateReq
	8,  // 14: viptype.v1.VipType.DeleteVipType:input_type -> viptype.v1.VipTypeDeleteReq
	9,  // 15: viptype.v1.VipType.BatchDeleteVipType:input_type -> viptype.v1.VipTypeBatchDeleteReq
	1,  // 16: viptype.v1.VipType.GetPageVipType:output_type -> viptype.v1.VipTypePageReply
	3,  // 17: viptype.v1.VipType.GetVipType:output_type -> viptype.v1.VipTypeReply
	7,  // 18: viptype.v1.VipType.UpdateVipType:output_type -> viptype.v1.VipTypeUpdateReply
	5,  // 19: viptype.v1.VipType.CreateVipType:output_type -> viptype.v1.VipTypeCreateReply
	10, // 20: viptype.v1.VipType.DeleteVipType:output_type -> viptype.v1.VipTypeDeleteReply
	10, // 21: viptype.v1.VipType.BatchDeleteVipType:output_type -> viptype.v1.VipTypeDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_param_viptype_v1_vip_type_proto_init() }
func file_api_param_viptype_v1_vip_type_proto_init() {
	if File_api_param_viptype_v1_vip_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_param_viptype_v1_vip_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipTypePageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_viptype_v1_vip_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipTypePageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_viptype_v1_vip_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_viptype_v1_vip_type_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_viptype_v1_vip_type_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipTypeCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_viptype_v1_vip_type_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipTypeCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_viptype_v1_vip_type_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipTypeUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_viptype_v1_vip_type_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipTypeUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_viptype_v1_vip_type_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipTypeDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_viptype_v1_vip_type_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipTypeBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_viptype_v1_vip_type_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VipTypeDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_param_viptype_v1_vip_type_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_param_viptype_v1_vip_type_proto_goTypes,
		DependencyIndexes: file_api_param_viptype_v1_vip_type_proto_depIdxs,
		MessageInfos:      file_api_param_viptype_v1_vip_type_proto_msgTypes,
	}.Build()
	File_api_param_viptype_v1_vip_type_proto = out.File
	file_api_param_viptype_v1_vip_type_proto_rawDesc = nil
	file_api_param_viptype_v1_vip_type_proto_goTypes = nil
	file_api_param_viptype_v1_vip_type_proto_depIdxs = nil
}
