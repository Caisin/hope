// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/novel/novelautobuy/v1/novel_auto_buy.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type NovelAutoBuyData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	//小说编号
	NovelId int64 `protobuf:"varint,3,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,6,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,7,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,8,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelAutoBuyData) Reset() {
	*x = NovelAutoBuyData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyData) ProtoMessage() {}

func (x *NovelAutoBuyData) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyData.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyData) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{0}
}

func (x *NovelAutoBuyData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelAutoBuyData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NovelAutoBuyData) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *NovelAutoBuyData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelAutoBuyData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelAutoBuyData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelAutoBuyData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelAutoBuyData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type NovelAutoBuyPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *NovelAutoBuyReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *NovelAutoBuyPageReq) Reset() {
	*x = NovelAutoBuyPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyPageReq) ProtoMessage() {}

func (x *NovelAutoBuyPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyPageReq.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyPageReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{1}
}

func (x *NovelAutoBuyPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *NovelAutoBuyPageReq) GetParam() *NovelAutoBuyReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type NovelAutoBuyPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*NovelAutoBuyData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NovelAutoBuyPageReply) Reset() {
	*x = NovelAutoBuyPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyPageReply) ProtoMessage() {}

func (x *NovelAutoBuyPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyPageReply.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyPageReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{2}
}

func (x *NovelAutoBuyPageReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NovelAutoBuyPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NovelAutoBuyPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *NovelAutoBuyPageReply) GetItems() []*NovelAutoBuyData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type NovelAutoBuyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	//小说编号
	NovelId int64 `protobuf:"varint,3,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,6,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,7,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,8,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelAutoBuyReq) Reset() {
	*x = NovelAutoBuyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyReq) ProtoMessage() {}

func (x *NovelAutoBuyReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyReq.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{3}
}

func (x *NovelAutoBuyReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelAutoBuyReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NovelAutoBuyReq) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *NovelAutoBuyReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelAutoBuyReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelAutoBuyReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelAutoBuyReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelAutoBuyReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type NovelAutoBuyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *NovelAutoBuyData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NovelAutoBuyReply) Reset() {
	*x = NovelAutoBuyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyReply) ProtoMessage() {}

func (x *NovelAutoBuyReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyReply.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{4}
}

func (x *NovelAutoBuyReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NovelAutoBuyReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NovelAutoBuyReply) GetResult() *NovelAutoBuyData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建NovelAutoBuy请求
type NovelAutoBuyCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户ID
	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	//小说编号
	NovelId int64 `protobuf:"varint,2,opt,name=novelId,proto3" json:"novelId,omitempty"`
}

func (x *NovelAutoBuyCreateReq) Reset() {
	*x = NovelAutoBuyCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyCreateReq) ProtoMessage() {}

func (x *NovelAutoBuyCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyCreateReq.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyCreateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{5}
}

func (x *NovelAutoBuyCreateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NovelAutoBuyCreateReq) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

// 创建NovelAutoBuy返回
type NovelAutoBuyCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *NovelAutoBuyData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NovelAutoBuyCreateReply) Reset() {
	*x = NovelAutoBuyCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyCreateReply) ProtoMessage() {}

func (x *NovelAutoBuyCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyCreateReply.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyCreateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{6}
}

func (x *NovelAutoBuyCreateReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NovelAutoBuyCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NovelAutoBuyCreateReply) GetResult() *NovelAutoBuyData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新NovelAutoBuy请求
type NovelAutoBuyUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	//小说编号
	NovelId int64 `protobuf:"varint,3,opt,name=novelId,proto3" json:"novelId,omitempty"`
}

func (x *NovelAutoBuyUpdateReq) Reset() {
	*x = NovelAutoBuyUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyUpdateReq) ProtoMessage() {}

func (x *NovelAutoBuyUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyUpdateReq.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{7}
}

func (x *NovelAutoBuyUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelAutoBuyUpdateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NovelAutoBuyUpdateReq) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

// 更新NovelAutoBuy返回
type NovelAutoBuyUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *NovelAutoBuyData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NovelAutoBuyUpdateReply) Reset() {
	*x = NovelAutoBuyUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyUpdateReply) ProtoMessage() {}

func (x *NovelAutoBuyUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyUpdateReply.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{8}
}

func (x *NovelAutoBuyUpdateReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NovelAutoBuyUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NovelAutoBuyUpdateReply) GetResult() *NovelAutoBuyData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除NovelAutoBuy请求
type NovelAutoBuyDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NovelAutoBuyDeleteReq) Reset() {
	*x = NovelAutoBuyDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyDeleteReq) ProtoMessage() {}

func (x *NovelAutoBuyDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyDeleteReq.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{9}
}

func (x *NovelAutoBuyDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除NovelAutoBuy请求
type NovelAutoBuyBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *NovelAutoBuyBatchDeleteReq) Reset() {
	*x = NovelAutoBuyBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyBatchDeleteReq) ProtoMessage() {}

func (x *NovelAutoBuyBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{10}
}

func (x *NovelAutoBuyBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除NovelAutoBuy返回
type NovelAutoBuyDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NovelAutoBuyDeleteReply) Reset() {
	*x = NovelAutoBuyDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelAutoBuyDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelAutoBuyDeleteReply) ProtoMessage() {}

func (x *NovelAutoBuyDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelAutoBuyDeleteReply.ProtoReflect.Descriptor instead.
func (*NovelAutoBuyDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP(), []int{11}
}

func (x *NovelAutoBuyDeleteReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NovelAutoBuyDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NovelAutoBuyDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_novel_novelautobuy_v1_novel_auto_buy_proto protoreflect.FileDescriptor

var file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDesc = []byte{
	0x0a, 0x2e, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9c, 0x02, 0x0a, 0x10, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x76,
	0x0a, 0x13, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x36,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x94, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x76, 0x65, 0x6c,
	0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62,
	0x75, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42,
	0x75, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x9b, 0x02,
	0x0a, 0x0f, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x11, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x49, 0x0a, 0x15, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75,
	0x74, 0x6f, 0x42, 0x75, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x59, 0x0a, 0x15, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x17, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75,
	0x74, 0x6f, 0x42, 0x75, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x39,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x27, 0x0a, 0x15, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x2e, 0x0a, 0x1a, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42,
	0x75, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x5f, 0x0a, 0x17, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42,
	0x75, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x32, 0xbd, 0x06, 0x0a, 0x0c, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74,
	0x6f, 0x42, 0x75, 0x79, 0x12, 0x84, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x12, 0x24, 0x2e, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75,
	0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x75,
	0x74, 0x6f, 0x2f, 0x62, 0x75, 0x79, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x78, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x12, 0x20,
	0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76,
	0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x79,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8a, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x12, 0x26, 0x2e, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f,
	0x62, 0x75, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f,
	0x42, 0x75, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x1a, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a,
	0x01, 0x2a, 0x12, 0x85, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x12, 0x26, 0x2e, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x28, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61,
	0x75, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x87, 0x01, 0x0a, 0x12, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75,
	0x79, 0x12, 0x26, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x76, 0x31,
	0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x2f, 0x62, 0x75, 0x79, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8c, 0x01, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79,
	0x12, 0x2b, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62, 0x75, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x41, 0x75, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a,
	0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x75, 0x74, 0x6f, 0x2f,
	0x62, 0x75, 0x79, 0x42, 0x23, 0x5a, 0x21, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x61, 0x75, 0x74, 0x6f, 0x62,
	0x75, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescOnce sync.Once
	file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescData = file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDesc
)

func file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescGZIP() []byte {
	file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescOnce.Do(func() {
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescData)
	})
	return file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDescData
}

var file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_novel_novelautobuy_v1_novel_auto_buy_proto_goTypes = []interface{}{
	(*NovelAutoBuyData)(nil),           // 0: novelautobuy.v1.NovelAutoBuyData
	(*NovelAutoBuyPageReq)(nil),        // 1: novelautobuy.v1.NovelAutoBuyPageReq
	(*NovelAutoBuyPageReply)(nil),      // 2: novelautobuy.v1.NovelAutoBuyPageReply
	(*NovelAutoBuyReq)(nil),            // 3: novelautobuy.v1.NovelAutoBuyReq
	(*NovelAutoBuyReply)(nil),          // 4: novelautobuy.v1.NovelAutoBuyReply
	(*NovelAutoBuyCreateReq)(nil),      // 5: novelautobuy.v1.NovelAutoBuyCreateReq
	(*NovelAutoBuyCreateReply)(nil),    // 6: novelautobuy.v1.NovelAutoBuyCreateReply
	(*NovelAutoBuyUpdateReq)(nil),      // 7: novelautobuy.v1.NovelAutoBuyUpdateReq
	(*NovelAutoBuyUpdateReply)(nil),    // 8: novelautobuy.v1.NovelAutoBuyUpdateReply
	(*NovelAutoBuyDeleteReq)(nil),      // 9: novelautobuy.v1.NovelAutoBuyDeleteReq
	(*NovelAutoBuyBatchDeleteReq)(nil), // 10: novelautobuy.v1.NovelAutoBuyBatchDeleteReq
	(*NovelAutoBuyDeleteReply)(nil),    // 11: novelautobuy.v1.NovelAutoBuyDeleteReply
	(*timestamppb.Timestamp)(nil),      // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),           // 13: pagin.Pagination
}
var file_api_novel_novelautobuy_v1_novel_auto_buy_proto_depIdxs = []int32{
	12, // 0: novelautobuy.v1.NovelAutoBuyData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 1: novelautobuy.v1.NovelAutoBuyData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 2: novelautobuy.v1.NovelAutoBuyPageReq.pagin:type_name -> pagin.Pagination
	3,  // 3: novelautobuy.v1.NovelAutoBuyPageReq.param:type_name -> novelautobuy.v1.NovelAutoBuyReq
	0,  // 4: novelautobuy.v1.NovelAutoBuyPageReply.items:type_name -> novelautobuy.v1.NovelAutoBuyData
	12, // 5: novelautobuy.v1.NovelAutoBuyReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 6: novelautobuy.v1.NovelAutoBuyReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 7: novelautobuy.v1.NovelAutoBuyReply.result:type_name -> novelautobuy.v1.NovelAutoBuyData
	0,  // 8: novelautobuy.v1.NovelAutoBuyCreateReply.result:type_name -> novelautobuy.v1.NovelAutoBuyData
	0,  // 9: novelautobuy.v1.NovelAutoBuyUpdateReply.result:type_name -> novelautobuy.v1.NovelAutoBuyData
	1,  // 10: novelautobuy.v1.NovelAutoBuy.GetPageNovelAutoBuy:input_type -> novelautobuy.v1.NovelAutoBuyPageReq
	3,  // 11: novelautobuy.v1.NovelAutoBuy.GetNovelAutoBuy:input_type -> novelautobuy.v1.NovelAutoBuyReq
	7,  // 12: novelautobuy.v1.NovelAutoBuy.UpdateNovelAutoBuy:input_type -> novelautobuy.v1.NovelAutoBuyUpdateReq
	5,  // 13: novelautobuy.v1.NovelAutoBuy.CreateNovelAutoBuy:input_type -> novelautobuy.v1.NovelAutoBuyCreateReq
	9,  // 14: novelautobuy.v1.NovelAutoBuy.DeleteNovelAutoBuy:input_type -> novelautobuy.v1.NovelAutoBuyDeleteReq
	10, // 15: novelautobuy.v1.NovelAutoBuy.BatchDeleteNovelAutoBuy:input_type -> novelautobuy.v1.NovelAutoBuyBatchDeleteReq
	2,  // 16: novelautobuy.v1.NovelAutoBuy.GetPageNovelAutoBuy:output_type -> novelautobuy.v1.NovelAutoBuyPageReply
	4,  // 17: novelautobuy.v1.NovelAutoBuy.GetNovelAutoBuy:output_type -> novelautobuy.v1.NovelAutoBuyReply
	8,  // 18: novelautobuy.v1.NovelAutoBuy.UpdateNovelAutoBuy:output_type -> novelautobuy.v1.NovelAutoBuyUpdateReply
	6,  // 19: novelautobuy.v1.NovelAutoBuy.CreateNovelAutoBuy:output_type -> novelautobuy.v1.NovelAutoBuyCreateReply
	11, // 20: novelautobuy.v1.NovelAutoBuy.DeleteNovelAutoBuy:output_type -> novelautobuy.v1.NovelAutoBuyDeleteReply
	11, // 21: novelautobuy.v1.NovelAutoBuy.BatchDeleteNovelAutoBuy:output_type -> novelautobuy.v1.NovelAutoBuyDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_novel_novelautobuy_v1_novel_auto_buy_proto_init() }
func file_api_novel_novelautobuy_v1_novel_auto_buy_proto_init() {
	if File_api_novel_novelautobuy_v1_novel_auto_buy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelAutoBuyDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_novel_novelautobuy_v1_novel_auto_buy_proto_goTypes,
		DependencyIndexes: file_api_novel_novelautobuy_v1_novel_auto_buy_proto_depIdxs,
		MessageInfos:      file_api_novel_novelautobuy_v1_novel_auto_buy_proto_msgTypes,
	}.Build()
	File_api_novel_novelautobuy_v1_novel_auto_buy_proto = out.File
	file_api_novel_novelautobuy_v1_novel_auto_buy_proto_rawDesc = nil
	file_api_novel_novelautobuy_v1_novel_auto_buy_proto_goTypes = nil
	file_api_novel_novelautobuy_v1_novel_auto_buy_proto_depIdxs = nil
}
