// Code generated by Caisin. DO NOT EDIT.
// source: apps/param/internal/data/ent/schema/resource_group.go

package convert

import (
	"google.golang.org/protobuf/types/known/timestamppb"
	v1 "hope/api/param/resourcegroup/v1"
	"hope/apps/param/internal/data/ent"
)

func ResourceGroupUpdateReq2Data(v *v1.ResourceGroupUpdateReq) *ent.ResourceGroup {
	if v == nil {
		return nil
	}
	return &ent.ResourceGroup{
		ID: v.Id,
	}
}

func ResourceGroupData2UpdateReq(v *ent.ResourceGroup) *v1.ResourceGroupUpdateReq {
	if v == nil {
		return nil
	}
	return &v1.ResourceGroupUpdateReq{
		Id: v.ID,
	}
}

func ResourceGroupCreateReq2Data(v *v1.ResourceGroupCreateReq) *ent.ResourceGroup {
	if v == nil {
		return nil
	}
	return &ent.ResourceGroup{}
}

func ResourceGroupData2CreateReq(v *ent.ResourceGroup) *v1.ResourceGroupCreateReq {
	if v == nil {
		return nil
	}
	return &v1.ResourceGroupCreateReq{}
}

func ResourceGroupReq2Data(v *v1.ResourceGroupReq) *ent.ResourceGroup {
	if v == nil {
		return nil
	}
	return &ent.ResourceGroup{}
}

func ResourceGroupData2Req(v *ent.ResourceGroup) *v1.ResourceGroupReq {
	if v == nil {
		return nil
	}
	return &v1.ResourceGroupReq{}
}

func ResourceGroupReply2Data(v *v1.ResourceGroupReply) *ent.ResourceGroup {
	if v == nil {
		return nil
	}
	return &ent.ResourceGroup{
		ID:        v.Id,
		Name:      v.Name,
		CreatedAt: v.CreatedAt.AsTime(),
		UpdatedAt: v.UpdatedAt.AsTime(),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func ResourceGroupData2Reply(v *ent.ResourceGroup) *v1.ResourceGroupReply {
	if v == nil {
		return nil
	}
	return &v1.ResourceGroupReply{
		Id:        v.ID,
		Name:      v.Name,
		CreatedAt: timestamppb.New(v.CreatedAt),
		UpdatedAt: timestamppb.New(v.UpdatedAt),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func ResourceGroupUpdateReply2Data(v *v1.ResourceGroupUpdateReply) *ent.ResourceGroup {
	if v == nil {
		return nil
	}
	return &ent.ResourceGroup{
		ID: v.Id,
	}
}

func ResourceGroupData2UpdateReply(v *ent.ResourceGroup) *v1.ResourceGroupUpdateReply {
	if v == nil {
		return nil
	}
	return &v1.ResourceGroupUpdateReply{
		Id: v.ID,
	}
}

func ResourceGroupCreateReply2Data(v *v1.ResourceGroupCreateReply) *ent.ResourceGroup {
	if v == nil {
		return nil
	}
	return &ent.ResourceGroup{
		ID:        v.Id,
		Name:      v.Name,
		CreatedAt: v.CreatedAt.AsTime(),
		UpdatedAt: v.UpdatedAt.AsTime(),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func ResourceGroupData2CreateReply(v *ent.ResourceGroup) *v1.ResourceGroupCreateReply {
	if v == nil {
		return nil
	}
	return &v1.ResourceGroupCreateReply{
		Id:        v.ID,
		Name:      v.Name,
		CreatedAt: timestamppb.New(v.CreatedAt),
		UpdatedAt: timestamppb.New(v.UpdatedAt),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}
