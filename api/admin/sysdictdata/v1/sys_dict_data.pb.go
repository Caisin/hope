// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/admin/sysdictdata/v1/sys_dict_data.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type SysDictDataData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//字典类型ID
	TypeId int64 `protobuf:"varint,2,opt,name=typeId,proto3" json:"typeId,omitempty"`
	//字典类型
	TypeCode string `protobuf:"bytes,3,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//字典排序
	DictSort int32 `protobuf:"varint,4,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	//字典标签
	DictLabel string `protobuf:"bytes,5,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	//字典值
	DictValue string `protobuf:"bytes,6,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	//是否默认
	IsDefault string `protobuf:"bytes,7,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	//状态
	Status int32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	//默认
	Default string `protobuf:"bytes,9,opt,name=default,proto3" json:"default,omitempty"`
	//备注
	Remark string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,13,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,14,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,15,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysDictDataData) Reset() {
	*x = SysDictDataData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataData) ProtoMessage() {}

func (x *SysDictDataData) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataData.ProtoReflect.Descriptor instead.
func (*SysDictDataData) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{0}
}

func (x *SysDictDataData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDictDataData) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *SysDictDataData) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *SysDictDataData) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *SysDictDataData) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *SysDictDataData) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *SysDictDataData) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *SysDictDataData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDictDataData) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *SysDictDataData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysDictDataData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysDictDataData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysDictDataData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysDictDataData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysDictDataData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type SysDictDataPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *SysDictDataReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *SysDictDataPageReq) Reset() {
	*x = SysDictDataPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataPageReq) ProtoMessage() {}

func (x *SysDictDataPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataPageReq.ProtoReflect.Descriptor instead.
func (*SysDictDataPageReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{1}
}

func (x *SysDictDataPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SysDictDataPageReq) GetParam() *SysDictDataReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type SysDictDataPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*SysDictDataData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SysDictDataPageReply) Reset() {
	*x = SysDictDataPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataPageReply) ProtoMessage() {}

func (x *SysDictDataPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataPageReply.ProtoReflect.Descriptor instead.
func (*SysDictDataPageReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{2}
}

func (x *SysDictDataPageReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysDictDataPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysDictDataPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SysDictDataPageReply) GetItems() []*SysDictDataData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type SysDictDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//字典类型ID
	TypeId int64 `protobuf:"varint,2,opt,name=typeId,proto3" json:"typeId,omitempty"`
	//字典类型
	TypeCode string `protobuf:"bytes,3,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//字典排序
	DictSort int32 `protobuf:"varint,4,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	//字典标签
	DictLabel string `protobuf:"bytes,5,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	//字典值
	DictValue string `protobuf:"bytes,6,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	//是否默认
	IsDefault string `protobuf:"bytes,7,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	//状态
	Status int32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	//默认
	Default string `protobuf:"bytes,9,opt,name=default,proto3" json:"default,omitempty"`
	//备注
	Remark string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,13,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,14,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,15,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysDictDataReq) Reset() {
	*x = SysDictDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataReq) ProtoMessage() {}

func (x *SysDictDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataReq.ProtoReflect.Descriptor instead.
func (*SysDictDataReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{3}
}

func (x *SysDictDataReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDictDataReq) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *SysDictDataReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *SysDictDataReq) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *SysDictDataReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *SysDictDataReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *SysDictDataReq) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *SysDictDataReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDictDataReq) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *SysDictDataReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysDictDataReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysDictDataReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysDictDataReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysDictDataReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysDictDataReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type SysDictDataReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysDictDataData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysDictDataReply) Reset() {
	*x = SysDictDataReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataReply) ProtoMessage() {}

func (x *SysDictDataReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataReply.ProtoReflect.Descriptor instead.
func (*SysDictDataReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{4}
}

func (x *SysDictDataReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysDictDataReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysDictDataReply) GetResult() *SysDictDataData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建SysDictData请求
type SysDictDataCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//字典类型ID
	TypeId int64 `protobuf:"varint,1,opt,name=typeId,proto3" json:"typeId,omitempty"`
	//字典类型
	TypeCode string `protobuf:"bytes,2,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//字典排序
	DictSort int32 `protobuf:"varint,3,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	//字典标签
	DictLabel string `protobuf:"bytes,4,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	//字典值
	DictValue string `protobuf:"bytes,5,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	//是否默认
	IsDefault string `protobuf:"bytes,6,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	//状态
	Status int32 `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	//默认
	Default string `protobuf:"bytes,8,opt,name=default,proto3" json:"default,omitempty"`
	//备注
	Remark string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SysDictDataCreateReq) Reset() {
	*x = SysDictDataCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataCreateReq) ProtoMessage() {}

func (x *SysDictDataCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataCreateReq.ProtoReflect.Descriptor instead.
func (*SysDictDataCreateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{5}
}

func (x *SysDictDataCreateReq) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *SysDictDataCreateReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *SysDictDataCreateReq) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *SysDictDataCreateReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *SysDictDataCreateReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *SysDictDataCreateReq) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *SysDictDataCreateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDictDataCreateReq) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *SysDictDataCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建SysDictData返回
type SysDictDataCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysDictDataData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysDictDataCreateReply) Reset() {
	*x = SysDictDataCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataCreateReply) ProtoMessage() {}

func (x *SysDictDataCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataCreateReply.ProtoReflect.Descriptor instead.
func (*SysDictDataCreateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{6}
}

func (x *SysDictDataCreateReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysDictDataCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysDictDataCreateReply) GetResult() *SysDictDataData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新SysDictData请求
type SysDictDataUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//字典类型ID
	TypeId int64 `protobuf:"varint,2,opt,name=typeId,proto3" json:"typeId,omitempty"`
	//字典类型
	TypeCode string `protobuf:"bytes,3,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//字典排序
	DictSort int32 `protobuf:"varint,4,opt,name=dictSort,proto3" json:"dictSort,omitempty"`
	//字典标签
	DictLabel string `protobuf:"bytes,5,opt,name=dictLabel,proto3" json:"dictLabel,omitempty"`
	//字典值
	DictValue string `protobuf:"bytes,6,opt,name=dictValue,proto3" json:"dictValue,omitempty"`
	//是否默认
	IsDefault string `protobuf:"bytes,7,opt,name=isDefault,proto3" json:"isDefault,omitempty"`
	//状态
	Status int32 `protobuf:"varint,8,opt,name=status,proto3" json:"status,omitempty"`
	//默认
	Default string `protobuf:"bytes,9,opt,name=default,proto3" json:"default,omitempty"`
	//备注
	Remark string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SysDictDataUpdateReq) Reset() {
	*x = SysDictDataUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataUpdateReq) ProtoMessage() {}

func (x *SysDictDataUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataUpdateReq.ProtoReflect.Descriptor instead.
func (*SysDictDataUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{7}
}

func (x *SysDictDataUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDictDataUpdateReq) GetTypeId() int64 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *SysDictDataUpdateReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *SysDictDataUpdateReq) GetDictSort() int32 {
	if x != nil {
		return x.DictSort
	}
	return 0
}

func (x *SysDictDataUpdateReq) GetDictLabel() string {
	if x != nil {
		return x.DictLabel
	}
	return ""
}

func (x *SysDictDataUpdateReq) GetDictValue() string {
	if x != nil {
		return x.DictValue
	}
	return ""
}

func (x *SysDictDataUpdateReq) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *SysDictDataUpdateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDictDataUpdateReq) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *SysDictDataUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新SysDictData返回
type SysDictDataUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysDictDataData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysDictDataUpdateReply) Reset() {
	*x = SysDictDataUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataUpdateReply) ProtoMessage() {}

func (x *SysDictDataUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataUpdateReply.ProtoReflect.Descriptor instead.
func (*SysDictDataUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{8}
}

func (x *SysDictDataUpdateReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysDictDataUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysDictDataUpdateReply) GetResult() *SysDictDataData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除SysDictData请求
type SysDictDataDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SysDictDataDeleteReq) Reset() {
	*x = SysDictDataDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataDeleteReq) ProtoMessage() {}

func (x *SysDictDataDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataDeleteReq.ProtoReflect.Descriptor instead.
func (*SysDictDataDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{9}
}

func (x *SysDictDataDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除SysDictData请求
type SysDictDataBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SysDictDataBatchDeleteReq) Reset() {
	*x = SysDictDataBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataBatchDeleteReq) ProtoMessage() {}

func (x *SysDictDataBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*SysDictDataBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{10}
}

func (x *SysDictDataBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除SysDictData返回
type SysDictDataDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysDictDataDeleteReply) Reset() {
	*x = SysDictDataDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictDataDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictDataDeleteReply) ProtoMessage() {}

func (x *SysDictDataDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictDataDeleteReply.ProtoReflect.Descriptor instead.
func (*SysDictDataDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP(), []int{11}
}

func (x *SysDictDataDeleteReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysDictDataDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysDictDataDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_admin_sysdictdata_v1_sys_dict_data_proto protoreflect.FileDescriptor

var file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x64,
	0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x64,
	0x69, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xdd, 0x03, 0x0a,
	0x0f, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x12,
	0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x73,
	0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x35,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xdc, 0x03, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x8a, 0x02, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x64, 0x69, 0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63,
	0x74, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x7f, 0x0a, 0x16,
	0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x9a, 0x02,
	0x0a, 0x14, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x63, 0x74, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x7f, 0x0a, 0x16, 0x53, 0x79,
	0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x5e, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x32, 0x96, 0x06, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x7e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69,
	0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73,
	0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x72, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74,
	0x61, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x84, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x2e, 0x73,
	0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x64, 0x69, 0x63, 0x74,
	0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x7f, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69,
	0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79,
	0x73, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x3a, 0x01, 0x2a, 0x12, 0x81,
	0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73,
	0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x86, 0x01, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x2e,
	0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69,
	0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79,
	0x73, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x42, 0x22, 0x5a, 0x20, 0x68,
	0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79,
	0x73, 0x64, 0x69, 0x63, 0x74, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescOnce sync.Once
	file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescData = file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDesc
)

func file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescGZIP() []byte {
	file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescOnce.Do(func() {
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescData)
	})
	return file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDescData
}

var file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_admin_sysdictdata_v1_sys_dict_data_proto_goTypes = []interface{}{
	(*SysDictDataData)(nil),           // 0: sysdictdata.v1.SysDictDataData
	(*SysDictDataPageReq)(nil),        // 1: sysdictdata.v1.SysDictDataPageReq
	(*SysDictDataPageReply)(nil),      // 2: sysdictdata.v1.SysDictDataPageReply
	(*SysDictDataReq)(nil),            // 3: sysdictdata.v1.SysDictDataReq
	(*SysDictDataReply)(nil),          // 4: sysdictdata.v1.SysDictDataReply
	(*SysDictDataCreateReq)(nil),      // 5: sysdictdata.v1.SysDictDataCreateReq
	(*SysDictDataCreateReply)(nil),    // 6: sysdictdata.v1.SysDictDataCreateReply
	(*SysDictDataUpdateReq)(nil),      // 7: sysdictdata.v1.SysDictDataUpdateReq
	(*SysDictDataUpdateReply)(nil),    // 8: sysdictdata.v1.SysDictDataUpdateReply
	(*SysDictDataDeleteReq)(nil),      // 9: sysdictdata.v1.SysDictDataDeleteReq
	(*SysDictDataBatchDeleteReq)(nil), // 10: sysdictdata.v1.SysDictDataBatchDeleteReq
	(*SysDictDataDeleteReply)(nil),    // 11: sysdictdata.v1.SysDictDataDeleteReply
	(*timestamppb.Timestamp)(nil),     // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),          // 13: pagin.Pagination
}
var file_api_admin_sysdictdata_v1_sys_dict_data_proto_depIdxs = []int32{
	12, // 0: sysdictdata.v1.SysDictDataData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 1: sysdictdata.v1.SysDictDataData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 2: sysdictdata.v1.SysDictDataPageReq.pagin:type_name -> pagin.Pagination
	3,  // 3: sysdictdata.v1.SysDictDataPageReq.param:type_name -> sysdictdata.v1.SysDictDataReq
	0,  // 4: sysdictdata.v1.SysDictDataPageReply.items:type_name -> sysdictdata.v1.SysDictDataData
	12, // 5: sysdictdata.v1.SysDictDataReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 6: sysdictdata.v1.SysDictDataReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 7: sysdictdata.v1.SysDictDataReply.result:type_name -> sysdictdata.v1.SysDictDataData
	0,  // 8: sysdictdata.v1.SysDictDataCreateReply.result:type_name -> sysdictdata.v1.SysDictDataData
	0,  // 9: sysdictdata.v1.SysDictDataUpdateReply.result:type_name -> sysdictdata.v1.SysDictDataData
	1,  // 10: sysdictdata.v1.SysDictData.GetPageSysDictData:input_type -> sysdictdata.v1.SysDictDataPageReq
	3,  // 11: sysdictdata.v1.SysDictData.GetSysDictData:input_type -> sysdictdata.v1.SysDictDataReq
	7,  // 12: sysdictdata.v1.SysDictData.UpdateSysDictData:input_type -> sysdictdata.v1.SysDictDataUpdateReq
	5,  // 13: sysdictdata.v1.SysDictData.CreateSysDictData:input_type -> sysdictdata.v1.SysDictDataCreateReq
	9,  // 14: sysdictdata.v1.SysDictData.DeleteSysDictData:input_type -> sysdictdata.v1.SysDictDataDeleteReq
	10, // 15: sysdictdata.v1.SysDictData.BatchDeleteSysDictData:input_type -> sysdictdata.v1.SysDictDataBatchDeleteReq
	2,  // 16: sysdictdata.v1.SysDictData.GetPageSysDictData:output_type -> sysdictdata.v1.SysDictDataPageReply
	4,  // 17: sysdictdata.v1.SysDictData.GetSysDictData:output_type -> sysdictdata.v1.SysDictDataReply
	8,  // 18: sysdictdata.v1.SysDictData.UpdateSysDictData:output_type -> sysdictdata.v1.SysDictDataUpdateReply
	6,  // 19: sysdictdata.v1.SysDictData.CreateSysDictData:output_type -> sysdictdata.v1.SysDictDataCreateReply
	11, // 20: sysdictdata.v1.SysDictData.DeleteSysDictData:output_type -> sysdictdata.v1.SysDictDataDeleteReply
	11, // 21: sysdictdata.v1.SysDictData.BatchDeleteSysDictData:output_type -> sysdictdata.v1.SysDictDataDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_admin_sysdictdata_v1_sys_dict_data_proto_init() }
func file_api_admin_sysdictdata_v1_sys_dict_data_proto_init() {
	if File_api_admin_sysdictdata_v1_sys_dict_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictDataDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_admin_sysdictdata_v1_sys_dict_data_proto_goTypes,
		DependencyIndexes: file_api_admin_sysdictdata_v1_sys_dict_data_proto_depIdxs,
		MessageInfos:      file_api_admin_sysdictdata_v1_sys_dict_data_proto_msgTypes,
	}.Build()
	File_api_admin_sysdictdata_v1_sys_dict_data_proto = out.File
	file_api_admin_sysdictdata_v1_sys_dict_data_proto_rawDesc = nil
	file_api_admin_sysdictdata_v1_sys_dict_data_proto_goTypes = nil
	file_api_admin_sysdictdata_v1_sys_dict_data_proto_depIdxs = nil
}
