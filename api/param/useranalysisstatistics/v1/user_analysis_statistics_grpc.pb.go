// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.19.3
// source: api/param/useranalysisstatistics/v1/user_analysis_statistics.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UserAnalysisStatisticsClient is the client API for UserAnalysisStatistics service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UserAnalysisStatisticsClient interface {
	// 分页查询UserAnalysisStatistics
	GetPageUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsPageReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsPageReply, error)
	// 获取UserAnalysisStatistics
	GetUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsReply, error)
	// 更新UserAnalysisStatistics
	UpdateUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsUpdateReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsUpdateReply, error)
	// 创建UserAnalysisStatistics
	CreateUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsCreateReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsCreateReply, error)
	// 删除UserAnalysisStatistics
	DeleteUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsDeleteReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsDeleteReply, error)
	// 批量删除UserAnalysisStatistics
	BatchDeleteUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsBatchDeleteReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsDeleteReply, error)
}

type userAnalysisStatisticsClient struct {
	cc grpc.ClientConnInterface
}

func NewUserAnalysisStatisticsClient(cc grpc.ClientConnInterface) UserAnalysisStatisticsClient {
	return &userAnalysisStatisticsClient{cc}
}

func (c *userAnalysisStatisticsClient) GetPageUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsPageReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsPageReply, error) {
	out := new(UserAnalysisStatisticsPageReply)
	err := c.cc.Invoke(ctx, "/useranalysisstatistics.v1.UserAnalysisStatistics/GetPageUserAnalysisStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAnalysisStatisticsClient) GetUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsReply, error) {
	out := new(UserAnalysisStatisticsReply)
	err := c.cc.Invoke(ctx, "/useranalysisstatistics.v1.UserAnalysisStatistics/GetUserAnalysisStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAnalysisStatisticsClient) UpdateUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsUpdateReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsUpdateReply, error) {
	out := new(UserAnalysisStatisticsUpdateReply)
	err := c.cc.Invoke(ctx, "/useranalysisstatistics.v1.UserAnalysisStatistics/UpdateUserAnalysisStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAnalysisStatisticsClient) CreateUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsCreateReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsCreateReply, error) {
	out := new(UserAnalysisStatisticsCreateReply)
	err := c.cc.Invoke(ctx, "/useranalysisstatistics.v1.UserAnalysisStatistics/CreateUserAnalysisStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAnalysisStatisticsClient) DeleteUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsDeleteReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsDeleteReply, error) {
	out := new(UserAnalysisStatisticsDeleteReply)
	err := c.cc.Invoke(ctx, "/useranalysisstatistics.v1.UserAnalysisStatistics/DeleteUserAnalysisStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userAnalysisStatisticsClient) BatchDeleteUserAnalysisStatistics(ctx context.Context, in *UserAnalysisStatisticsBatchDeleteReq, opts ...grpc.CallOption) (*UserAnalysisStatisticsDeleteReply, error) {
	out := new(UserAnalysisStatisticsDeleteReply)
	err := c.cc.Invoke(ctx, "/useranalysisstatistics.v1.UserAnalysisStatistics/BatchDeleteUserAnalysisStatistics", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserAnalysisStatisticsServer is the server API for UserAnalysisStatistics service.
// All implementations must embed UnimplementedUserAnalysisStatisticsServer
// for forward compatibility
type UserAnalysisStatisticsServer interface {
	// 分页查询UserAnalysisStatistics
	GetPageUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsPageReq) (*UserAnalysisStatisticsPageReply, error)
	// 获取UserAnalysisStatistics
	GetUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsReq) (*UserAnalysisStatisticsReply, error)
	// 更新UserAnalysisStatistics
	UpdateUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsUpdateReq) (*UserAnalysisStatisticsUpdateReply, error)
	// 创建UserAnalysisStatistics
	CreateUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsCreateReq) (*UserAnalysisStatisticsCreateReply, error)
	// 删除UserAnalysisStatistics
	DeleteUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsDeleteReq) (*UserAnalysisStatisticsDeleteReply, error)
	// 批量删除UserAnalysisStatistics
	BatchDeleteUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsBatchDeleteReq) (*UserAnalysisStatisticsDeleteReply, error)
	mustEmbedUnimplementedUserAnalysisStatisticsServer()
}

// UnimplementedUserAnalysisStatisticsServer must be embedded to have forward compatible implementations.
type UnimplementedUserAnalysisStatisticsServer struct {
}

func (UnimplementedUserAnalysisStatisticsServer) GetPageUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsPageReq) (*UserAnalysisStatisticsPageReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPageUserAnalysisStatistics not implemented")
}
func (UnimplementedUserAnalysisStatisticsServer) GetUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsReq) (*UserAnalysisStatisticsReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserAnalysisStatistics not implemented")
}
func (UnimplementedUserAnalysisStatisticsServer) UpdateUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsUpdateReq) (*UserAnalysisStatisticsUpdateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserAnalysisStatistics not implemented")
}
func (UnimplementedUserAnalysisStatisticsServer) CreateUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsCreateReq) (*UserAnalysisStatisticsCreateReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUserAnalysisStatistics not implemented")
}
func (UnimplementedUserAnalysisStatisticsServer) DeleteUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsDeleteReq) (*UserAnalysisStatisticsDeleteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUserAnalysisStatistics not implemented")
}
func (UnimplementedUserAnalysisStatisticsServer) BatchDeleteUserAnalysisStatistics(context.Context, *UserAnalysisStatisticsBatchDeleteReq) (*UserAnalysisStatisticsDeleteReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BatchDeleteUserAnalysisStatistics not implemented")
}
func (UnimplementedUserAnalysisStatisticsServer) mustEmbedUnimplementedUserAnalysisStatisticsServer() {
}

// UnsafeUserAnalysisStatisticsServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UserAnalysisStatisticsServer will
// result in compilation errors.
type UnsafeUserAnalysisStatisticsServer interface {
	mustEmbedUnimplementedUserAnalysisStatisticsServer()
}

func RegisterUserAnalysisStatisticsServer(s grpc.ServiceRegistrar, srv UserAnalysisStatisticsServer) {
	s.RegisterService(&UserAnalysisStatistics_ServiceDesc, srv)
}

func _UserAnalysisStatistics_GetPageUserAnalysisStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAnalysisStatisticsPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAnalysisStatisticsServer).GetPageUserAnalysisStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/useranalysisstatistics.v1.UserAnalysisStatistics/GetPageUserAnalysisStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAnalysisStatisticsServer).GetPageUserAnalysisStatistics(ctx, req.(*UserAnalysisStatisticsPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAnalysisStatistics_GetUserAnalysisStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAnalysisStatisticsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAnalysisStatisticsServer).GetUserAnalysisStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/useranalysisstatistics.v1.UserAnalysisStatistics/GetUserAnalysisStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAnalysisStatisticsServer).GetUserAnalysisStatistics(ctx, req.(*UserAnalysisStatisticsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAnalysisStatistics_UpdateUserAnalysisStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAnalysisStatisticsUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAnalysisStatisticsServer).UpdateUserAnalysisStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/useranalysisstatistics.v1.UserAnalysisStatistics/UpdateUserAnalysisStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAnalysisStatisticsServer).UpdateUserAnalysisStatistics(ctx, req.(*UserAnalysisStatisticsUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAnalysisStatistics_CreateUserAnalysisStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAnalysisStatisticsCreateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAnalysisStatisticsServer).CreateUserAnalysisStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/useranalysisstatistics.v1.UserAnalysisStatistics/CreateUserAnalysisStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAnalysisStatisticsServer).CreateUserAnalysisStatistics(ctx, req.(*UserAnalysisStatisticsCreateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAnalysisStatistics_DeleteUserAnalysisStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAnalysisStatisticsDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAnalysisStatisticsServer).DeleteUserAnalysisStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/useranalysisstatistics.v1.UserAnalysisStatistics/DeleteUserAnalysisStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAnalysisStatisticsServer).DeleteUserAnalysisStatistics(ctx, req.(*UserAnalysisStatisticsDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserAnalysisStatistics_BatchDeleteUserAnalysisStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserAnalysisStatisticsBatchDeleteReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserAnalysisStatisticsServer).BatchDeleteUserAnalysisStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/useranalysisstatistics.v1.UserAnalysisStatistics/BatchDeleteUserAnalysisStatistics",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserAnalysisStatisticsServer).BatchDeleteUserAnalysisStatistics(ctx, req.(*UserAnalysisStatisticsBatchDeleteReq))
	}
	return interceptor(ctx, in, info, handler)
}

// UserAnalysisStatistics_ServiceDesc is the grpc.ServiceDesc for UserAnalysisStatistics service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UserAnalysisStatistics_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "useranalysisstatistics.v1.UserAnalysisStatistics",
	HandlerType: (*UserAnalysisStatisticsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPageUserAnalysisStatistics",
			Handler:    _UserAnalysisStatistics_GetPageUserAnalysisStatistics_Handler,
		},
		{
			MethodName: "GetUserAnalysisStatistics",
			Handler:    _UserAnalysisStatistics_GetUserAnalysisStatistics_Handler,
		},
		{
			MethodName: "UpdateUserAnalysisStatistics",
			Handler:    _UserAnalysisStatistics_UpdateUserAnalysisStatistics_Handler,
		},
		{
			MethodName: "CreateUserAnalysisStatistics",
			Handler:    _UserAnalysisStatistics_CreateUserAnalysisStatistics_Handler,
		},
		{
			MethodName: "DeleteUserAnalysisStatistics",
			Handler:    _UserAnalysisStatistics_DeleteUserAnalysisStatistics_Handler,
		},
		{
			MethodName: "BatchDeleteUserAnalysisStatistics",
			Handler:    _UserAnalysisStatistics_BatchDeleteUserAnalysisStatistics_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/param/useranalysisstatistics/v1/user_analysis_statistics.proto",
}
