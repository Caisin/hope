// Code generated by entc, DO NOT EDIT.

package systables

import (
	"time"
)

const (
	// Label holds the string label denoting the systables type in the database.
	Label = "sys_tables"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTableName holds the string denoting the tablename field in the database.
	FieldTableName = "table_name"
	// FieldTableComment holds the string denoting the tablecomment field in the database.
	FieldTableComment = "table_comment"
	// FieldClassName holds the string denoting the classname field in the database.
	FieldClassName = "class_name"
	// FieldTplCategory holds the string denoting the tplcategory field in the database.
	FieldTplCategory = "tpl_category"
	// FieldPackageName holds the string denoting the packagename field in the database.
	FieldPackageName = "package_name"
	// FieldModuleName holds the string denoting the modulename field in the database.
	FieldModuleName = "module_name"
	// FieldModuleFrontName holds the string denoting the modulefrontname field in the database.
	FieldModuleFrontName = "module_front_name"
	// FieldBusinessName holds the string denoting the businessname field in the database.
	FieldBusinessName = "business_name"
	// FieldFunctionName holds the string denoting the functionname field in the database.
	FieldFunctionName = "function_name"
	// FieldFunctionAuthor holds the string denoting the functionauthor field in the database.
	FieldFunctionAuthor = "function_author"
	// FieldPkColumn holds the string denoting the pkcolumn field in the database.
	FieldPkColumn = "pk_column"
	// FieldPkGoField holds the string denoting the pkgofield field in the database.
	FieldPkGoField = "pk_go_field"
	// FieldPkJsonField holds the string denoting the pkjsonfield field in the database.
	FieldPkJsonField = "pk_json_field"
	// FieldOptions holds the string denoting the options field in the database.
	FieldOptions = "options"
	// FieldTreeCode holds the string denoting the treecode field in the database.
	FieldTreeCode = "tree_code"
	// FieldTreeParentCode holds the string denoting the treeparentcode field in the database.
	FieldTreeParentCode = "tree_parent_code"
	// FieldTreeName holds the string denoting the treename field in the database.
	FieldTreeName = "tree_name"
	// FieldTree holds the string denoting the tree field in the database.
	FieldTree = "tree"
	// FieldCrud holds the string denoting the crud field in the database.
	FieldCrud = "crud"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldIsDataScope holds the string denoting the isdatascope field in the database.
	FieldIsDataScope = "is_data_scope"
	// FieldIsActions holds the string denoting the isactions field in the database.
	FieldIsActions = "is_actions"
	// FieldIsAuth holds the string denoting the isauth field in the database.
	FieldIsAuth = "is_auth"
	// FieldIsLogicalDelete holds the string denoting the islogicaldelete field in the database.
	FieldIsLogicalDelete = "is_logical_delete"
	// FieldLogicalDelete holds the string denoting the logicaldelete field in the database.
	FieldLogicalDelete = "logical_delete"
	// FieldLogicalDeleteColumn holds the string denoting the logicaldeletecolumn field in the database.
	FieldLogicalDeleteColumn = "logical_delete_column"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreateBy holds the string denoting the createby field in the database.
	FieldCreateBy = "create_by"
	// FieldUpdateBy holds the string denoting the updateby field in the database.
	FieldUpdateBy = "update_by"
	// FieldTenantId holds the string denoting the tenantid field in the database.
	FieldTenantId = "tenant_id"
	// Table holds the table name of the systables in the database.
	Table = "sys_tables"
)

// Columns holds all SQL columns for systables fields.
var Columns = []string{
	FieldID,
	FieldTableName,
	FieldTableComment,
	FieldClassName,
	FieldTplCategory,
	FieldPackageName,
	FieldModuleName,
	FieldModuleFrontName,
	FieldBusinessName,
	FieldFunctionName,
	FieldFunctionAuthor,
	FieldPkColumn,
	FieldPkGoField,
	FieldPkJsonField,
	FieldOptions,
	FieldTreeCode,
	FieldTreeParentCode,
	FieldTreeName,
	FieldTree,
	FieldCrud,
	FieldRemark,
	FieldIsDataScope,
	FieldIsActions,
	FieldIsAuth,
	FieldIsLogicalDelete,
	FieldLogicalDelete,
	FieldLogicalDeleteColumn,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreateBy,
	FieldUpdateBy,
	FieldTenantId,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updatedAt" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updatedAt" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCreateBy holds the default value on creation for the "createBy" field.
	DefaultCreateBy int64
	// DefaultUpdateBy holds the default value on creation for the "updateBy" field.
	DefaultUpdateBy int64
	// DefaultTenantId holds the default value on creation for the "tenantId" field.
	DefaultTenantId int64
)
