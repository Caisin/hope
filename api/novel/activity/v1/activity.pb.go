// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/novel/activity/v1/activity.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type ActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//活动编码
	ActivityCode string `protobuf:"bytes,2,opt,name=activityCode,proto3" json:"activityCode,omitempty"`
	//活动名称
	ActivityName string `protobuf:"bytes,3,opt,name=activityName,proto3" json:"activityName,omitempty"`
	//活动描述
	Summary string `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	//活动规则简体中文图
	RuleImgSc string `protobuf:"bytes,5,opt,name=ruleImgSc,proto3" json:"ruleImgSc,omitempty"`
	//活动规则繁体中文图
	RuleImgTc string `protobuf:"bytes,6,opt,name=ruleImgTc,proto3" json:"ruleImgTc,omitempty"`
	//弹出框图片地址
	PopupImg string `protobuf:"bytes,7,opt,name=popupImg,proto3" json:"popupImg,omitempty"`
	//注册天数
	RegDays int32 `protobuf:"varint,8,opt,name=regDays,proto3" json:"regDays,omitempty"`
	//循环类型,默认
	CycleType string `protobuf:"bytes,9,opt,name=cycleType,proto3" json:"cycleType,omitempty"`
	//活动生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//活动失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,14,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,15,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,16,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *ActivityData) Reset() {
	*x = ActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityData) ProtoMessage() {}

func (x *ActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityData.ProtoReflect.Descriptor instead.
func (*ActivityData) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityData) GetActivityCode() string {
	if x != nil {
		return x.ActivityCode
	}
	return ""
}

func (x *ActivityData) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ActivityData) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ActivityData) GetRuleImgSc() string {
	if x != nil {
		return x.RuleImgSc
	}
	return ""
}

func (x *ActivityData) GetRuleImgTc() string {
	if x != nil {
		return x.RuleImgTc
	}
	return ""
}

func (x *ActivityData) GetPopupImg() string {
	if x != nil {
		return x.PopupImg
	}
	return ""
}

func (x *ActivityData) GetRegDays() int32 {
	if x != nil {
		return x.RegDays
	}
	return 0
}

func (x *ActivityData) GetCycleType() string {
	if x != nil {
		return x.CycleType
	}
	return ""
}

func (x *ActivityData) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *ActivityData) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

func (x *ActivityData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ActivityData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ActivityData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ActivityData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ActivityData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type ActivityPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *ActivityReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *ActivityPageReq) Reset() {
	*x = ActivityPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityPageReq) ProtoMessage() {}

func (x *ActivityPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityPageReq.ProtoReflect.Descriptor instead.
func (*ActivityPageReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *ActivityPageReq) GetParam() *ActivityReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type ActivityPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*ActivityData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ActivityPageReply) Reset() {
	*x = ActivityPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityPageReply) ProtoMessage() {}

func (x *ActivityPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityPageReply.ProtoReflect.Descriptor instead.
func (*ActivityPageReply) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{2}
}

func (x *ActivityPageReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ActivityPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActivityPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ActivityPageReply) GetItems() []*ActivityData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type ActivityReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//活动编码
	ActivityCode string `protobuf:"bytes,2,opt,name=activityCode,proto3" json:"activityCode,omitempty"`
	//活动名称
	ActivityName string `protobuf:"bytes,3,opt,name=activityName,proto3" json:"activityName,omitempty"`
	//活动描述
	Summary string `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	//活动规则简体中文图
	RuleImgSc string `protobuf:"bytes,5,opt,name=ruleImgSc,proto3" json:"ruleImgSc,omitempty"`
	//活动规则繁体中文图
	RuleImgTc string `protobuf:"bytes,6,opt,name=ruleImgTc,proto3" json:"ruleImgTc,omitempty"`
	//弹出框图片地址
	PopupImg string `protobuf:"bytes,7,opt,name=popupImg,proto3" json:"popupImg,omitempty"`
	//注册天数
	RegDays int32 `protobuf:"varint,8,opt,name=regDays,proto3" json:"regDays,omitempty"`
	//循环类型,默认
	CycleType string `protobuf:"bytes,9,opt,name=cycleType,proto3" json:"cycleType,omitempty"`
	//活动生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//活动失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,14,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,15,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,16,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *ActivityReq) Reset() {
	*x = ActivityReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityReq) ProtoMessage() {}

func (x *ActivityReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityReq.ProtoReflect.Descriptor instead.
func (*ActivityReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{3}
}

func (x *ActivityReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityReq) GetActivityCode() string {
	if x != nil {
		return x.ActivityCode
	}
	return ""
}

func (x *ActivityReq) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ActivityReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ActivityReq) GetRuleImgSc() string {
	if x != nil {
		return x.RuleImgSc
	}
	return ""
}

func (x *ActivityReq) GetRuleImgTc() string {
	if x != nil {
		return x.RuleImgTc
	}
	return ""
}

func (x *ActivityReq) GetPopupImg() string {
	if x != nil {
		return x.PopupImg
	}
	return ""
}

func (x *ActivityReq) GetRegDays() int32 {
	if x != nil {
		return x.RegDays
	}
	return 0
}

func (x *ActivityReq) GetCycleType() string {
	if x != nil {
		return x.CycleType
	}
	return ""
}

func (x *ActivityReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *ActivityReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

func (x *ActivityReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ActivityReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ActivityReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ActivityReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ActivityReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type ActivityReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *ActivityData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ActivityReply) Reset() {
	*x = ActivityReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityReply) ProtoMessage() {}

func (x *ActivityReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityReply.ProtoReflect.Descriptor instead.
func (*ActivityReply) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{4}
}

func (x *ActivityReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ActivityReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActivityReply) GetResult() *ActivityData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建Activity请求
type ActivityCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//活动编码
	ActivityCode string `protobuf:"bytes,1,opt,name=activityCode,proto3" json:"activityCode,omitempty"`
	//活动名称
	ActivityName string `protobuf:"bytes,2,opt,name=activityName,proto3" json:"activityName,omitempty"`
	//活动描述
	Summary string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	//活动规则简体中文图
	RuleImgSc string `protobuf:"bytes,4,opt,name=ruleImgSc,proto3" json:"ruleImgSc,omitempty"`
	//活动规则繁体中文图
	RuleImgTc string `protobuf:"bytes,5,opt,name=ruleImgTc,proto3" json:"ruleImgTc,omitempty"`
	//弹出框图片地址
	PopupImg string `protobuf:"bytes,6,opt,name=popupImg,proto3" json:"popupImg,omitempty"`
	//注册天数
	RegDays int32 `protobuf:"varint,7,opt,name=regDays,proto3" json:"regDays,omitempty"`
	//循环类型,默认
	CycleType string `protobuf:"bytes,8,opt,name=cycleType,proto3" json:"cycleType,omitempty"`
	//活动生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//活动失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
}

func (x *ActivityCreateReq) Reset() {
	*x = ActivityCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityCreateReq) ProtoMessage() {}

func (x *ActivityCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityCreateReq.ProtoReflect.Descriptor instead.
func (*ActivityCreateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{5}
}

func (x *ActivityCreateReq) GetActivityCode() string {
	if x != nil {
		return x.ActivityCode
	}
	return ""
}

func (x *ActivityCreateReq) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ActivityCreateReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ActivityCreateReq) GetRuleImgSc() string {
	if x != nil {
		return x.RuleImgSc
	}
	return ""
}

func (x *ActivityCreateReq) GetRuleImgTc() string {
	if x != nil {
		return x.RuleImgTc
	}
	return ""
}

func (x *ActivityCreateReq) GetPopupImg() string {
	if x != nil {
		return x.PopupImg
	}
	return ""
}

func (x *ActivityCreateReq) GetRegDays() int32 {
	if x != nil {
		return x.RegDays
	}
	return 0
}

func (x *ActivityCreateReq) GetCycleType() string {
	if x != nil {
		return x.CycleType
	}
	return ""
}

func (x *ActivityCreateReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *ActivityCreateReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

// 创建Activity返回
type ActivityCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *ActivityData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ActivityCreateReply) Reset() {
	*x = ActivityCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityCreateReply) ProtoMessage() {}

func (x *ActivityCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityCreateReply.ProtoReflect.Descriptor instead.
func (*ActivityCreateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{6}
}

func (x *ActivityCreateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ActivityCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActivityCreateReply) GetResult() *ActivityData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新Activity请求
type ActivityUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//活动编码
	ActivityCode string `protobuf:"bytes,2,opt,name=activityCode,proto3" json:"activityCode,omitempty"`
	//活动名称
	ActivityName string `protobuf:"bytes,3,opt,name=activityName,proto3" json:"activityName,omitempty"`
	//活动描述
	Summary string `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	//活动规则简体中文图
	RuleImgSc string `protobuf:"bytes,5,opt,name=ruleImgSc,proto3" json:"ruleImgSc,omitempty"`
	//活动规则繁体中文图
	RuleImgTc string `protobuf:"bytes,6,opt,name=ruleImgTc,proto3" json:"ruleImgTc,omitempty"`
	//弹出框图片地址
	PopupImg string `protobuf:"bytes,7,opt,name=popupImg,proto3" json:"popupImg,omitempty"`
	//注册天数
	RegDays int32 `protobuf:"varint,8,opt,name=regDays,proto3" json:"regDays,omitempty"`
	//循环类型,默认
	CycleType string `protobuf:"bytes,9,opt,name=cycleType,proto3" json:"cycleType,omitempty"`
	//活动生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//活动失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
}

func (x *ActivityUpdateReq) Reset() {
	*x = ActivityUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityUpdateReq) ProtoMessage() {}

func (x *ActivityUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityUpdateReq.ProtoReflect.Descriptor instead.
func (*ActivityUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{7}
}

func (x *ActivityUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityUpdateReq) GetActivityCode() string {
	if x != nil {
		return x.ActivityCode
	}
	return ""
}

func (x *ActivityUpdateReq) GetActivityName() string {
	if x != nil {
		return x.ActivityName
	}
	return ""
}

func (x *ActivityUpdateReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ActivityUpdateReq) GetRuleImgSc() string {
	if x != nil {
		return x.RuleImgSc
	}
	return ""
}

func (x *ActivityUpdateReq) GetRuleImgTc() string {
	if x != nil {
		return x.RuleImgTc
	}
	return ""
}

func (x *ActivityUpdateReq) GetPopupImg() string {
	if x != nil {
		return x.PopupImg
	}
	return ""
}

func (x *ActivityUpdateReq) GetRegDays() int32 {
	if x != nil {
		return x.RegDays
	}
	return 0
}

func (x *ActivityUpdateReq) GetCycleType() string {
	if x != nil {
		return x.CycleType
	}
	return ""
}

func (x *ActivityUpdateReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *ActivityUpdateReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

// 更新Activity返回
type ActivityUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *ActivityData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ActivityUpdateReply) Reset() {
	*x = ActivityUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityUpdateReply) ProtoMessage() {}

func (x *ActivityUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityUpdateReply.ProtoReflect.Descriptor instead.
func (*ActivityUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{8}
}

func (x *ActivityUpdateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ActivityUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActivityUpdateReply) GetResult() *ActivityData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除Activity请求
type ActivityDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ActivityDeleteReq) Reset() {
	*x = ActivityDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDeleteReq) ProtoMessage() {}

func (x *ActivityDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDeleteReq.ProtoReflect.Descriptor instead.
func (*ActivityDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{9}
}

func (x *ActivityDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除Activity请求
type ActivityBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ActivityBatchDeleteReq) Reset() {
	*x = ActivityBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityBatchDeleteReq) ProtoMessage() {}

func (x *ActivityBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*ActivityBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{10}
}

func (x *ActivityBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除Activity返回
type ActivityDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ActivityDeleteReply) Reset() {
	*x = ActivityDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activity_v1_activity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityDeleteReply) ProtoMessage() {}

func (x *ActivityDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activity_v1_activity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityDeleteReply.ProtoReflect.Descriptor instead.
func (*ActivityDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_novel_activity_v1_activity_proto_rawDescGZIP(), []int{11}
}

func (x *ActivityDeleteReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ActivityDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ActivityDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_novel_activity_v1_activity_proto protoreflect.FileDescriptor

var file_api_novel_activity_v1_activity_proto_rawDesc = []byte{
	0x0a, 0x24, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd2, 0x04, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x53,
	0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67,
	0x53, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x54, 0x63, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x54, 0x63,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x49, 0x6d, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x49, 0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6a, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x22, 0x88, 0x01, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd1, 0x04,
	0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x53, 0x63, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x53, 0x63, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x54, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x54, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x6f, 0x70, 0x75, 0x70, 0x49, 0x6d, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6f, 0x70, 0x75, 0x70, 0x49, 0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x44, 0x61,
	0x79, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x70, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xff, 0x02, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x53, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x53, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6c,
	0x65, 0x49, 0x6d, 0x67, 0x54, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75,
	0x6c, 0x65, 0x49, 0x6d, 0x67, 0x54, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x70, 0x75, 0x70,
	0x49, 0x6d, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x70, 0x75, 0x70,
	0x49, 0x6d, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8f, 0x03,
	0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67,
	0x53, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d,
	0x67, 0x53, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x54, 0x63,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x75, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x54,
	0x63, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x49, 0x6d, 0x67, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x70, 0x75, 0x70, 0x49, 0x6d, 0x67, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x76, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x23, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x16,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x5b, 0x0a, 0x13, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x98, 0x05, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x6a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x5e,
	0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x18, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x70,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x12, 0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x20, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a,
	0x12, 0x6b, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x12, 0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x3a, 0x01, 0x2a, 0x12, 0x6d, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12,
	0x1e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x72, 0x0a, 0x13,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x12, 0x23, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0e, 0x2a, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x42, 0x1f, 0x5a, 0x1d, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_novel_activity_v1_activity_proto_rawDescOnce sync.Once
	file_api_novel_activity_v1_activity_proto_rawDescData = file_api_novel_activity_v1_activity_proto_rawDesc
)

func file_api_novel_activity_v1_activity_proto_rawDescGZIP() []byte {
	file_api_novel_activity_v1_activity_proto_rawDescOnce.Do(func() {
		file_api_novel_activity_v1_activity_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_novel_activity_v1_activity_proto_rawDescData)
	})
	return file_api_novel_activity_v1_activity_proto_rawDescData
}

var file_api_novel_activity_v1_activity_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_novel_activity_v1_activity_proto_goTypes = []interface{}{
	(*ActivityData)(nil),           // 0: activity.v1.ActivityData
	(*ActivityPageReq)(nil),        // 1: activity.v1.ActivityPageReq
	(*ActivityPageReply)(nil),      // 2: activity.v1.ActivityPageReply
	(*ActivityReq)(nil),            // 3: activity.v1.ActivityReq
	(*ActivityReply)(nil),          // 4: activity.v1.ActivityReply
	(*ActivityCreateReq)(nil),      // 5: activity.v1.ActivityCreateReq
	(*ActivityCreateReply)(nil),    // 6: activity.v1.ActivityCreateReply
	(*ActivityUpdateReq)(nil),      // 7: activity.v1.ActivityUpdateReq
	(*ActivityUpdateReply)(nil),    // 8: activity.v1.ActivityUpdateReply
	(*ActivityDeleteReq)(nil),      // 9: activity.v1.ActivityDeleteReq
	(*ActivityBatchDeleteReq)(nil), // 10: activity.v1.ActivityBatchDeleteReq
	(*ActivityDeleteReply)(nil),    // 11: activity.v1.ActivityDeleteReply
	(*timestamppb.Timestamp)(nil),  // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),       // 13: pagin.Pagination
}
var file_api_novel_activity_v1_activity_proto_depIdxs = []int32{
	12, // 0: activity.v1.ActivityData.effectTime:type_name -> google.protobuf.Timestamp
	12, // 1: activity.v1.ActivityData.expiredTime:type_name -> google.protobuf.Timestamp
	12, // 2: activity.v1.ActivityData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 3: activity.v1.ActivityData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 4: activity.v1.ActivityPageReq.pagin:type_name -> pagin.Pagination
	3,  // 5: activity.v1.ActivityPageReq.param:type_name -> activity.v1.ActivityReq
	0,  // 6: activity.v1.ActivityPageReply.items:type_name -> activity.v1.ActivityData
	12, // 7: activity.v1.ActivityReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 8: activity.v1.ActivityReq.expiredTime:type_name -> google.protobuf.Timestamp
	12, // 9: activity.v1.ActivityReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 10: activity.v1.ActivityReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 11: activity.v1.ActivityReply.result:type_name -> activity.v1.ActivityData
	12, // 12: activity.v1.ActivityCreateReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 13: activity.v1.ActivityCreateReq.expiredTime:type_name -> google.protobuf.Timestamp
	0,  // 14: activity.v1.ActivityCreateReply.result:type_name -> activity.v1.ActivityData
	12, // 15: activity.v1.ActivityUpdateReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 16: activity.v1.ActivityUpdateReq.expiredTime:type_name -> google.protobuf.Timestamp
	0,  // 17: activity.v1.ActivityUpdateReply.result:type_name -> activity.v1.ActivityData
	1,  // 18: activity.v1.Activity.GetActivityPage:input_type -> activity.v1.ActivityPageReq
	3,  // 19: activity.v1.Activity.GetActivity:input_type -> activity.v1.ActivityReq
	7,  // 20: activity.v1.Activity.UpdateActivity:input_type -> activity.v1.ActivityUpdateReq
	5,  // 21: activity.v1.Activity.CreateActivity:input_type -> activity.v1.ActivityCreateReq
	9,  // 22: activity.v1.Activity.DeleteActivity:input_type -> activity.v1.ActivityDeleteReq
	10, // 23: activity.v1.Activity.BatchDeleteActivity:input_type -> activity.v1.ActivityBatchDeleteReq
	2,  // 24: activity.v1.Activity.GetActivityPage:output_type -> activity.v1.ActivityPageReply
	4,  // 25: activity.v1.Activity.GetActivity:output_type -> activity.v1.ActivityReply
	8,  // 26: activity.v1.Activity.UpdateActivity:output_type -> activity.v1.ActivityUpdateReply
	6,  // 27: activity.v1.Activity.CreateActivity:output_type -> activity.v1.ActivityCreateReply
	11, // 28: activity.v1.Activity.DeleteActivity:output_type -> activity.v1.ActivityDeleteReply
	11, // 29: activity.v1.Activity.BatchDeleteActivity:output_type -> activity.v1.ActivityDeleteReply
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_novel_activity_v1_activity_proto_init() }
func file_api_novel_activity_v1_activity_proto_init() {
	if File_api_novel_activity_v1_activity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_novel_activity_v1_activity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activity_v1_activity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activity_v1_activity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activity_v1_activity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activity_v1_activity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activity_v1_activity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activity_v1_activity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activity_v1_activity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activity_v1_activity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activity_v1_activity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activity_v1_activity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activity_v1_activity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_novel_activity_v1_activity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_novel_activity_v1_activity_proto_goTypes,
		DependencyIndexes: file_api_novel_activity_v1_activity_proto_depIdxs,
		MessageInfos:      file_api_novel_activity_v1_activity_proto_msgTypes,
	}.Build()
	File_api_novel_activity_v1_activity_proto = out.File
	file_api_novel_activity_v1_activity_proto_rawDesc = nil
	file_api_novel_activity_v1_activity_proto_goTypes = nil
	file_api_novel_activity_v1_activity_proto_depIdxs = nil
}
