// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/novel/agreementlog/v1/agreement_log.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type AgreementLogPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *AgreementLogReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *AgreementLogPageReq) Reset() {
	*x = AgreementLogPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementLogPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementLogPageReq) ProtoMessage() {}

func (x *AgreementLogPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementLogPageReq.ProtoReflect.Descriptor instead.
func (*AgreementLogPageReq) Descriptor() ([]byte, []int) {
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP(), []int{0}
}

func (x *AgreementLogPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *AgreementLogPageReq) GetParam() *AgreementLogReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type AgreementLogPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*AgreementLogReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AgreementLogPageReply) Reset() {
	*x = AgreementLogPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementLogPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementLogPageReply) ProtoMessage() {}

func (x *AgreementLogPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementLogPageReply.ProtoReflect.Descriptor instead.
func (*AgreementLogPageReply) Descriptor() ([]byte, []int) {
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP(), []int{1}
}

func (x *AgreementLogPageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *AgreementLogPageReply) GetItems() []*AgreementLogReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type AgreementLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//外部签约协议号
	OuterAgreementNo string `protobuf:"bytes,2,opt,name=outerAgreementNo,proto3" json:"outerAgreementNo,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,3,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	//渠道
	ChId int64 `protobuf:"varint,5,opt,name=chId,proto3" json:"chId,omitempty"`
	//用户名称
	UserName string `protobuf:"bytes,6,opt,name=userName,proto3" json:"userName,omitempty"`
	//商品名称
	PaymentName string `protobuf:"bytes,7,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//支付配置ID payment_config表的ID
	PaymentId int64 `protobuf:"varint,8,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	//状态：1、待签约，2、签约成功，3、取消签约
	State int32 `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	//每期扣款金额,单位：分
	Payment int64 `protobuf:"varint,10,opt,name=payment,proto3" json:"payment,omitempty"`
	//支付方式：Alipay,Google,WeChat
	AgreementType string `protobuf:"bytes,11,opt,name=agreementType,proto3" json:"agreementType,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,12,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//第几期
	Times int64 `protobuf:"varint,13,opt,name=times,proto3" json:"times,omitempty"`
	//周期天数
	CycleDays int32 `protobuf:"varint,14,opt,name=cycleDays,proto3" json:"cycleDays,omitempty"`
	//下次执行时间
	NextExecTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=nextExecTime,proto3" json:"nextExecTime,omitempty"`
	//备注
	Remark string `protobuf:"bytes,16,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,19,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,20,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,21,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *AgreementLogReq) Reset() {
	*x = AgreementLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementLogReq) ProtoMessage() {}

func (x *AgreementLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementLogReq.ProtoReflect.Descriptor instead.
func (*AgreementLogReq) Descriptor() ([]byte, []int) {
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP(), []int{2}
}

func (x *AgreementLogReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgreementLogReq) GetOuterAgreementNo() string {
	if x != nil {
		return x.OuterAgreementNo
	}
	return ""
}

func (x *AgreementLogReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AgreementLogReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgreementLogReq) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *AgreementLogReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AgreementLogReq) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *AgreementLogReq) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *AgreementLogReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AgreementLogReq) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *AgreementLogReq) GetAgreementType() string {
	if x != nil {
		return x.AgreementType
	}
	return ""
}

func (x *AgreementLogReq) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *AgreementLogReq) GetTimes() int64 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *AgreementLogReq) GetCycleDays() int32 {
	if x != nil {
		return x.CycleDays
	}
	return 0
}

func (x *AgreementLogReq) GetNextExecTime() *timestamppb.Timestamp {
	if x != nil {
		return x.NextExecTime
	}
	return nil
}

func (x *AgreementLogReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AgreementLogReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AgreementLogReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AgreementLogReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *AgreementLogReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *AgreementLogReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type AgreementLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//外部签约协议号
	OuterAgreementNo string `protobuf:"bytes,2,opt,name=outerAgreementNo,proto3" json:"outerAgreementNo,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,3,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	//渠道
	ChId int64 `protobuf:"varint,5,opt,name=chId,proto3" json:"chId,omitempty"`
	//用户名称
	UserName string `protobuf:"bytes,6,opt,name=userName,proto3" json:"userName,omitempty"`
	//商品名称
	PaymentName string `protobuf:"bytes,7,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//支付配置ID payment_config表的ID
	PaymentId int64 `protobuf:"varint,8,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	//状态：1、待签约，2、签约成功，3、取消签约
	State int32 `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	//每期扣款金额,单位：分
	Payment int64 `protobuf:"varint,10,opt,name=payment,proto3" json:"payment,omitempty"`
	//支付方式：Alipay,Google,WeChat
	AgreementType string `protobuf:"bytes,11,opt,name=agreementType,proto3" json:"agreementType,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,12,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//第几期
	Times int64 `protobuf:"varint,13,opt,name=times,proto3" json:"times,omitempty"`
	//周期天数
	CycleDays int32 `protobuf:"varint,14,opt,name=cycleDays,proto3" json:"cycleDays,omitempty"`
	//下次执行时间
	NextExecTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=nextExecTime,proto3" json:"nextExecTime,omitempty"`
	//备注
	Remark string `protobuf:"bytes,16,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,19,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,20,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,21,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *AgreementLogReply) Reset() {
	*x = AgreementLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementLogReply) ProtoMessage() {}

func (x *AgreementLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementLogReply.ProtoReflect.Descriptor instead.
func (*AgreementLogReply) Descriptor() ([]byte, []int) {
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP(), []int{3}
}

func (x *AgreementLogReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgreementLogReply) GetOuterAgreementNo() string {
	if x != nil {
		return x.OuterAgreementNo
	}
	return ""
}

func (x *AgreementLogReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AgreementLogReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgreementLogReply) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *AgreementLogReply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AgreementLogReply) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *AgreementLogReply) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *AgreementLogReply) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AgreementLogReply) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *AgreementLogReply) GetAgreementType() string {
	if x != nil {
		return x.AgreementType
	}
	return ""
}

func (x *AgreementLogReply) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *AgreementLogReply) GetTimes() int64 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *AgreementLogReply) GetCycleDays() int32 {
	if x != nil {
		return x.CycleDays
	}
	return 0
}

func (x *AgreementLogReply) GetNextExecTime() *timestamppb.Timestamp {
	if x != nil {
		return x.NextExecTime
	}
	return nil
}

func (x *AgreementLogReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AgreementLogReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AgreementLogReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AgreementLogReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *AgreementLogReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *AgreementLogReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建AgreementLog请求
type AgreementLogCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//外部签约协议号
	OuterAgreementNo string `protobuf:"bytes,1,opt,name=outerAgreementNo,proto3" json:"outerAgreementNo,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	//渠道
	ChId int64 `protobuf:"varint,4,opt,name=chId,proto3" json:"chId,omitempty"`
	//用户名称
	UserName string `protobuf:"bytes,5,opt,name=userName,proto3" json:"userName,omitempty"`
	//商品名称
	PaymentName string `protobuf:"bytes,6,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//支付配置ID payment_config表的ID
	PaymentId int64 `protobuf:"varint,7,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	//状态：1、待签约，2、签约成功，3、取消签约
	State int32 `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	//每期扣款金额,单位：分
	Payment int64 `protobuf:"varint,9,opt,name=payment,proto3" json:"payment,omitempty"`
	//支付方式：Alipay,Google,WeChat
	AgreementType string `protobuf:"bytes,10,opt,name=agreementType,proto3" json:"agreementType,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,11,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//第几期
	Times int64 `protobuf:"varint,12,opt,name=times,proto3" json:"times,omitempty"`
	//周期天数
	CycleDays int32 `protobuf:"varint,13,opt,name=cycleDays,proto3" json:"cycleDays,omitempty"`
	//下次执行时间
	NextExecTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=nextExecTime,proto3" json:"nextExecTime,omitempty"`
	//备注
	Remark string `protobuf:"bytes,15,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AgreementLogCreateReq) Reset() {
	*x = AgreementLogCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementLogCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementLogCreateReq) ProtoMessage() {}

func (x *AgreementLogCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementLogCreateReq.ProtoReflect.Descriptor instead.
func (*AgreementLogCreateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP(), []int{4}
}

func (x *AgreementLogCreateReq) GetOuterAgreementNo() string {
	if x != nil {
		return x.OuterAgreementNo
	}
	return ""
}

func (x *AgreementLogCreateReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AgreementLogCreateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgreementLogCreateReq) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *AgreementLogCreateReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AgreementLogCreateReq) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *AgreementLogCreateReq) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *AgreementLogCreateReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AgreementLogCreateReq) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *AgreementLogCreateReq) GetAgreementType() string {
	if x != nil {
		return x.AgreementType
	}
	return ""
}

func (x *AgreementLogCreateReq) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *AgreementLogCreateReq) GetTimes() int64 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *AgreementLogCreateReq) GetCycleDays() int32 {
	if x != nil {
		return x.CycleDays
	}
	return 0
}

func (x *AgreementLogCreateReq) GetNextExecTime() *timestamppb.Timestamp {
	if x != nil {
		return x.NextExecTime
	}
	return nil
}

func (x *AgreementLogCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建AgreementLog返回
type AgreementLogCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//外部签约协议号
	OuterAgreementNo string `protobuf:"bytes,2,opt,name=outerAgreementNo,proto3" json:"outerAgreementNo,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,3,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	//渠道
	ChId int64 `protobuf:"varint,5,opt,name=chId,proto3" json:"chId,omitempty"`
	//用户名称
	UserName string `protobuf:"bytes,6,opt,name=userName,proto3" json:"userName,omitempty"`
	//商品名称
	PaymentName string `protobuf:"bytes,7,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//支付配置ID payment_config表的ID
	PaymentId int64 `protobuf:"varint,8,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	//状态：1、待签约，2、签约成功，3、取消签约
	State int32 `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	//每期扣款金额,单位：分
	Payment int64 `protobuf:"varint,10,opt,name=payment,proto3" json:"payment,omitempty"`
	//支付方式：Alipay,Google,WeChat
	AgreementType string `protobuf:"bytes,11,opt,name=agreementType,proto3" json:"agreementType,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,12,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//第几期
	Times int64 `protobuf:"varint,13,opt,name=times,proto3" json:"times,omitempty"`
	//周期天数
	CycleDays int32 `protobuf:"varint,14,opt,name=cycleDays,proto3" json:"cycleDays,omitempty"`
	//下次执行时间
	NextExecTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=nextExecTime,proto3" json:"nextExecTime,omitempty"`
	//备注
	Remark string `protobuf:"bytes,16,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,19,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,20,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,21,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *AgreementLogCreateReply) Reset() {
	*x = AgreementLogCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementLogCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementLogCreateReply) ProtoMessage() {}

func (x *AgreementLogCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementLogCreateReply.ProtoReflect.Descriptor instead.
func (*AgreementLogCreateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP(), []int{5}
}

func (x *AgreementLogCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgreementLogCreateReply) GetOuterAgreementNo() string {
	if x != nil {
		return x.OuterAgreementNo
	}
	return ""
}

func (x *AgreementLogCreateReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AgreementLogCreateReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgreementLogCreateReply) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *AgreementLogCreateReply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AgreementLogCreateReply) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *AgreementLogCreateReply) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *AgreementLogCreateReply) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AgreementLogCreateReply) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *AgreementLogCreateReply) GetAgreementType() string {
	if x != nil {
		return x.AgreementType
	}
	return ""
}

func (x *AgreementLogCreateReply) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *AgreementLogCreateReply) GetTimes() int64 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *AgreementLogCreateReply) GetCycleDays() int32 {
	if x != nil {
		return x.CycleDays
	}
	return 0
}

func (x *AgreementLogCreateReply) GetNextExecTime() *timestamppb.Timestamp {
	if x != nil {
		return x.NextExecTime
	}
	return nil
}

func (x *AgreementLogCreateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AgreementLogCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AgreementLogCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AgreementLogCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *AgreementLogCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *AgreementLogCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新AgreementLog请求
type AgreementLogUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//外部签约协议号
	OuterAgreementNo string `protobuf:"bytes,2,opt,name=outerAgreementNo,proto3" json:"outerAgreementNo,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,3,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	//渠道
	ChId int64 `protobuf:"varint,5,opt,name=chId,proto3" json:"chId,omitempty"`
	//用户名称
	UserName string `protobuf:"bytes,6,opt,name=userName,proto3" json:"userName,omitempty"`
	//商品名称
	PaymentName string `protobuf:"bytes,7,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//支付配置ID payment_config表的ID
	PaymentId int64 `protobuf:"varint,8,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	//状态：1、待签约，2、签约成功，3、取消签约
	State int32 `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	//每期扣款金额,单位：分
	Payment int64 `protobuf:"varint,10,opt,name=payment,proto3" json:"payment,omitempty"`
	//支付方式：Alipay,Google,WeChat
	AgreementType string `protobuf:"bytes,11,opt,name=agreementType,proto3" json:"agreementType,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,12,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//第几期
	Times int64 `protobuf:"varint,13,opt,name=times,proto3" json:"times,omitempty"`
	//周期天数
	CycleDays int32 `protobuf:"varint,14,opt,name=cycleDays,proto3" json:"cycleDays,omitempty"`
	//下次执行时间
	NextExecTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=nextExecTime,proto3" json:"nextExecTime,omitempty"`
	//备注
	Remark string `protobuf:"bytes,16,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AgreementLogUpdateReq) Reset() {
	*x = AgreementLogUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementLogUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementLogUpdateReq) ProtoMessage() {}

func (x *AgreementLogUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementLogUpdateReq.ProtoReflect.Descriptor instead.
func (*AgreementLogUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP(), []int{6}
}

func (x *AgreementLogUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgreementLogUpdateReq) GetOuterAgreementNo() string {
	if x != nil {
		return x.OuterAgreementNo
	}
	return ""
}

func (x *AgreementLogUpdateReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AgreementLogUpdateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgreementLogUpdateReq) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *AgreementLogUpdateReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AgreementLogUpdateReq) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *AgreementLogUpdateReq) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *AgreementLogUpdateReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AgreementLogUpdateReq) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *AgreementLogUpdateReq) GetAgreementType() string {
	if x != nil {
		return x.AgreementType
	}
	return ""
}

func (x *AgreementLogUpdateReq) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *AgreementLogUpdateReq) GetTimes() int64 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *AgreementLogUpdateReq) GetCycleDays() int32 {
	if x != nil {
		return x.CycleDays
	}
	return 0
}

func (x *AgreementLogUpdateReq) GetNextExecTime() *timestamppb.Timestamp {
	if x != nil {
		return x.NextExecTime
	}
	return nil
}

func (x *AgreementLogUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新AgreementLog返回
type AgreementLogUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//外部签约协议号
	OuterAgreementNo string `protobuf:"bytes,2,opt,name=outerAgreementNo,proto3" json:"outerAgreementNo,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,3,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	//渠道
	ChId int64 `protobuf:"varint,5,opt,name=chId,proto3" json:"chId,omitempty"`
	//用户名称
	UserName string `protobuf:"bytes,6,opt,name=userName,proto3" json:"userName,omitempty"`
	//商品名称
	PaymentName string `protobuf:"bytes,7,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//支付配置ID payment_config表的ID
	PaymentId int64 `protobuf:"varint,8,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	//状态：1、待签约，2、签约成功，3、取消签约
	State int32 `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	//每期扣款金额,单位：分
	Payment int64 `protobuf:"varint,10,opt,name=payment,proto3" json:"payment,omitempty"`
	//支付方式：Alipay,Google,WeChat
	AgreementType string `protobuf:"bytes,11,opt,name=agreementType,proto3" json:"agreementType,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,12,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//第几期
	Times int64 `protobuf:"varint,13,opt,name=times,proto3" json:"times,omitempty"`
	//周期天数
	CycleDays int32 `protobuf:"varint,14,opt,name=cycleDays,proto3" json:"cycleDays,omitempty"`
	//下次执行时间
	NextExecTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=nextExecTime,proto3" json:"nextExecTime,omitempty"`
	//备注
	Remark string `protobuf:"bytes,16,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AgreementLogUpdateReply) Reset() {
	*x = AgreementLogUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementLogUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementLogUpdateReply) ProtoMessage() {}

func (x *AgreementLogUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementLogUpdateReply.ProtoReflect.Descriptor instead.
func (*AgreementLogUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP(), []int{7}
}

func (x *AgreementLogUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AgreementLogUpdateReply) GetOuterAgreementNo() string {
	if x != nil {
		return x.OuterAgreementNo
	}
	return ""
}

func (x *AgreementLogUpdateReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AgreementLogUpdateReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AgreementLogUpdateReply) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *AgreementLogUpdateReply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AgreementLogUpdateReply) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *AgreementLogUpdateReply) GetPaymentId() int64 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *AgreementLogUpdateReply) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *AgreementLogUpdateReply) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *AgreementLogUpdateReply) GetAgreementType() string {
	if x != nil {
		return x.AgreementType
	}
	return ""
}

func (x *AgreementLogUpdateReply) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *AgreementLogUpdateReply) GetTimes() int64 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *AgreementLogUpdateReply) GetCycleDays() int32 {
	if x != nil {
		return x.CycleDays
	}
	return 0
}

func (x *AgreementLogUpdateReply) GetNextExecTime() *timestamppb.Timestamp {
	if x != nil {
		return x.NextExecTime
	}
	return nil
}

func (x *AgreementLogUpdateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 删除AgreementLog请求
type AgreementLogDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AgreementLogDeleteReq) Reset() {
	*x = AgreementLogDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementLogDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementLogDeleteReq) ProtoMessage() {}

func (x *AgreementLogDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementLogDeleteReq.ProtoReflect.Descriptor instead.
func (*AgreementLogDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP(), []int{8}
}

func (x *AgreementLogDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除AgreementLog请求
type AgreementLogBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *AgreementLogBatchDeleteReq) Reset() {
	*x = AgreementLogBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementLogBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementLogBatchDeleteReq) ProtoMessage() {}

func (x *AgreementLogBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementLogBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*AgreementLogBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP(), []int{9}
}

func (x *AgreementLogBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除AgreementLog返回
type AgreementLogDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AgreementLogDeleteReply) Reset() {
	*x = AgreementLogDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgreementLogDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgreementLogDeleteReply) ProtoMessage() {}

func (x *AgreementLogDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgreementLogDeleteReply.ProtoReflect.Descriptor instead.
func (*AgreementLogDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP(), []int{10}
}

func (x *AgreementLogDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_novel_agreementlog_v1_agreement_log_proto protoreflect.FileDescriptor

var file_api_novel_agreementlog_v1_agreement_log_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76,
	0x0a, 0x13, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x36,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x7a, 0x0a, 0x15, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xb3, 0x05, 0x0a, 0x0f, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63,
	0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74,
	0x45, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb5, 0x05, 0x0a, 0x11, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a,
	0x0a, 0x10, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x68, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x73, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x73,
	0x12, 0x3e, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xe1, 0x03, 0x0a, 0x15, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x3e, 0x0a, 0x0c,
	0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0xbb, 0x05, 0x0a, 0x17, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x65,
	0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x68, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24,
	0x0a, 0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x79,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61,
	0x79, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x65, 0x63, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x65, 0x63, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xf1, 0x03, 0x0a, 0x15, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68,
	0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x3e,
	0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x65, 0x63, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xf3, 0x03, 0x0a, 0x17, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x75,
	0x74, 0x65, 0x72, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x68, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44,
	0x61, 0x79, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x79, 0x63, 0x6c, 0x65,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x45, 0x78, 0x65, 0x63,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x27, 0x0a, 0x15,
	0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x1a, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xb7, 0x06, 0x0a, 0x0c, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x83, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x67, 0x12, 0x24, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x77, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x12, 0x20, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f,
	0x6c, 0x6f, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x89, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12,
	0x26, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x84, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x26, 0x2e, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x6f, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x86, 0x01, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x6f, 0x67, 0x12, 0x26, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f,
	0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x76,
	0x31, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c, 0x6f, 0x67, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8b, 0x01, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67,
	0x12, 0x2b, 0x2e, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a,
	0x11, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x6c,
	0x6f, 0x67, 0x42, 0x23, 0x5a, 0x21, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x6c, 0x6f,
	0x67, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_novel_agreementlog_v1_agreement_log_proto_rawDescOnce sync.Once
	file_api_novel_agreementlog_v1_agreement_log_proto_rawDescData = file_api_novel_agreementlog_v1_agreement_log_proto_rawDesc
)

func file_api_novel_agreementlog_v1_agreement_log_proto_rawDescGZIP() []byte {
	file_api_novel_agreementlog_v1_agreement_log_proto_rawDescOnce.Do(func() {
		file_api_novel_agreementlog_v1_agreement_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_novel_agreementlog_v1_agreement_log_proto_rawDescData)
	})
	return file_api_novel_agreementlog_v1_agreement_log_proto_rawDescData
}

var file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_novel_agreementlog_v1_agreement_log_proto_goTypes = []interface{}{
	(*AgreementLogPageReq)(nil),        // 0: agreementlog.v1.AgreementLogPageReq
	(*AgreementLogPageReply)(nil),      // 1: agreementlog.v1.AgreementLogPageReply
	(*AgreementLogReq)(nil),            // 2: agreementlog.v1.AgreementLogReq
	(*AgreementLogReply)(nil),          // 3: agreementlog.v1.AgreementLogReply
	(*AgreementLogCreateReq)(nil),      // 4: agreementlog.v1.AgreementLogCreateReq
	(*AgreementLogCreateReply)(nil),    // 5: agreementlog.v1.AgreementLogCreateReply
	(*AgreementLogUpdateReq)(nil),      // 6: agreementlog.v1.AgreementLogUpdateReq
	(*AgreementLogUpdateReply)(nil),    // 7: agreementlog.v1.AgreementLogUpdateReply
	(*AgreementLogDeleteReq)(nil),      // 8: agreementlog.v1.AgreementLogDeleteReq
	(*AgreementLogBatchDeleteReq)(nil), // 9: agreementlog.v1.AgreementLogBatchDeleteReq
	(*AgreementLogDeleteReply)(nil),    // 10: agreementlog.v1.AgreementLogDeleteReply
	(*pagin.Pagination)(nil),           // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),      // 12: google.protobuf.Timestamp
}
var file_api_novel_agreementlog_v1_agreement_log_proto_depIdxs = []int32{
	11, // 0: agreementlog.v1.AgreementLogPageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: agreementlog.v1.AgreementLogPageReq.param:type_name -> agreementlog.v1.AgreementLogReq
	11, // 2: agreementlog.v1.AgreementLogPageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: agreementlog.v1.AgreementLogPageReply.items:type_name -> agreementlog.v1.AgreementLogReply
	12, // 4: agreementlog.v1.AgreementLogReq.nextExecTime:type_name -> google.protobuf.Timestamp
	12, // 5: agreementlog.v1.AgreementLogReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 6: agreementlog.v1.AgreementLogReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 7: agreementlog.v1.AgreementLogReply.nextExecTime:type_name -> google.protobuf.Timestamp
	12, // 8: agreementlog.v1.AgreementLogReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: agreementlog.v1.AgreementLogReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 10: agreementlog.v1.AgreementLogCreateReq.nextExecTime:type_name -> google.protobuf.Timestamp
	12, // 11: agreementlog.v1.AgreementLogCreateReply.nextExecTime:type_name -> google.protobuf.Timestamp
	12, // 12: agreementlog.v1.AgreementLogCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 13: agreementlog.v1.AgreementLogCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 14: agreementlog.v1.AgreementLogUpdateReq.nextExecTime:type_name -> google.protobuf.Timestamp
	12, // 15: agreementlog.v1.AgreementLogUpdateReply.nextExecTime:type_name -> google.protobuf.Timestamp
	0,  // 16: agreementlog.v1.AgreementLog.GetPageAgreementLog:input_type -> agreementlog.v1.AgreementLogPageReq
	2,  // 17: agreementlog.v1.AgreementLog.GetAgreementLog:input_type -> agreementlog.v1.AgreementLogReq
	6,  // 18: agreementlog.v1.AgreementLog.UpdateAgreementLog:input_type -> agreementlog.v1.AgreementLogUpdateReq
	4,  // 19: agreementlog.v1.AgreementLog.CreateAgreementLog:input_type -> agreementlog.v1.AgreementLogCreateReq
	8,  // 20: agreementlog.v1.AgreementLog.DeleteAgreementLog:input_type -> agreementlog.v1.AgreementLogDeleteReq
	9,  // 21: agreementlog.v1.AgreementLog.BatchDeleteAgreementLog:input_type -> agreementlog.v1.AgreementLogBatchDeleteReq
	1,  // 22: agreementlog.v1.AgreementLog.GetPageAgreementLog:output_type -> agreementlog.v1.AgreementLogPageReply
	3,  // 23: agreementlog.v1.AgreementLog.GetAgreementLog:output_type -> agreementlog.v1.AgreementLogReply
	7,  // 24: agreementlog.v1.AgreementLog.UpdateAgreementLog:output_type -> agreementlog.v1.AgreementLogUpdateReply
	5,  // 25: agreementlog.v1.AgreementLog.CreateAgreementLog:output_type -> agreementlog.v1.AgreementLogCreateReply
	10, // 26: agreementlog.v1.AgreementLog.DeleteAgreementLog:output_type -> agreementlog.v1.AgreementLogDeleteReply
	10, // 27: agreementlog.v1.AgreementLog.BatchDeleteAgreementLog:output_type -> agreementlog.v1.AgreementLogDeleteReply
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_api_novel_agreementlog_v1_agreement_log_proto_init() }
func file_api_novel_agreementlog_v1_agreement_log_proto_init() {
	if File_api_novel_agreementlog_v1_agreement_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementLogPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementLogPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementLogCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementLogCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementLogUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementLogUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementLogDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementLogBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgreementLogDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_novel_agreementlog_v1_agreement_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_novel_agreementlog_v1_agreement_log_proto_goTypes,
		DependencyIndexes: file_api_novel_agreementlog_v1_agreement_log_proto_depIdxs,
		MessageInfos:      file_api_novel_agreementlog_v1_agreement_log_proto_msgTypes,
	}.Build()
	File_api_novel_agreementlog_v1_agreement_log_proto = out.File
	file_api_novel_agreementlog_v1_agreement_log_proto_rawDesc = nil
	file_api_novel_agreementlog_v1_agreement_log_proto_goTypes = nil
	file_api_novel_agreementlog_v1_agreement_log_proto_depIdxs = nil
}
