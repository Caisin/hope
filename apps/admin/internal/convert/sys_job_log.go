// Code generated by Caisin. DO NOT EDIT.
// source: apps/admin/internal/data/ent/schema/sys_job_log.go

package convert

import (
	"google.golang.org/protobuf/types/known/durationpb"
	"google.golang.org/protobuf/types/known/timestamppb"
	v1 "hope/api/admin/sysjoblog/v1"
	"hope/apps/admin/internal/data/ent"
)

func SysJobLogUpdateReq2Data(v *v1.SysJobLogUpdateReq) *ent.SysJobLog {
	if v == nil {
		return nil
	}
	return &ent.SysJobLog{
		ID:       v.Id,
		JobId:    v.JobId,
		JobName:  v.JobName,
		EntryId:  v.EntryId,
		Status:   v.Status,
		Duration: v.Duration.AsDuration(),
	}
}

func SysJobLogData2UpdateReq(v *ent.SysJobLog) *v1.SysJobLogUpdateReq {
	if v == nil {
		return nil
	}
	return &v1.SysJobLogUpdateReq{
		Id:       v.ID,
		JobId:    v.JobId,
		JobName:  v.JobName,
		EntryId:  v.EntryId,
		Status:   v.Status,
		Duration: durationpb.New(v.Duration),
	}
}

func SysJobLogCreateReq2Data(v *v1.SysJobLogCreateReq) *ent.SysJobLog {
	if v == nil {
		return nil
	}
	return &ent.SysJobLog{
		JobId:    v.JobId,
		JobName:  v.JobName,
		EntryId:  v.EntryId,
		Status:   v.Status,
		Duration: v.Duration.AsDuration(),
	}
}

func SysJobLogData2CreateReq(v *ent.SysJobLog) *v1.SysJobLogCreateReq {
	if v == nil {
		return nil
	}
	return &v1.SysJobLogCreateReq{
		JobId:    v.JobId,
		JobName:  v.JobName,
		EntryId:  v.EntryId,
		Status:   v.Status,
		Duration: durationpb.New(v.Duration),
	}
}

func SysJobLogReq2Data(v *v1.SysJobLogReq) *ent.SysJobLog {
	if v == nil {
		return nil
	}
	return &ent.SysJobLog{
		JobId:    v.JobId,
		JobName:  v.JobName,
		EntryId:  v.EntryId,
		Status:   v.Status,
		Duration: v.Duration.AsDuration(),
	}
}

func SysJobLogData2Req(v *ent.SysJobLog) *v1.SysJobLogReq {
	if v == nil {
		return nil
	}
	return &v1.SysJobLogReq{
		JobId:    v.JobId,
		JobName:  v.JobName,
		EntryId:  v.EntryId,
		Status:   v.Status,
		Duration: durationpb.New(v.Duration),
	}
}

func SysJobLogReply2Data(v *v1.SysJobLogReply) *ent.SysJobLog {
	if v == nil {
		return nil
	}
	return &ent.SysJobLog{
		ID:        v.Id,
		JobId:     v.JobId,
		JobName:   v.JobName,
		EntryId:   v.EntryId,
		Status:    v.Status,
		Duration:  v.Duration.AsDuration(),
		Info:      v.Info,
		CreatedAt: v.CreatedAt.AsTime(),
		UpdatedAt: v.UpdatedAt.AsTime(),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func SysJobLogData2Reply(v *ent.SysJobLog) *v1.SysJobLogReply {
	if v == nil {
		return nil
	}
	return &v1.SysJobLogReply{
		Id:        v.ID,
		JobId:     v.JobId,
		JobName:   v.JobName,
		EntryId:   v.EntryId,
		Status:    v.Status,
		Duration:  durationpb.New(v.Duration),
		Info:      v.Info,
		CreatedAt: timestamppb.New(v.CreatedAt),
		UpdatedAt: timestamppb.New(v.UpdatedAt),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func SysJobLogUpdateReply2Data(v *v1.SysJobLogUpdateReply) *ent.SysJobLog {
	if v == nil {
		return nil
	}
	return &ent.SysJobLog{
		ID:       v.Id,
		JobId:    v.JobId,
		JobName:  v.JobName,
		EntryId:  v.EntryId,
		Status:   v.Status,
		Duration: v.Duration.AsDuration(),
	}
}

func SysJobLogData2UpdateReply(v *ent.SysJobLog) *v1.SysJobLogUpdateReply {
	if v == nil {
		return nil
	}
	return &v1.SysJobLogUpdateReply{
		Id:       v.ID,
		JobId:    v.JobId,
		JobName:  v.JobName,
		EntryId:  v.EntryId,
		Status:   v.Status,
		Duration: durationpb.New(v.Duration),
	}
}

func SysJobLogCreateReply2Data(v *v1.SysJobLogCreateReply) *ent.SysJobLog {
	if v == nil {
		return nil
	}
	return &ent.SysJobLog{
		ID:        v.Id,
		JobId:     v.JobId,
		JobName:   v.JobName,
		EntryId:   v.EntryId,
		Status:    v.Status,
		Duration:  v.Duration.AsDuration(),
		Info:      v.Info,
		CreatedAt: v.CreatedAt.AsTime(),
		UpdatedAt: v.UpdatedAt.AsTime(),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func SysJobLogData2CreateReply(v *ent.SysJobLog) *v1.SysJobLogCreateReply {
	if v == nil {
		return nil
	}
	return &v1.SysJobLogCreateReply{
		Id:        v.ID,
		JobId:     v.JobId,
		JobName:   v.JobName,
		EntryId:   v.EntryId,
		Status:    v.Status,
		Duration:  durationpb.New(v.Duration),
		Info:      v.Info,
		CreatedAt: timestamppb.New(v.CreatedAt),
		UpdatedAt: timestamppb.New(v.UpdatedAt),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}
