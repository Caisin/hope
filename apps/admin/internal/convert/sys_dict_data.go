// Code generated by Caisin. DO NOT EDIT.
// source: apps/admin/internal/data/ent/schema/sys_dict_data.go

package convert

import (
	"google.golang.org/protobuf/types/known/timestamppb"
	v1 "hope/api/admin/sysdictdata/v1"
	"hope/apps/admin/internal/data/ent"
)

func SysDictDataUpdateReq2Data(v *v1.SysDictDataUpdateReq) *ent.SysDictData {
	if v == nil {
		return nil
	}
	return &ent.SysDictData{
		ID:        v.Id,
		TypeId:    v.TypeId,
		TypeCode:  v.TypeCode,
		DictSort:  v.DictSort,
		DictLabel: v.DictLabel,
		DictValue: v.DictValue,
		IsDefault: v.IsDefault,
		Status:    v.Status,
		Default:   v.Default,
		Remark:    v.Remark,
	}
}

func SysDictDataData2UpdateReq(v *ent.SysDictData) *v1.SysDictDataUpdateReq {
	if v == nil {
		return nil
	}
	return &v1.SysDictDataUpdateReq{
		Id:        v.ID,
		TypeId:    v.TypeId,
		TypeCode:  v.TypeCode,
		DictSort:  v.DictSort,
		DictLabel: v.DictLabel,
		DictValue: v.DictValue,
		IsDefault: v.IsDefault,
		Status:    v.Status,
		Default:   v.Default,
		Remark:    v.Remark,
	}
}

func SysDictDataCreateReq2Data(v *v1.SysDictDataCreateReq) *ent.SysDictData {
	if v == nil {
		return nil
	}
	return &ent.SysDictData{
		TypeId:    v.TypeId,
		TypeCode:  v.TypeCode,
		DictSort:  v.DictSort,
		DictLabel: v.DictLabel,
		DictValue: v.DictValue,
		IsDefault: v.IsDefault,
		Status:    v.Status,
		Default:   v.Default,
		Remark:    v.Remark,
	}
}

func SysDictDataData2CreateReq(v *ent.SysDictData) *v1.SysDictDataCreateReq {
	if v == nil {
		return nil
	}
	return &v1.SysDictDataCreateReq{
		TypeId:    v.TypeId,
		TypeCode:  v.TypeCode,
		DictSort:  v.DictSort,
		DictLabel: v.DictLabel,
		DictValue: v.DictValue,
		IsDefault: v.IsDefault,
		Status:    v.Status,
		Default:   v.Default,
		Remark:    v.Remark,
	}
}

func SysDictDataReq2Data(v *v1.SysDictDataReq) *ent.SysDictData {
	if v == nil {
		return nil
	}
	return &ent.SysDictData{
		TypeId:    v.TypeId,
		TypeCode:  v.TypeCode,
		DictSort:  v.DictSort,
		DictLabel: v.DictLabel,
		DictValue: v.DictValue,
		IsDefault: v.IsDefault,
		Status:    v.Status,
		Default:   v.Default,
		Remark:    v.Remark,
	}
}

func SysDictDataData2Req(v *ent.SysDictData) *v1.SysDictDataReq {
	if v == nil {
		return nil
	}
	return &v1.SysDictDataReq{
		TypeId:    v.TypeId,
		TypeCode:  v.TypeCode,
		DictSort:  v.DictSort,
		DictLabel: v.DictLabel,
		DictValue: v.DictValue,
		IsDefault: v.IsDefault,
		Status:    v.Status,
		Default:   v.Default,
		Remark:    v.Remark,
	}
}

func SysDictDataData2Reply(v *ent.SysDictData) *v1.SysDictDataData {
	if v == nil {
		return nil
	}
	return &v1.SysDictDataData{
		Id:        v.ID,
		TypeId:    v.TypeId,
		TypeCode:  v.TypeCode,
		DictSort:  v.DictSort,
		DictLabel: v.DictLabel,
		DictValue: v.DictValue,
		IsDefault: v.IsDefault,
		Status:    v.Status,
		Default:   v.Default,
		Remark:    v.Remark,
		CreatedAt: timestamppb.New(v.CreatedAt),
		UpdatedAt: timestamppb.New(v.UpdatedAt),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}
