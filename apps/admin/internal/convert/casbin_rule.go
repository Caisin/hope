// Code generated by Caisin. DO NOT EDIT.
// source: apps/admin/internal/data/ent/schema/casbin_rule.go

package convert

import (
	"google.golang.org/protobuf/types/known/timestamppb"
	v1 "hope/api/admin/casbinrule/v1"
	"hope/apps/admin/internal/data/ent"
)

func CasbinRuleUpdateReq2Data(v *v1.CasbinRuleUpdateReq) *ent.CasbinRule {
	if v == nil {
		return nil
	}
	return &ent.CasbinRule{
		ID:    v.Id,
		PType: v.PType,
		V0:    v.V0,
		V1:    v.V1,
		V2:    v.V2,
		V3:    v.V3,
		V4:    v.V4,
		V5:    v.V5,
	}
}

func CasbinRuleData2UpdateReq(v *ent.CasbinRule) *v1.CasbinRuleUpdateReq {
	if v == nil {
		return nil
	}
	return &v1.CasbinRuleUpdateReq{
		Id:    v.ID,
		PType: v.PType,
		V0:    v.V0,
		V1:    v.V1,
		V2:    v.V2,
		V3:    v.V3,
		V4:    v.V4,
		V5:    v.V5,
	}
}

func CasbinRuleCreateReq2Data(v *v1.CasbinRuleCreateReq) *ent.CasbinRule {
	if v == nil {
		return nil
	}
	return &ent.CasbinRule{
		PType: v.PType,
		V0:    v.V0,
		V1:    v.V1,
		V2:    v.V2,
		V3:    v.V3,
		V4:    v.V4,
		V5:    v.V5,
	}
}

func CasbinRuleData2CreateReq(v *ent.CasbinRule) *v1.CasbinRuleCreateReq {
	if v == nil {
		return nil
	}
	return &v1.CasbinRuleCreateReq{
		PType: v.PType,
		V0:    v.V0,
		V1:    v.V1,
		V2:    v.V2,
		V3:    v.V3,
		V4:    v.V4,
		V5:    v.V5,
	}
}

func CasbinRuleReq2Data(v *v1.CasbinRuleReq) *ent.CasbinRule {
	if v == nil {
		return nil
	}
	return &ent.CasbinRule{
		PType: v.PType,
		V0:    v.V0,
		V1:    v.V1,
		V2:    v.V2,
		V3:    v.V3,
		V4:    v.V4,
		V5:    v.V5,
	}
}

func CasbinRuleData2Req(v *ent.CasbinRule) *v1.CasbinRuleReq {
	if v == nil {
		return nil
	}
	return &v1.CasbinRuleReq{
		PType: v.PType,
		V0:    v.V0,
		V1:    v.V1,
		V2:    v.V2,
		V3:    v.V3,
		V4:    v.V4,
		V5:    v.V5,
	}
}

func CasbinRuleData2Reply(v *ent.CasbinRule) *v1.CasbinRuleData {
	if v == nil {
		return nil
	}
	return &v1.CasbinRuleData{
		Id:        v.ID,
		PType:     v.PType,
		V0:        v.V0,
		V1:        v.V1,
		V2:        v.V2,
		V3:        v.V3,
		V4:        v.V4,
		V5:        v.V5,
		CreatedAt: timestamppb.New(v.CreatedAt),
		UpdatedAt: timestamppb.New(v.UpdatedAt),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}
