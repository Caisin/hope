// Code generated by entc, DO NOT EDIT.

package sysjoblog

import (
	"time"
)

const (
	// Label holds the string label denoting the sysjoblog type in the database.
	Label = "sys_job_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldJobId holds the string denoting the jobid field in the database.
	FieldJobId = "job_id"
	// FieldJobName holds the string denoting the jobname field in the database.
	FieldJobName = "job_name"
	// FieldEntryId holds the string denoting the entryid field in the database.
	FieldEntryId = "entry_id"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldDuration holds the string denoting the duration field in the database.
	FieldDuration = "duration"
	// FieldInfo holds the string denoting the info field in the database.
	FieldInfo = "info"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreateBy holds the string denoting the createby field in the database.
	FieldCreateBy = "create_by"
	// FieldUpdateBy holds the string denoting the updateby field in the database.
	FieldUpdateBy = "update_by"
	// FieldTenantId holds the string denoting the tenantid field in the database.
	FieldTenantId = "tenant_id"
	// EdgeJob holds the string denoting the job edge name in mutations.
	EdgeJob = "job"
	// Table holds the table name of the sysjoblog in the database.
	Table = "sys_job_logs"
	// JobTable is the table that holds the job relation/edge.
	JobTable = "sys_job_logs"
	// JobInverseTable is the table name for the SysJob entity.
	// It exists in this package in order to avoid circular dependency with the "sysjob" package.
	JobInverseTable = "sys_jobs"
	// JobColumn is the table column denoting the job relation/edge.
	JobColumn = "sys_job_logs"
)

// Columns holds all SQL columns for sysjoblog fields.
var Columns = []string{
	FieldID,
	FieldJobId,
	FieldJobName,
	FieldEntryId,
	FieldStatus,
	FieldDuration,
	FieldInfo,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreateBy,
	FieldUpdateBy,
	FieldTenantId,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "sys_job_logs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"sys_job_logs",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updatedAt" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updatedAt" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCreateBy holds the default value on creation for the "createBy" field.
	DefaultCreateBy int64
	// DefaultUpdateBy holds the default value on creation for the "updateBy" field.
	DefaultUpdateBy int64
	// DefaultTenantId holds the default value on creation for the "tenantId" field.
	DefaultTenantId int64
)
