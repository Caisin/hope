// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/param/qiniuconfig/v1/qiniu_config.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type QiniuConfigPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *QiniuConfigReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *QiniuConfigPageReq) Reset() {
	*x = QiniuConfigPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiniuConfigPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiniuConfigPageReq) ProtoMessage() {}

func (x *QiniuConfigPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiniuConfigPageReq.ProtoReflect.Descriptor instead.
func (*QiniuConfigPageReq) Descriptor() ([]byte, []int) {
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP(), []int{0}
}

func (x *QiniuConfigPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *QiniuConfigPageReq) GetParam() *QiniuConfigReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type QiniuConfigPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*QiniuConfigReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *QiniuConfigPageReply) Reset() {
	*x = QiniuConfigPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiniuConfigPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiniuConfigPageReply) ProtoMessage() {}

func (x *QiniuConfigPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiniuConfigPageReply.ProtoReflect.Descriptor instead.
func (*QiniuConfigPageReply) Descriptor() ([]byte, []int) {
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP(), []int{1}
}

func (x *QiniuConfigPageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *QiniuConfigPageReply) GetItems() []*QiniuConfigReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type QiniuConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//accessKey
	AccessKey string `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	//Bucket 识别符
	Bucket string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//外链域名
	Host string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	//secretKey
	SecretKey string `protobuf:"bytes,5,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	//空间类型
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	//机房
	Zone string `protobuf:"bytes,7,opt,name=zone,proto3" json:"zone,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,12,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *QiniuConfigReq) Reset() {
	*x = QiniuConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiniuConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiniuConfigReq) ProtoMessage() {}

func (x *QiniuConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiniuConfigReq.ProtoReflect.Descriptor instead.
func (*QiniuConfigReq) Descriptor() ([]byte, []int) {
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP(), []int{2}
}

func (x *QiniuConfigReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QiniuConfigReq) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *QiniuConfigReq) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *QiniuConfigReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *QiniuConfigReq) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *QiniuConfigReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QiniuConfigReq) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *QiniuConfigReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *QiniuConfigReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *QiniuConfigReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *QiniuConfigReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *QiniuConfigReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type QiniuConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//accessKey
	AccessKey string `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	//Bucket 识别符
	Bucket string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//外链域名
	Host string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	//secretKey
	SecretKey string `protobuf:"bytes,5,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	//空间类型
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	//机房
	Zone string `protobuf:"bytes,7,opt,name=zone,proto3" json:"zone,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,12,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *QiniuConfigReply) Reset() {
	*x = QiniuConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiniuConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiniuConfigReply) ProtoMessage() {}

func (x *QiniuConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiniuConfigReply.ProtoReflect.Descriptor instead.
func (*QiniuConfigReply) Descriptor() ([]byte, []int) {
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP(), []int{3}
}

func (x *QiniuConfigReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QiniuConfigReply) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *QiniuConfigReply) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *QiniuConfigReply) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *QiniuConfigReply) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *QiniuConfigReply) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QiniuConfigReply) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *QiniuConfigReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *QiniuConfigReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *QiniuConfigReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *QiniuConfigReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *QiniuConfigReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建QiniuConfig请求
type QiniuConfigCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//accessKey
	AccessKey string `protobuf:"bytes,1,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	//Bucket 识别符
	Bucket string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//外链域名
	Host string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	//secretKey
	SecretKey string `protobuf:"bytes,4,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	//空间类型
	Type string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	//机房
	Zone string `protobuf:"bytes,6,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *QiniuConfigCreateReq) Reset() {
	*x = QiniuConfigCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiniuConfigCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiniuConfigCreateReq) ProtoMessage() {}

func (x *QiniuConfigCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiniuConfigCreateReq.ProtoReflect.Descriptor instead.
func (*QiniuConfigCreateReq) Descriptor() ([]byte, []int) {
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP(), []int{4}
}

func (x *QiniuConfigCreateReq) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *QiniuConfigCreateReq) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *QiniuConfigCreateReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *QiniuConfigCreateReq) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *QiniuConfigCreateReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QiniuConfigCreateReq) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

// 创建QiniuConfig返回
type QiniuConfigCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//accessKey
	AccessKey string `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	//Bucket 识别符
	Bucket string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//外链域名
	Host string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	//secretKey
	SecretKey string `protobuf:"bytes,5,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	//空间类型
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	//机房
	Zone string `protobuf:"bytes,7,opt,name=zone,proto3" json:"zone,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,12,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *QiniuConfigCreateReply) Reset() {
	*x = QiniuConfigCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiniuConfigCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiniuConfigCreateReply) ProtoMessage() {}

func (x *QiniuConfigCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiniuConfigCreateReply.ProtoReflect.Descriptor instead.
func (*QiniuConfigCreateReply) Descriptor() ([]byte, []int) {
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP(), []int{5}
}

func (x *QiniuConfigCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QiniuConfigCreateReply) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *QiniuConfigCreateReply) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *QiniuConfigCreateReply) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *QiniuConfigCreateReply) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *QiniuConfigCreateReply) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QiniuConfigCreateReply) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

func (x *QiniuConfigCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *QiniuConfigCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *QiniuConfigCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *QiniuConfigCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *QiniuConfigCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新QiniuConfig请求
type QiniuConfigUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//accessKey
	AccessKey string `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	//Bucket 识别符
	Bucket string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//外链域名
	Host string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	//secretKey
	SecretKey string `protobuf:"bytes,5,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	//空间类型
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	//机房
	Zone string `protobuf:"bytes,7,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *QiniuConfigUpdateReq) Reset() {
	*x = QiniuConfigUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiniuConfigUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiniuConfigUpdateReq) ProtoMessage() {}

func (x *QiniuConfigUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiniuConfigUpdateReq.ProtoReflect.Descriptor instead.
func (*QiniuConfigUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP(), []int{6}
}

func (x *QiniuConfigUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QiniuConfigUpdateReq) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *QiniuConfigUpdateReq) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *QiniuConfigUpdateReq) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *QiniuConfigUpdateReq) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *QiniuConfigUpdateReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QiniuConfigUpdateReq) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

// 更新QiniuConfig返回
type QiniuConfigUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//accessKey
	AccessKey string `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey,omitempty"`
	//Bucket 识别符
	Bucket string `protobuf:"bytes,3,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//外链域名
	Host string `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	//secretKey
	SecretKey string `protobuf:"bytes,5,opt,name=secretKey,proto3" json:"secretKey,omitempty"`
	//空间类型
	Type string `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty"`
	//机房
	Zone string `protobuf:"bytes,7,opt,name=zone,proto3" json:"zone,omitempty"`
}

func (x *QiniuConfigUpdateReply) Reset() {
	*x = QiniuConfigUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiniuConfigUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiniuConfigUpdateReply) ProtoMessage() {}

func (x *QiniuConfigUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiniuConfigUpdateReply.ProtoReflect.Descriptor instead.
func (*QiniuConfigUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP(), []int{7}
}

func (x *QiniuConfigUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QiniuConfigUpdateReply) GetAccessKey() string {
	if x != nil {
		return x.AccessKey
	}
	return ""
}

func (x *QiniuConfigUpdateReply) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *QiniuConfigUpdateReply) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *QiniuConfigUpdateReply) GetSecretKey() string {
	if x != nil {
		return x.SecretKey
	}
	return ""
}

func (x *QiniuConfigUpdateReply) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QiniuConfigUpdateReply) GetZone() string {
	if x != nil {
		return x.Zone
	}
	return ""
}

// 删除QiniuConfig请求
type QiniuConfigDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *QiniuConfigDeleteReq) Reset() {
	*x = QiniuConfigDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiniuConfigDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiniuConfigDeleteReq) ProtoMessage() {}

func (x *QiniuConfigDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiniuConfigDeleteReq.ProtoReflect.Descriptor instead.
func (*QiniuConfigDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP(), []int{8}
}

func (x *QiniuConfigDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除QiniuConfig请求
type QiniuConfigBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *QiniuConfigBatchDeleteReq) Reset() {
	*x = QiniuConfigBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiniuConfigBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiniuConfigBatchDeleteReq) ProtoMessage() {}

func (x *QiniuConfigBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiniuConfigBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*QiniuConfigBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP(), []int{9}
}

func (x *QiniuConfigBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除QiniuConfig返回
type QiniuConfigDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *QiniuConfigDeleteReply) Reset() {
	*x = QiniuConfigDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QiniuConfigDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QiniuConfigDeleteReply) ProtoMessage() {}

func (x *QiniuConfigDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QiniuConfigDeleteReply.ProtoReflect.Descriptor instead.
func (*QiniuConfigDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP(), []int{10}
}

func (x *QiniuConfigDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_param_qiniuconfig_v1_qiniu_config_proto protoreflect.FileDescriptor

var file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDesc = []byte{
	0x0a, 0x2b, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2f, 0x71, 0x69, 0x6e, 0x69,
	0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x69, 0x6e, 0x69, 0x75,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x71,
	0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x12, 0x51,
	0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x71, 0x69, 0x6e, 0x69,
	0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69, 0x75,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x22, 0x77, 0x0a, 0x14, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xf8, 0x02, 0x0a, 0x0e, 0x51, 0x69,
	0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0xfa, 0x02, 0x0a, 0x10, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0xa6, 0x01, 0x0a, 0x14, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0x80, 0x03, 0x0a, 0x16, 0x51,
	0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68,
	0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb6, 0x01,
	0x0a, 0x14, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x16, 0x51, 0x69, 0x6e, 0x69, 0x75,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4b, 0x65, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x7a, 0x6f, 0x6e,
	0x65, 0x22, 0x26, 0x0a, 0x14, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x19, 0x51, 0x69, 0x6e,
	0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x51, 0x69, 0x6e, 0x69,
	0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x89, 0x06, 0x0a, 0x0b, 0x51,
	0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x7c, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x22, 0x2e, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x70, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x51,
	0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x2e, 0x71, 0x69, 0x6e,
	0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69,
	0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x71, 0x69, 0x6e,
	0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69,
	0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x82, 0x01, 0x0a, 0x11, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x24, 0x2e, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x1a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x69, 0x6e, 0x69,
	0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12,
	0x7d, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x2e, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x71, 0x69, 0x6e,
	0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69,
	0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f,
	0x71, 0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x7f,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x24, 0x2e, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x71, 0x69, 0x6e, 0x69,
	0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69, 0x75,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x71,
	0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x84, 0x01, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x51,
	0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x2e, 0x71, 0x69, 0x6e,
	0x69, 0x75, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69,
	0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x69, 0x6e, 0x69, 0x75, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x69, 0x6e, 0x69, 0x75,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x22, 0x5a, 0x20, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2f, 0x71, 0x69, 0x6e, 0x69, 0x75, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescOnce sync.Once
	file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescData = file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDesc
)

func file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescGZIP() []byte {
	file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescOnce.Do(func() {
		file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescData)
	})
	return file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDescData
}

var file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_param_qiniuconfig_v1_qiniu_config_proto_goTypes = []interface{}{
	(*QiniuConfigPageReq)(nil),        // 0: qiniuconfig.v1.QiniuConfigPageReq
	(*QiniuConfigPageReply)(nil),      // 1: qiniuconfig.v1.QiniuConfigPageReply
	(*QiniuConfigReq)(nil),            // 2: qiniuconfig.v1.QiniuConfigReq
	(*QiniuConfigReply)(nil),          // 3: qiniuconfig.v1.QiniuConfigReply
	(*QiniuConfigCreateReq)(nil),      // 4: qiniuconfig.v1.QiniuConfigCreateReq
	(*QiniuConfigCreateReply)(nil),    // 5: qiniuconfig.v1.QiniuConfigCreateReply
	(*QiniuConfigUpdateReq)(nil),      // 6: qiniuconfig.v1.QiniuConfigUpdateReq
	(*QiniuConfigUpdateReply)(nil),    // 7: qiniuconfig.v1.QiniuConfigUpdateReply
	(*QiniuConfigDeleteReq)(nil),      // 8: qiniuconfig.v1.QiniuConfigDeleteReq
	(*QiniuConfigBatchDeleteReq)(nil), // 9: qiniuconfig.v1.QiniuConfigBatchDeleteReq
	(*QiniuConfigDeleteReply)(nil),    // 10: qiniuconfig.v1.QiniuConfigDeleteReply
	(*pagin.Pagination)(nil),          // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),     // 12: google.protobuf.Timestamp
}
var file_api_param_qiniuconfig_v1_qiniu_config_proto_depIdxs = []int32{
	11, // 0: qiniuconfig.v1.QiniuConfigPageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: qiniuconfig.v1.QiniuConfigPageReq.param:type_name -> qiniuconfig.v1.QiniuConfigReq
	11, // 2: qiniuconfig.v1.QiniuConfigPageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: qiniuconfig.v1.QiniuConfigPageReply.items:type_name -> qiniuconfig.v1.QiniuConfigReply
	12, // 4: qiniuconfig.v1.QiniuConfigReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: qiniuconfig.v1.QiniuConfigReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: qiniuconfig.v1.QiniuConfigReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: qiniuconfig.v1.QiniuConfigReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: qiniuconfig.v1.QiniuConfigCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: qiniuconfig.v1.QiniuConfigCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: qiniuconfig.v1.QiniuConfig.GetPageQiniuConfig:input_type -> qiniuconfig.v1.QiniuConfigPageReq
	2,  // 11: qiniuconfig.v1.QiniuConfig.GetQiniuConfig:input_type -> qiniuconfig.v1.QiniuConfigReq
	6,  // 12: qiniuconfig.v1.QiniuConfig.UpdateQiniuConfig:input_type -> qiniuconfig.v1.QiniuConfigUpdateReq
	4,  // 13: qiniuconfig.v1.QiniuConfig.CreateQiniuConfig:input_type -> qiniuconfig.v1.QiniuConfigCreateReq
	8,  // 14: qiniuconfig.v1.QiniuConfig.DeleteQiniuConfig:input_type -> qiniuconfig.v1.QiniuConfigDeleteReq
	9,  // 15: qiniuconfig.v1.QiniuConfig.BatchDeleteQiniuConfig:input_type -> qiniuconfig.v1.QiniuConfigBatchDeleteReq
	1,  // 16: qiniuconfig.v1.QiniuConfig.GetPageQiniuConfig:output_type -> qiniuconfig.v1.QiniuConfigPageReply
	3,  // 17: qiniuconfig.v1.QiniuConfig.GetQiniuConfig:output_type -> qiniuconfig.v1.QiniuConfigReply
	7,  // 18: qiniuconfig.v1.QiniuConfig.UpdateQiniuConfig:output_type -> qiniuconfig.v1.QiniuConfigUpdateReply
	5,  // 19: qiniuconfig.v1.QiniuConfig.CreateQiniuConfig:output_type -> qiniuconfig.v1.QiniuConfigCreateReply
	10, // 20: qiniuconfig.v1.QiniuConfig.DeleteQiniuConfig:output_type -> qiniuconfig.v1.QiniuConfigDeleteReply
	10, // 21: qiniuconfig.v1.QiniuConfig.BatchDeleteQiniuConfig:output_type -> qiniuconfig.v1.QiniuConfigDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_param_qiniuconfig_v1_qiniu_config_proto_init() }
func file_api_param_qiniuconfig_v1_qiniu_config_proto_init() {
	if File_api_param_qiniuconfig_v1_qiniu_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiniuConfigPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiniuConfigPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiniuConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiniuConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiniuConfigCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiniuConfigCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiniuConfigUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiniuConfigUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiniuConfigDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiniuConfigBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QiniuConfigDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_param_qiniuconfig_v1_qiniu_config_proto_goTypes,
		DependencyIndexes: file_api_param_qiniuconfig_v1_qiniu_config_proto_depIdxs,
		MessageInfos:      file_api_param_qiniuconfig_v1_qiniu_config_proto_msgTypes,
	}.Build()
	File_api_param_qiniuconfig_v1_qiniu_config_proto = out.File
	file_api_param_qiniuconfig_v1_qiniu_config_proto_rawDesc = nil
	file_api_param_qiniuconfig_v1_qiniu_config_proto_goTypes = nil
	file_api_param_qiniuconfig_v1_qiniu_config_proto_depIdxs = nil
}
