// Code generated by entc, DO NOT EDIT.

package sysjob

import (
	"fmt"
	"time"
)

const (
	// Label holds the string label denoting the sysjob type in the database.
	Label = "sys_job"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldJobName holds the string denoting the jobname field in the database.
	FieldJobName = "job_name"
	// FieldJobGroup holds the string denoting the jobgroup field in the database.
	FieldJobGroup = "job_group"
	// FieldJobType holds the string denoting the jobtype field in the database.
	FieldJobType = "job_type"
	// FieldCronExpression holds the string denoting the cronexpression field in the database.
	FieldCronExpression = "cron_expression"
	// FieldInvokeTarget holds the string denoting the invoketarget field in the database.
	FieldInvokeTarget = "invoke_target"
	// FieldArgs holds the string denoting the args field in the database.
	FieldArgs = "args"
	// FieldExecPolicy holds the string denoting the execpolicy field in the database.
	FieldExecPolicy = "exec_policy"
	// FieldConcurrent holds the string denoting the concurrent field in the database.
	FieldConcurrent = "concurrent"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldEntryId holds the string denoting the entryid field in the database.
	FieldEntryId = "entry_id"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreateBy holds the string denoting the createby field in the database.
	FieldCreateBy = "create_by"
	// FieldUpdateBy holds the string denoting the updateby field in the database.
	FieldUpdateBy = "update_by"
	// FieldTenantId holds the string denoting the tenantid field in the database.
	FieldTenantId = "tenant_id"
	// EdgeLogs holds the string denoting the logs edge name in mutations.
	EdgeLogs = "logs"
	// Table holds the table name of the sysjob in the database.
	Table = "sys_jobs"
	// LogsTable is the table that holds the logs relation/edge.
	LogsTable = "sys_job_logs"
	// LogsInverseTable is the table name for the SysJobLog entity.
	// It exists in this package in order to avoid circular dependency with the "sysjoblog" package.
	LogsInverseTable = "sys_job_logs"
	// LogsColumn is the table column denoting the logs relation/edge.
	LogsColumn = "job_id"
)

// Columns holds all SQL columns for sysjob fields.
var Columns = []string{
	FieldID,
	FieldJobName,
	FieldJobGroup,
	FieldJobType,
	FieldCronExpression,
	FieldInvokeTarget,
	FieldArgs,
	FieldExecPolicy,
	FieldConcurrent,
	FieldState,
	FieldEntryId,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreateBy,
	FieldUpdateBy,
	FieldTenantId,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updatedAt" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updatedAt" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCreateBy holds the default value on creation for the "createBy" field.
	DefaultCreateBy int64
	// DefaultUpdateBy holds the default value on creation for the "updateBy" field.
	DefaultUpdateBy int64
	// DefaultTenantId holds the default value on creation for the "tenantId" field.
	DefaultTenantId int64
)

// State defines the type for the "state" enum field.
type State string

// StateStop is the default value of the State enum.
const DefaultState = StateStop

// State values.
const (
	StatePause State = "Pause"
	StateRun   State = "Run"
	StateStop  State = "Stop"
)

func (s State) String() string {
	return string(s)
}

// StateValidator is a validator for the "state" field enum values. It is called by the builders before save.
func StateValidator(s State) error {
	switch s {
	case StatePause, StateRun, StateStop:
		return nil
	default:
		return fmt.Errorf("sysjob: invalid enum value for state field: %q", s)
	}
}
