// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// ActivitiesColumns holds the columns for the "activities" table.
	ActivitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "activity_code", Type: field.TypeString, Nullable: true},
		{Name: "activity_name", Type: field.TypeString, Nullable: true},
		{Name: "summary", Type: field.TypeString, Nullable: true},
		{Name: "rule_img_sc", Type: field.TypeString, Nullable: true},
		{Name: "rule_img_tc", Type: field.TypeString, Nullable: true},
		{Name: "popup_img", Type: field.TypeString, Nullable: true},
		{Name: "reg_days", Type: field.TypeInt32, Nullable: true},
		{Name: "cycle_type", Type: field.TypeString, Nullable: true},
		{Name: "effect_time", Type: field.TypeTime, Nullable: true},
		{Name: "expired_time", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// ActivitiesTable holds the schema information for the "activities" table.
	ActivitiesTable = &schema.Table{
		Name:       "activities",
		Columns:    ActivitiesColumns,
		PrimaryKey: []*schema.Column{ActivitiesColumns[0]},
	}
	// ActivityComponentsColumns holds the columns for the "activity_components" table.
	ActivityComponentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "activity_code", Type: field.TypeString, Nullable: true},
		{Name: "component_type", Type: field.TypeString, Nullable: true},
		{Name: "policy", Type: field.TypeString, Nullable: true},
		{Name: "vip_days", Type: field.TypeBool, Nullable: true},
		{Name: "min_consume", Type: field.TypeInt64, Nullable: true},
		{Name: "max_consume", Type: field.TypeInt64, Nullable: true},
		{Name: "min_pay_num", Type: field.TypeInt64, Nullable: true},
		{Name: "pay_times", Type: field.TypeInt64, Nullable: true},
		{Name: "pay_amount", Type: field.TypeInt64, Nullable: true},
		{Name: "reg_days", Type: field.TypeInt64, Nullable: true},
		{Name: "summary", Type: field.TypeString, Nullable: true},
		{Name: "asset_item_id", Type: field.TypeInt32, Nullable: true},
		{Name: "amount", Type: field.TypeInt64, Nullable: true},
		{Name: "res_id", Type: field.TypeInt64, Nullable: true},
		{Name: "res_days", Type: field.TypeInt32, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// ActivityComponentsTable holds the schema information for the "activity_components" table.
	ActivityComponentsTable = &schema.Table{
		Name:       "activity_components",
		Columns:    ActivityComponentsColumns,
		PrimaryKey: []*schema.Column{ActivityComponentsColumns[0]},
	}
	// AdChangeLogsColumns holds the columns for the "ad_change_logs" table.
	AdChangeLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "ad_id", Type: field.TypeString, Nullable: true},
		{Name: "ch_id", Type: field.TypeInt64, Nullable: true},
		{Name: "device_id", Type: field.TypeString, Nullable: true},
		{Name: "ext_info", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "social_user_ads", Type: field.TypeInt64, Nullable: true},
	}
	// AdChangeLogsTable holds the schema information for the "ad_change_logs" table.
	AdChangeLogsTable = &schema.Table{
		Name:       "ad_change_logs",
		Columns:    AdChangeLogsColumns,
		PrimaryKey: []*schema.Column{AdChangeLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "ad_change_logs_social_users_ads",
				Columns:    []*schema.Column{AdChangeLogsColumns[11]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdChannelsColumns holds the columns for the "ad_channels" table.
	AdChannelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "channel_name", Type: field.TypeString, Nullable: true},
		{Name: "novel_id", Type: field.TypeInt64, Nullable: true},
		{Name: "reg", Type: field.TypeInt64, Nullable: true},
		{Name: "pay", Type: field.TypeInt64, Nullable: true},
		{Name: "novel_name", Type: field.TypeString, Nullable: true},
		{Name: "chapter_id", Type: field.TypeInt64, Nullable: true},
		{Name: "chapter_num", Type: field.TypeInt32, Nullable: true},
		{Name: "ad_type", Type: field.TypeString, Nullable: true},
		{Name: "img", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// AdChannelsTable holds the schema information for the "ad_channels" table.
	AdChannelsTable = &schema.Table{
		Name:       "ad_channels",
		Columns:    AdChannelsColumns,
		PrimaryKey: []*schema.Column{AdChannelsColumns[0]},
	}
	// AgreementLogsColumns holds the columns for the "agreement_logs" table.
	AgreementLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "outer_agreement_no", Type: field.TypeString, Nullable: true},
		{Name: "order_id", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "ch_id", Type: field.TypeInt64, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "payment_name", Type: field.TypeString, Nullable: true},
		{Name: "payment_id", Type: field.TypeInt64, Nullable: true},
		{Name: "state", Type: field.TypeInt32, Nullable: true},
		{Name: "payment", Type: field.TypeInt64, Nullable: true},
		{Name: "agreement_type", Type: field.TypeEnum, Nullable: true, Enums: []string{"Alipay", "Google", "WeChat", "Apple"}},
		{Name: "vip_type", Type: field.TypeInt64, Nullable: true},
		{Name: "times", Type: field.TypeInt64, Nullable: true},
		{Name: "cycle_days", Type: field.TypeInt32, Nullable: true},
		{Name: "next_exec_time", Type: field.TypeTime, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// AgreementLogsTable holds the schema information for the "agreement_logs" table.
	AgreementLogsTable = &schema.Table{
		Name:       "agreement_logs",
		Columns:    AgreementLogsColumns,
		PrimaryKey: []*schema.Column{AgreementLogsColumns[0]},
	}
	// AmBalancesColumns holds the columns for the "am_balances" table.
	AmBalancesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "order_id", Type: field.TypeString, Nullable: true},
		{Name: "event_id", Type: field.TypeInt64, Nullable: true},
		{Name: "cash_tag", Type: field.TypeInt32, Nullable: true},
		{Name: "asset_item_id", Type: field.TypeInt32, Nullable: true},
		{Name: "amount", Type: field.TypeInt64, Nullable: true},
		{Name: "balance", Type: field.TypeInt64, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "effect_time", Type: field.TypeTime},
		{Name: "expired_time", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "social_user_balances", Type: field.TypeInt64, Nullable: true},
	}
	// AmBalancesTable holds the schema information for the "am_balances" table.
	AmBalancesTable = &schema.Table{
		Name:       "am_balances",
		Columns:    AmBalancesColumns,
		PrimaryKey: []*schema.Column{AmBalancesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "am_balances_social_users_balances",
				Columns:    []*schema.Column{AmBalancesColumns[15]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AppVersionsColumns holds the columns for the "app_versions" table.
	AppVersionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "version", Type: field.TypeInt32, Nullable: true},
		{Name: "update_info", Type: field.TypeString, Nullable: true},
		{Name: "download_url", Type: field.TypeString, Nullable: true},
		{Name: "platform", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// AppVersionsTable holds the schema information for the "app_versions" table.
	AppVersionsTable = &schema.Table{
		Name:       "app_versions",
		Columns:    AppVersionsColumns,
		PrimaryKey: []*schema.Column{AppVersionsColumns[0]},
	}
	// AssetChangeLogsColumns holds the columns for the "asset_change_logs" table.
	AssetChangeLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "order_id", Type: field.TypeString, Nullable: true},
		{Name: "balance_id", Type: field.TypeInt64, Nullable: true},
		{Name: "event_id", Type: field.TypeInt64, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "asset_item_id", Type: field.TypeInt32, Nullable: true},
		{Name: "amount", Type: field.TypeInt64, Nullable: true},
		{Name: "old_balance", Type: field.TypeInt64, Nullable: true},
		{Name: "new_balance", Type: field.TypeInt64, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "social_user_asset_logs", Type: field.TypeInt64, Nullable: true},
	}
	// AssetChangeLogsTable holds the schema information for the "asset_change_logs" table.
	AssetChangeLogsTable = &schema.Table{
		Name:       "asset_change_logs",
		Columns:    AssetChangeLogsColumns,
		PrimaryKey: []*schema.Column{AssetChangeLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "asset_change_logs_social_users_assetLogs",
				Columns:    []*schema.Column{AssetChangeLogsColumns[15]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AssetItemsColumns holds the columns for the "asset_items" table.
	AssetItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "asset_item_id", Type: field.TypeInt32},
		{Name: "asset_name", Type: field.TypeString, Nullable: true},
		{Name: "cash_tag", Type: field.TypeInt32, Nullable: true},
		{Name: "valid_days", Type: field.TypeInt32, Nullable: true},
		{Name: "effect_time", Type: field.TypeTime},
		{Name: "expired_time", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// AssetItemsTable holds the schema information for the "asset_items" table.
	AssetItemsTable = &schema.Table{
		Name:       "asset_items",
		Columns:    AssetItemsColumns,
		PrimaryKey: []*schema.Column{AssetItemsColumns[0]},
	}
	// BookPackagesColumns holds the columns for the "book_packages" table.
	BookPackagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "activity_code", Type: field.TypeString, Nullable: true},
		{Name: "package_name", Type: field.TypeString, Nullable: true},
		{Name: "price", Type: field.TypeInt64, Nullable: true},
		{Name: "daily_price", Type: field.TypeInt64, Nullable: true},
		{Name: "novel_ids", Type: field.TypeString, Nullable: true},
		{Name: "effect_time", Type: field.TypeTime},
		{Name: "expired_time", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// BookPackagesTable holds the schema information for the "book_packages" table.
	BookPackagesTable = &schema.Table{
		Name:       "book_packages",
		Columns:    BookPackagesColumns,
		PrimaryKey: []*schema.Column{BookPackagesColumns[0]},
	}
	// ClientErrorsColumns holds the columns for the "client_errors" table.
	ClientErrorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "app_version", Type: field.TypeString, Nullable: true},
		{Name: "device_name", Type: field.TypeString, Nullable: true},
		{Name: "os_name", Type: field.TypeString, Nullable: true},
		{Name: "error_info", Type: field.TypeString, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// ClientErrorsTable holds the schema information for the "client_errors" table.
	ClientErrorsTable = &schema.Table{
		Name:       "client_errors",
		Columns:    ClientErrorsColumns,
		PrimaryKey: []*schema.Column{ClientErrorsColumns[0]},
	}
	// CustomerNovelConfigsColumns holds the columns for the "customer_novel_configs" table.
	CustomerNovelConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "group_code", Type: field.TypeString, Nullable: true},
		{Name: "inner_group_code", Type: field.TypeString, Nullable: true},
		{Name: "group_name", Type: field.TypeString, Nullable: true},
		{Name: "type_id", Type: field.TypeInt32, Nullable: true},
		{Name: "type_code", Type: field.TypeString, Nullable: true},
		{Name: "type_name", Type: field.TypeString, Nullable: true},
		{Name: "field_name", Type: field.TypeString, Nullable: true},
		{Name: "default_num", Type: field.TypeInt32, Nullable: true},
		{Name: "state", Type: field.TypeBool, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// CustomerNovelConfigsTable holds the schema information for the "customer_novel_configs" table.
	CustomerNovelConfigsTable = &schema.Table{
		Name:       "customer_novel_configs",
		Columns:    CustomerNovelConfigsColumns,
		PrimaryKey: []*schema.Column{CustomerNovelConfigsColumns[0]},
	}
	// CustomerNovelsColumns holds the columns for the "customer_novels" table.
	CustomerNovelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "novel_id", Type: field.TypeInt64, Nullable: true},
		{Name: "type_id", Type: field.TypeInt32, Nullable: true},
		{Name: "type_code", Type: field.TypeString, Nullable: true},
		{Name: "group_code", Type: field.TypeString, Nullable: true},
		{Name: "field_name", Type: field.TypeString, Nullable: true},
		{Name: "cover", Type: field.TypeString, Nullable: true},
		{Name: "order_num", Type: field.TypeInt32, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "effect_time", Type: field.TypeTime},
		{Name: "expired_time", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// CustomerNovelsTable holds the schema information for the "customer_novels" table.
	CustomerNovelsTable = &schema.Table{
		Name:       "customer_novels",
		Columns:    CustomerNovelsColumns,
		PrimaryKey: []*schema.Column{CustomerNovelsColumns[0]},
	}
	// DataSourcesColumns holds the columns for the "data_sources" table.
	DataSourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "db_name", Type: field.TypeString, Nullable: true},
		{Name: "host", Type: field.TypeString, Nullable: true},
		{Name: "port", Type: field.TypeInt32, Nullable: true},
		{Name: "database", Type: field.TypeString, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "pwd", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeBool, Nullable: true},
		{Name: "db_type", Type: field.TypeEnum, Nullable: true, Enums: []string{"mysql", "sqlite3", "postgres"}},
		{Name: "conn_max_idle_time", Type: field.TypeInt32, Nullable: true},
		{Name: "conn_max_life_time", Type: field.TypeInt32, Nullable: true},
		{Name: "max_idle_conns", Type: field.TypeInt32, Nullable: true},
		{Name: "max_open_conns", Type: field.TypeInt32, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// DataSourcesTable holds the schema information for the "data_sources" table.
	DataSourcesTable = &schema.Table{
		Name:       "data_sources",
		Columns:    DataSourcesColumns,
		PrimaryKey: []*schema.Column{DataSourcesColumns[0]},
	}
	// ListenRecordsColumns holds the columns for the "listen_records" table.
	ListenRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "chapter_id", Type: field.TypeInt64},
		{Name: "novel_id", Type: field.TypeInt64, Nullable: true},
		{Name: "listen_times", Type: field.TypeInt64, Nullable: true},
		{Name: "duration", Type: field.TypeInt64, Nullable: true},
		{Name: "all_duration", Type: field.TypeInt64, Nullable: true},
		{Name: "day_duration", Type: field.TypeInt64, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "social_user_listen_records", Type: field.TypeInt64, Nullable: true},
	}
	// ListenRecordsTable holds the schema information for the "listen_records" table.
	ListenRecordsTable = &schema.Table{
		Name:       "listen_records",
		Columns:    ListenRecordsColumns,
		PrimaryKey: []*schema.Column{ListenRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "listen_records_social_users_listenRecords",
				Columns:    []*schema.Column{ListenRecordsColumns[13]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NovelsColumns holds the columns for the "novels" table.
	NovelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "classify_id", Type: field.TypeInt64, Nullable: true},
		{Name: "classify_name", Type: field.TypeString, Nullable: true},
		{Name: "author_id", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "summary", Type: field.TypeString, Nullable: true},
		{Name: "author", Type: field.TypeString, Nullable: true},
		{Name: "anchor", Type: field.TypeString, Nullable: true},
		{Name: "hits", Type: field.TypeInt64, Nullable: true},
		{Name: "keywords", Type: field.TypeString, Nullable: true},
		{Name: "source", Type: field.TypeString, Nullable: true},
		{Name: "score", Type: field.TypeInt32, Nullable: true},
		{Name: "cover", Type: field.TypeString, Nullable: true},
		{Name: "tag_ids", Type: field.TypeString, Nullable: true},
		{Name: "word_num", Type: field.TypeInt32, Nullable: true},
		{Name: "free_num", Type: field.TypeInt32, Nullable: true},
		{Name: "online_state", Type: field.TypeInt32, Nullable: true},
		{Name: "price", Type: field.TypeInt64, Nullable: true},
		{Name: "publish", Type: field.TypeInt32, Nullable: true},
		{Name: "original_price", Type: field.TypeInt64, Nullable: true},
		{Name: "chapter_price", Type: field.TypeInt32, Nullable: true},
		{Name: "chapter_count", Type: field.TypeInt32, Nullable: true},
		{Name: "sign_type", Type: field.TypeInt32, Nullable: true},
		{Name: "sign_date", Type: field.TypeTime, Nullable: true},
		{Name: "leading_man", Type: field.TypeString, Nullable: true},
		{Name: "leading_lady", Type: field.TypeString, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "media_key", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "novel_classify_novels", Type: field.TypeInt64, Nullable: true},
	}
	// NovelsTable holds the schema information for the "novels" table.
	NovelsTable = &schema.Table{
		Name:       "novels",
		Columns:    NovelsColumns,
		PrimaryKey: []*schema.Column{NovelsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "novels_novel_classifies_novels",
				Columns:    []*schema.Column{NovelsColumns[33]},
				RefColumns: []*schema.Column{NovelClassifiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NovelAutoBuysColumns holds the columns for the "novel_auto_buys" table.
	NovelAutoBuysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "novel_id", Type: field.TypeInt64, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "social_user_auto_buy_novels", Type: field.TypeInt64, Nullable: true},
	}
	// NovelAutoBuysTable holds the schema information for the "novel_auto_buys" table.
	NovelAutoBuysTable = &schema.Table{
		Name:       "novel_auto_buys",
		Columns:    NovelAutoBuysColumns,
		PrimaryKey: []*schema.Column{NovelAutoBuysColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "novel_auto_buys_social_users_autoBuyNovels",
				Columns:    []*schema.Column{NovelAutoBuysColumns[8]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NovelBookshelvesColumns holds the columns for the "novel_bookshelves" table.
	NovelBookshelvesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "novel_id", Type: field.TypeInt64, Nullable: true},
		{Name: "last_read_time", Type: field.TypeTime, Nullable: true},
		{Name: "last_chapter_order", Type: field.TypeInt32, Nullable: true},
		{Name: "last_chapter_id", Type: field.TypeInt64, Nullable: true},
		{Name: "last_chapter_name", Type: field.TypeString, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "social_user_bookshelves", Type: field.TypeInt64, Nullable: true},
	}
	// NovelBookshelvesTable holds the schema information for the "novel_bookshelves" table.
	NovelBookshelvesTable = &schema.Table{
		Name:       "novel_bookshelves",
		Columns:    NovelBookshelvesColumns,
		PrimaryKey: []*schema.Column{NovelBookshelvesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "novel_bookshelves_social_users_bookshelves",
				Columns:    []*schema.Column{NovelBookshelvesColumns[14]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NovelBuyChapterRecordsColumns holds the columns for the "novel_buy_chapter_records" table.
	NovelBuyChapterRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "chapter_id", Type: field.TypeInt64, Nullable: true},
		{Name: "chapter_order_num", Type: field.TypeInt32, Nullable: true},
		{Name: "novel_id", Type: field.TypeInt64, Nullable: true},
		{Name: "novel_name", Type: field.TypeString, Nullable: true},
		{Name: "chapter_name", Type: field.TypeString, Nullable: true},
		{Name: "is_svip", Type: field.TypeBool, Nullable: true},
		{Name: "coin", Type: field.TypeInt64, Nullable: true},
		{Name: "coupon", Type: field.TypeInt64, Nullable: true},
		{Name: "discount", Type: field.TypeInt64, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "social_user_buy_chapter_records", Type: field.TypeInt64, Nullable: true},
	}
	// NovelBuyChapterRecordsTable holds the schema information for the "novel_buy_chapter_records" table.
	NovelBuyChapterRecordsTable = &schema.Table{
		Name:       "novel_buy_chapter_records",
		Columns:    NovelBuyChapterRecordsColumns,
		PrimaryKey: []*schema.Column{NovelBuyChapterRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "novel_buy_chapter_records_social_users_buyChapterRecords",
				Columns:    []*schema.Column{NovelBuyChapterRecordsColumns[18]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NovelBuyRecordsColumns holds the columns for the "novel_buy_records" table.
	NovelBuyRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "novel_id", Type: field.TypeInt64, Nullable: true},
		{Name: "novel_name", Type: field.TypeString, Nullable: true},
		{Name: "package_id", Type: field.TypeInt64, Nullable: true},
		{Name: "cover", Type: field.TypeString, Nullable: true},
		{Name: "coin", Type: field.TypeInt64, Nullable: true},
		{Name: "coupon", Type: field.TypeInt64, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "social_user_buy_novel_records", Type: field.TypeInt64, Nullable: true},
	}
	// NovelBuyRecordsTable holds the schema information for the "novel_buy_records" table.
	NovelBuyRecordsTable = &schema.Table{
		Name:       "novel_buy_records",
		Columns:    NovelBuyRecordsColumns,
		PrimaryKey: []*schema.Column{NovelBuyRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "novel_buy_records_social_users_buyNovelRecords",
				Columns:    []*schema.Column{NovelBuyRecordsColumns[15]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NovelChaptersColumns holds the columns for the "novel_chapters" table.
	NovelChaptersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "novel_id", Type: field.TypeInt64, Nullable: true},
		{Name: "order_num", Type: field.TypeInt32, Nullable: true},
		{Name: "chapter_name", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Nullable: true},
		{Name: "media_key", Type: field.TypeString, Nullable: true},
		{Name: "duration", Type: field.TypeString, Nullable: true},
		{Name: "publish_time", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeInt32, Nullable: true},
		{Name: "is_free", Type: field.TypeBool, Nullable: true},
		{Name: "price", Type: field.TypeInt64, Nullable: true},
		{Name: "word_num", Type: field.TypeInt32, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "novel_chapters", Type: field.TypeInt64, Nullable: true},
		{Name: "novel_chapter_next", Type: field.TypeInt64, Unique: true, Nullable: true},
	}
	// NovelChaptersTable holds the schema information for the "novel_chapters" table.
	NovelChaptersTable = &schema.Table{
		Name:       "novel_chapters",
		Columns:    NovelChaptersColumns,
		PrimaryKey: []*schema.Column{NovelChaptersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "novel_chapters_novels_chapters",
				Columns:    []*schema.Column{NovelChaptersColumns[18]},
				RefColumns: []*schema.Column{NovelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "novel_chapters_novel_chapters_next",
				Columns:    []*schema.Column{NovelChaptersColumns[19]},
				RefColumns: []*schema.Column{NovelChaptersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NovelClassifiesColumns holds the columns for the "novel_classifies" table.
	NovelClassifiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "pid", Type: field.TypeInt64, Nullable: true},
		{Name: "classify_name", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeInt32, Nullable: true},
		{Name: "order_num", Type: field.TypeInt32, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// NovelClassifiesTable holds the schema information for the "novel_classifies" table.
	NovelClassifiesTable = &schema.Table{
		Name:       "novel_classifies",
		Columns:    NovelClassifiesColumns,
		PrimaryKey: []*schema.Column{NovelClassifiesColumns[0]},
	}
	// NovelCommentsColumns holds the columns for the "novel_comments" table.
	NovelCommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "novel_id", Type: field.TypeInt64, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "avatar", Type: field.TypeString, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "rep_user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "rep_user_name", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Nullable: true},
		{Name: "score", Type: field.TypeInt32, Nullable: true},
		{Name: "p_id", Type: field.TypeInt64, Nullable: true},
		{Name: "is_top", Type: field.TypeBool, Nullable: true},
		{Name: "state", Type: field.TypeEnum, Nullable: true, Enums: []string{"0", "1", "2"}},
		{Name: "is_highlight", Type: field.TypeBool, Nullable: true},
		{Name: "is_hot", Type: field.TypeBool, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "novel_comment_childes", Type: field.TypeInt64, Nullable: true},
		{Name: "social_user_comments", Type: field.TypeInt64, Nullable: true},
	}
	// NovelCommentsTable holds the schema information for the "novel_comments" table.
	NovelCommentsTable = &schema.Table{
		Name:       "novel_comments",
		Columns:    NovelCommentsColumns,
		PrimaryKey: []*schema.Column{NovelCommentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "novel_comments_novel_comments_childes",
				Columns:    []*schema.Column{NovelCommentsColumns[20]},
				RefColumns: []*schema.Column{NovelCommentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "novel_comments_social_users_comments",
				Columns:    []*schema.Column{NovelCommentsColumns[21]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NovelConsumesColumns holds the columns for the "novel_consumes" table.
	NovelConsumesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "novel_id", Type: field.TypeInt64},
		{Name: "coin", Type: field.TypeInt64, Nullable: true},
		{Name: "coupon", Type: field.TypeInt64, Nullable: true},
		{Name: "discount", Type: field.TypeInt64, Nullable: true},
		{Name: "reward", Type: field.TypeInt64, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// NovelConsumesTable holds the schema information for the "novel_consumes" table.
	NovelConsumesTable = &schema.Table{
		Name:       "novel_consumes",
		Columns:    NovelConsumesColumns,
		PrimaryKey: []*schema.Column{NovelConsumesColumns[0]},
	}
	// NovelMsgsColumns holds the columns for the "novel_msgs" table.
	NovelMsgsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "msg", Type: field.TypeString, Nullable: true},
		{Name: "msg_type", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeBool, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// NovelMsgsTable holds the schema information for the "novel_msgs" table.
	NovelMsgsTable = &schema.Table{
		Name:       "novel_msgs",
		Columns:    NovelMsgsColumns,
		PrimaryKey: []*schema.Column{NovelMsgsColumns[0]},
	}
	// PayOrdersColumns holds the columns for the "pay_orders" table.
	PayOrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "order_id", Type: field.TypeString},
		{Name: "last_read", Type: field.TypeString},
		{Name: "last_chapter", Type: field.TypeString},
		{Name: "payment_name", Type: field.TypeString},
		{Name: "payment_id", Type: field.TypeString},
		{Name: "state", Type: field.TypeInt32, Default: 1},
		{Name: "payment", Type: field.TypeInt64},
		{Name: "payment_time", Type: field.TypeTime},
		{Name: "close_time", Type: field.TypeTime},
		{Name: "pay_type", Type: field.TypeEnum, Enums: []string{"Google", "WeChat", "Alipay", "Apple"}},
		{Name: "coin", Type: field.TypeInt64},
		{Name: "coupon", Type: field.TypeInt64},
		{Name: "vip_days", Type: field.TypeString, Nullable: true},
		{Name: "vip_type", Type: field.TypeInt64, Nullable: true},
		{Name: "vip_name", Type: field.TypeString, Nullable: true},
		{Name: "times", Type: field.TypeInt32},
		{Name: "other_order_id", Type: field.TypeString, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "ad_channel_orders", Type: field.TypeInt64, Nullable: true},
		{Name: "agreement_log_orders", Type: field.TypeInt64, Nullable: true},
		{Name: "social_user_orders", Type: field.TypeInt64, Nullable: true},
	}
	// PayOrdersTable holds the schema information for the "pay_orders" table.
	PayOrdersTable = &schema.Table{
		Name:       "pay_orders",
		Columns:    PayOrdersColumns,
		PrimaryKey: []*schema.Column{PayOrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "pay_orders_ad_channels_orders",
				Columns:    []*schema.Column{PayOrdersColumns[24]},
				RefColumns: []*schema.Column{AdChannelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "pay_orders_agreement_logs_orders",
				Columns:    []*schema.Column{PayOrdersColumns[25]},
				RefColumns: []*schema.Column{AgreementLogsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "pay_orders_social_users_orders",
				Columns:    []*schema.Column{PayOrdersColumns[26]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// SocialUsersColumns holds the columns for the "social_users" table.
	SocialUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64},
		{Name: "unionid", Type: field.TypeString, Nullable: true},
		{Name: "token", Type: field.TypeString, Nullable: true},
		{Name: "openid", Type: field.TypeString, Nullable: true},
		{Name: "routine_openid", Type: field.TypeString, Nullable: true},
		{Name: "user_name", Type: field.TypeString, Nullable: true},
		{Name: "nick_name", Type: field.TypeString, Nullable: true},
		{Name: "birthday", Type: field.TypeTime, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "avatar", Type: field.TypeString, Nullable: true},
		{Name: "sex", Type: field.TypeInt32, Nullable: true},
		{Name: "region", Type: field.TypeString, Nullable: true},
		{Name: "city", Type: field.TypeString, Nullable: true},
		{Name: "language", Type: field.TypeString, Nullable: true},
		{Name: "province", Type: field.TypeString, Nullable: true},
		{Name: "country", Type: field.TypeString, Nullable: true},
		{Name: "signature", Type: field.TypeString, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "groupid", Type: field.TypeInt32, Nullable: true},
		{Name: "tagid_list", Type: field.TypeString, Nullable: true},
		{Name: "subscribe", Type: field.TypeInt32, Nullable: true},
		{Name: "subscribe_time", Type: field.TypeInt32, Nullable: true},
		{Name: "session_key", Type: field.TypeString, Nullable: true},
		{Name: "user_type", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "ad_channel_users", Type: field.TypeInt64, Nullable: true},
	}
	// SocialUsersTable holds the schema information for the "social_users" table.
	SocialUsersTable = &schema.Table{
		Name:       "social_users",
		Columns:    SocialUsersColumns,
		PrimaryKey: []*schema.Column{SocialUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "social_users_ad_channels_users",
				Columns:    []*schema.Column{SocialUsersColumns[32]},
				RefColumns: []*schema.Column{AdChannelsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// TaskLogsColumns holds the columns for the "task_logs" table.
	TaskLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "task_group", Type: field.TypeString, Nullable: true},
		{Name: "task_code", Type: field.TypeString, Nullable: true},
		{Name: "task_id", Type: field.TypeInt64, Nullable: true},
		{Name: "task_name", Type: field.TypeString, Nullable: true},
		{Name: "amount", Type: field.TypeInt64, Nullable: true},
		{Name: "reward", Type: field.TypeInt64, Nullable: true},
		{Name: "amount_item", Type: field.TypeInt32, Nullable: true},
		{Name: "reward_item", Type: field.TypeInt32, Nullable: true},
		{Name: "target_amount", Type: field.TypeInt64, Nullable: true},
		{Name: "done_amount", Type: field.TypeInt64, Nullable: true},
		{Name: "state", Type: field.TypeInt64, Nullable: true},
		{Name: "done_at", Type: field.TypeTime, Nullable: true},
		{Name: "obtain_at", Type: field.TypeTime, Nullable: true},
		{Name: "done_times", Type: field.TypeInt32, Nullable: true},
		{Name: "all_times", Type: field.TypeInt32, Nullable: true},
		{Name: "effect_time", Type: field.TypeTime},
		{Name: "expired_time", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "social_user_tasks", Type: field.TypeInt64, Nullable: true},
	}
	// TaskLogsTable holds the schema information for the "task_logs" table.
	TaskLogsTable = &schema.Table{
		Name:       "task_logs",
		Columns:    TaskLogsColumns,
		PrimaryKey: []*schema.Column{TaskLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "task_logs_social_users_tasks",
				Columns:    []*schema.Column{TaskLogsColumns[24]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserEventsColumns holds the columns for the "user_events" table.
	UserEventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
		{Name: "event_type", Type: field.TypeString, Nullable: true},
		{Name: "novel_id", Type: field.TypeInt64, Nullable: true},
		{Name: "chapter_id", Type: field.TypeInt64, Nullable: true},
		{Name: "coin", Type: field.TypeInt64, Nullable: true},
		{Name: "coupon", Type: field.TypeInt64, Nullable: true},
		{Name: "money", Type: field.TypeInt64, Nullable: true},
		{Name: "keyword", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
	}
	// UserEventsTable holds the schema information for the "user_events" table.
	UserEventsTable = &schema.Table{
		Name:       "user_events",
		Columns:    UserEventsColumns,
		PrimaryKey: []*schema.Column{UserEventsColumns[0]},
	}
	// UserMsgsColumns holds the columns for the "user_msgs" table.
	UserMsgsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "msg_id", Type: field.TypeInt64, Nullable: true},
		{Name: "is_read", Type: field.TypeBool, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "user_id", Type: field.TypeInt64, Nullable: true},
	}
	// UserMsgsTable holds the schema information for the "user_msgs" table.
	UserMsgsTable = &schema.Table{
		Name:       "user_msgs",
		Columns:    UserMsgsColumns,
		PrimaryKey: []*schema.Column{UserMsgsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_msgs_social_users_msgs",
				Columns:    []*schema.Column{UserMsgsColumns[8]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VipUsersColumns holds the columns for the "vip_users" table.
	VipUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "vip_type", Type: field.TypeInt64, Nullable: true},
		{Name: "svip_type", Type: field.TypeInt64, Nullable: true},
		{Name: "svip_effect_time", Type: field.TypeTime, Nullable: true},
		{Name: "svip_expired_time", Type: field.TypeTime, Nullable: true},
		{Name: "remark", Type: field.TypeString, Nullable: true},
		{Name: "effect_time", Type: field.TypeTime},
		{Name: "expired_time", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "create_by", Type: field.TypeInt64, Default: 0},
		{Name: "update_by", Type: field.TypeInt64, Default: 0},
		{Name: "tenant_id", Type: field.TypeInt64, Default: 0},
		{Name: "social_user_vips", Type: field.TypeInt64, Nullable: true},
	}
	// VipUsersTable holds the schema information for the "vip_users" table.
	VipUsersTable = &schema.Table{
		Name:       "vip_users",
		Columns:    VipUsersColumns,
		PrimaryKey: []*schema.Column{VipUsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "vip_users_social_users_vips",
				Columns:    []*schema.Column{VipUsersColumns[13]},
				RefColumns: []*schema.Column{SocialUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// NovelPkgsColumns holds the columns for the "novel_pkgs" table.
	NovelPkgsColumns = []*schema.Column{
		{Name: "novel_id", Type: field.TypeInt},
		{Name: "book_package_id", Type: field.TypeInt},
	}
	// NovelPkgsTable holds the schema information for the "novel_pkgs" table.
	NovelPkgsTable = &schema.Table{
		Name:       "novel_pkgs",
		Columns:    NovelPkgsColumns,
		PrimaryKey: []*schema.Column{NovelPkgsColumns[0], NovelPkgsColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "novel_pkgs_novel_id",
				Columns:    []*schema.Column{NovelPkgsColumns[0]},
				RefColumns: []*schema.Column{NovelsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "novel_pkgs_book_package_id",
				Columns:    []*schema.Column{NovelPkgsColumns[1]},
				RefColumns: []*schema.Column{BookPackagesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActivitiesTable,
		ActivityComponentsTable,
		AdChangeLogsTable,
		AdChannelsTable,
		AgreementLogsTable,
		AmBalancesTable,
		AppVersionsTable,
		AssetChangeLogsTable,
		AssetItemsTable,
		BookPackagesTable,
		ClientErrorsTable,
		CustomerNovelConfigsTable,
		CustomerNovelsTable,
		DataSourcesTable,
		ListenRecordsTable,
		NovelsTable,
		NovelAutoBuysTable,
		NovelBookshelvesTable,
		NovelBuyChapterRecordsTable,
		NovelBuyRecordsTable,
		NovelChaptersTable,
		NovelClassifiesTable,
		NovelCommentsTable,
		NovelConsumesTable,
		NovelMsgsTable,
		PayOrdersTable,
		SocialUsersTable,
		TaskLogsTable,
		UserEventsTable,
		UserMsgsTable,
		VipUsersTable,
		NovelPkgsTable,
	}
)

func init() {
	AdChangeLogsTable.ForeignKeys[0].RefTable = SocialUsersTable
	AmBalancesTable.ForeignKeys[0].RefTable = SocialUsersTable
	AssetChangeLogsTable.ForeignKeys[0].RefTable = SocialUsersTable
	ListenRecordsTable.ForeignKeys[0].RefTable = SocialUsersTable
	NovelsTable.ForeignKeys[0].RefTable = NovelClassifiesTable
	NovelAutoBuysTable.ForeignKeys[0].RefTable = SocialUsersTable
	NovelBookshelvesTable.ForeignKeys[0].RefTable = SocialUsersTable
	NovelBuyChapterRecordsTable.ForeignKeys[0].RefTable = SocialUsersTable
	NovelBuyRecordsTable.ForeignKeys[0].RefTable = SocialUsersTable
	NovelChaptersTable.ForeignKeys[0].RefTable = NovelsTable
	NovelChaptersTable.ForeignKeys[1].RefTable = NovelChaptersTable
	NovelCommentsTable.ForeignKeys[0].RefTable = NovelCommentsTable
	NovelCommentsTable.ForeignKeys[1].RefTable = SocialUsersTable
	PayOrdersTable.ForeignKeys[0].RefTable = AdChannelsTable
	PayOrdersTable.ForeignKeys[1].RefTable = AgreementLogsTable
	PayOrdersTable.ForeignKeys[2].RefTable = SocialUsersTable
	SocialUsersTable.ForeignKeys[0].RefTable = AdChannelsTable
	TaskLogsTable.ForeignKeys[0].RefTable = SocialUsersTable
	UserMsgsTable.ForeignKeys[0].RefTable = SocialUsersTable
	VipUsersTable.ForeignKeys[0].RefTable = SocialUsersTable
	NovelPkgsTable.ForeignKeys[0].RefTable = NovelsTable
	NovelPkgsTable.ForeignKeys[1].RefTable = BookPackagesTable
}
