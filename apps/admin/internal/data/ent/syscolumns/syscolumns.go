// Code generated by entc, DO NOT EDIT.

package syscolumns

import (
	"time"
)

const (
	// Label holds the string label denoting the syscolumns type in the database.
	Label = "sys_columns"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldColumnId holds the string denoting the columnid field in the database.
	FieldColumnId = "column_id"
	// FieldColumnName holds the string denoting the columnname field in the database.
	FieldColumnName = "column_name"
	// FieldColumnComment holds the string denoting the columncomment field in the database.
	FieldColumnComment = "column_comment"
	// FieldColumnType holds the string denoting the columntype field in the database.
	FieldColumnType = "column_type"
	// FieldGoType holds the string denoting the gotype field in the database.
	FieldGoType = "go_type"
	// FieldGoField holds the string denoting the gofield field in the database.
	FieldGoField = "go_field"
	// FieldJsonField holds the string denoting the jsonfield field in the database.
	FieldJsonField = "json_field"
	// FieldIsPk holds the string denoting the ispk field in the database.
	FieldIsPk = "is_pk"
	// FieldIsIncrement holds the string denoting the isincrement field in the database.
	FieldIsIncrement = "is_increment"
	// FieldIsRequired holds the string denoting the isrequired field in the database.
	FieldIsRequired = "is_required"
	// FieldIsInsert holds the string denoting the isinsert field in the database.
	FieldIsInsert = "is_insert"
	// FieldIsEdit holds the string denoting the isedit field in the database.
	FieldIsEdit = "is_edit"
	// FieldIsList holds the string denoting the islist field in the database.
	FieldIsList = "is_list"
	// FieldIsQuery holds the string denoting the isquery field in the database.
	FieldIsQuery = "is_query"
	// FieldQueryType holds the string denoting the querytype field in the database.
	FieldQueryType = "query_type"
	// FieldHtmlType holds the string denoting the htmltype field in the database.
	FieldHtmlType = "html_type"
	// FieldDictType holds the string denoting the dicttype field in the database.
	FieldDictType = "dict_type"
	// FieldSort holds the string denoting the sort field in the database.
	FieldSort = "sort"
	// FieldList holds the string denoting the list field in the database.
	FieldList = "list"
	// FieldPk holds the string denoting the pk field in the database.
	FieldPk = "pk"
	// FieldRequired holds the string denoting the required field in the database.
	FieldRequired = "required"
	// FieldSuperColumn holds the string denoting the supercolumn field in the database.
	FieldSuperColumn = "super_column"
	// FieldUsableColumn holds the string denoting the usablecolumn field in the database.
	FieldUsableColumn = "usable_column"
	// FieldIncrement holds the string denoting the increment field in the database.
	FieldIncrement = "increment"
	// FieldInsert holds the string denoting the insert field in the database.
	FieldInsert = "insert"
	// FieldEdit holds the string denoting the edit field in the database.
	FieldEdit = "edit"
	// FieldQuery holds the string denoting the query field in the database.
	FieldQuery = "query"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldFkLabelName holds the string denoting the fklabelname field in the database.
	FieldFkLabelName = "fk_label_name"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreateBy holds the string denoting the createby field in the database.
	FieldCreateBy = "create_by"
	// FieldUpdateBy holds the string denoting the updateby field in the database.
	FieldUpdateBy = "update_by"
	// FieldTenantId holds the string denoting the tenantid field in the database.
	FieldTenantId = "tenant_id"
	// Table holds the table name of the syscolumns in the database.
	Table = "sys_columns"
)

// Columns holds all SQL columns for syscolumns fields.
var Columns = []string{
	FieldID,
	FieldColumnId,
	FieldColumnName,
	FieldColumnComment,
	FieldColumnType,
	FieldGoType,
	FieldGoField,
	FieldJsonField,
	FieldIsPk,
	FieldIsIncrement,
	FieldIsRequired,
	FieldIsInsert,
	FieldIsEdit,
	FieldIsList,
	FieldIsQuery,
	FieldQueryType,
	FieldHtmlType,
	FieldDictType,
	FieldSort,
	FieldList,
	FieldPk,
	FieldRequired,
	FieldSuperColumn,
	FieldUsableColumn,
	FieldIncrement,
	FieldInsert,
	FieldEdit,
	FieldQuery,
	FieldRemark,
	FieldFkLabelName,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreateBy,
	FieldUpdateBy,
	FieldTenantId,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updatedAt" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updatedAt" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCreateBy holds the default value on creation for the "createBy" field.
	DefaultCreateBy int64
	// DefaultUpdateBy holds the default value on creation for the "updateBy" field.
	DefaultUpdateBy int64
	// DefaultTenantId holds the default value on creation for the "tenantId" field.
	DefaultTenantId int64
)
