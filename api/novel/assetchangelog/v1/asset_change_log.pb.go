// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/novel/assetchangelog/v1/asset_change_log.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type AssetChangeLogPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *AssetChangeLogReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *AssetChangeLogPageReq) Reset() {
	*x = AssetChangeLogPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetChangeLogPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChangeLogPageReq) ProtoMessage() {}

func (x *AssetChangeLogPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChangeLogPageReq.ProtoReflect.Descriptor instead.
func (*AssetChangeLogPageReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP(), []int{0}
}

func (x *AssetChangeLogPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *AssetChangeLogPageReq) GetParam() *AssetChangeLogReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type AssetChangeLogPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*AssetChangeLogReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AssetChangeLogPageReply) Reset() {
	*x = AssetChangeLogPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetChangeLogPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChangeLogPageReply) ProtoMessage() {}

func (x *AssetChangeLogPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChangeLogPageReply.ProtoReflect.Descriptor instead.
func (*AssetChangeLogPageReply) Descriptor() ([]byte, []int) {
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP(), []int{1}
}

func (x *AssetChangeLogPageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *AssetChangeLogPageReply) GetItems() []*AssetChangeLogReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type AssetChangeLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//账本ID
	BalanceId int64 `protobuf:"varint,3,opt,name=balanceId,proto3" json:"balanceId,omitempty"`
	//关联用户事件Id
	EventId int64 `protobuf:"varint,4,opt,name=eventId,proto3" json:"eventId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`
	//账本科目
	AssetItemId int32 `protobuf:"varint,6,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//变化金额
	Amount int64 `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	//变化前剩余可用
	OldBalance int64 `protobuf:"varint,8,opt,name=oldBalance,proto3" json:"oldBalance,omitempty"`
	//变化后剩余可用
	NewBalance int64 `protobuf:"varint,9,opt,name=newBalance,proto3" json:"newBalance,omitempty"`
	//备注
	Remark string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,13,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,14,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,15,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *AssetChangeLogReq) Reset() {
	*x = AssetChangeLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetChangeLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChangeLogReq) ProtoMessage() {}

func (x *AssetChangeLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChangeLogReq.ProtoReflect.Descriptor instead.
func (*AssetChangeLogReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP(), []int{2}
}

func (x *AssetChangeLogReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssetChangeLogReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AssetChangeLogReq) GetBalanceId() int64 {
	if x != nil {
		return x.BalanceId
	}
	return 0
}

func (x *AssetChangeLogReq) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *AssetChangeLogReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AssetChangeLogReq) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *AssetChangeLogReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetChangeLogReq) GetOldBalance() int64 {
	if x != nil {
		return x.OldBalance
	}
	return 0
}

func (x *AssetChangeLogReq) GetNewBalance() int64 {
	if x != nil {
		return x.NewBalance
	}
	return 0
}

func (x *AssetChangeLogReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AssetChangeLogReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AssetChangeLogReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AssetChangeLogReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *AssetChangeLogReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *AssetChangeLogReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type AssetChangeLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//账本ID
	BalanceId int64 `protobuf:"varint,3,opt,name=balanceId,proto3" json:"balanceId,omitempty"`
	//关联用户事件Id
	EventId int64 `protobuf:"varint,4,opt,name=eventId,proto3" json:"eventId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`
	//账本科目
	AssetItemId int32 `protobuf:"varint,6,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//变化金额
	Amount int64 `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	//变化前剩余可用
	OldBalance int64 `protobuf:"varint,8,opt,name=oldBalance,proto3" json:"oldBalance,omitempty"`
	//变化后剩余可用
	NewBalance int64 `protobuf:"varint,9,opt,name=newBalance,proto3" json:"newBalance,omitempty"`
	//备注
	Remark string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,13,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,14,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,15,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *AssetChangeLogReply) Reset() {
	*x = AssetChangeLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetChangeLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChangeLogReply) ProtoMessage() {}

func (x *AssetChangeLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChangeLogReply.ProtoReflect.Descriptor instead.
func (*AssetChangeLogReply) Descriptor() ([]byte, []int) {
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP(), []int{3}
}

func (x *AssetChangeLogReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssetChangeLogReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AssetChangeLogReply) GetBalanceId() int64 {
	if x != nil {
		return x.BalanceId
	}
	return 0
}

func (x *AssetChangeLogReply) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *AssetChangeLogReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AssetChangeLogReply) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *AssetChangeLogReply) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetChangeLogReply) GetOldBalance() int64 {
	if x != nil {
		return x.OldBalance
	}
	return 0
}

func (x *AssetChangeLogReply) GetNewBalance() int64 {
	if x != nil {
		return x.NewBalance
	}
	return 0
}

func (x *AssetChangeLogReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AssetChangeLogReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AssetChangeLogReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AssetChangeLogReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *AssetChangeLogReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *AssetChangeLogReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建AssetChangeLog请求
type AssetChangeLogCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//订单号
	OrderId string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//账本ID
	BalanceId int64 `protobuf:"varint,2,opt,name=balanceId,proto3" json:"balanceId,omitempty"`
	//关联用户事件Id
	EventId int64 `protobuf:"varint,3,opt,name=eventId,proto3" json:"eventId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,4,opt,name=userId,proto3" json:"userId,omitempty"`
	//账本科目
	AssetItemId int32 `protobuf:"varint,5,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//变化金额
	Amount int64 `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	//变化前剩余可用
	OldBalance int64 `protobuf:"varint,7,opt,name=oldBalance,proto3" json:"oldBalance,omitempty"`
	//变化后剩余可用
	NewBalance int64 `protobuf:"varint,8,opt,name=newBalance,proto3" json:"newBalance,omitempty"`
	//备注
	Remark string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AssetChangeLogCreateReq) Reset() {
	*x = AssetChangeLogCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetChangeLogCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChangeLogCreateReq) ProtoMessage() {}

func (x *AssetChangeLogCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChangeLogCreateReq.ProtoReflect.Descriptor instead.
func (*AssetChangeLogCreateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP(), []int{4}
}

func (x *AssetChangeLogCreateReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AssetChangeLogCreateReq) GetBalanceId() int64 {
	if x != nil {
		return x.BalanceId
	}
	return 0
}

func (x *AssetChangeLogCreateReq) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *AssetChangeLogCreateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AssetChangeLogCreateReq) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *AssetChangeLogCreateReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetChangeLogCreateReq) GetOldBalance() int64 {
	if x != nil {
		return x.OldBalance
	}
	return 0
}

func (x *AssetChangeLogCreateReq) GetNewBalance() int64 {
	if x != nil {
		return x.NewBalance
	}
	return 0
}

func (x *AssetChangeLogCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建AssetChangeLog返回
type AssetChangeLogCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//账本ID
	BalanceId int64 `protobuf:"varint,3,opt,name=balanceId,proto3" json:"balanceId,omitempty"`
	//关联用户事件Id
	EventId int64 `protobuf:"varint,4,opt,name=eventId,proto3" json:"eventId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`
	//账本科目
	AssetItemId int32 `protobuf:"varint,6,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//变化金额
	Amount int64 `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	//变化前剩余可用
	OldBalance int64 `protobuf:"varint,8,opt,name=oldBalance,proto3" json:"oldBalance,omitempty"`
	//变化后剩余可用
	NewBalance int64 `protobuf:"varint,9,opt,name=newBalance,proto3" json:"newBalance,omitempty"`
	//备注
	Remark string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,13,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,14,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,15,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *AssetChangeLogCreateReply) Reset() {
	*x = AssetChangeLogCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetChangeLogCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChangeLogCreateReply) ProtoMessage() {}

func (x *AssetChangeLogCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChangeLogCreateReply.ProtoReflect.Descriptor instead.
func (*AssetChangeLogCreateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP(), []int{5}
}

func (x *AssetChangeLogCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssetChangeLogCreateReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AssetChangeLogCreateReply) GetBalanceId() int64 {
	if x != nil {
		return x.BalanceId
	}
	return 0
}

func (x *AssetChangeLogCreateReply) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *AssetChangeLogCreateReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AssetChangeLogCreateReply) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *AssetChangeLogCreateReply) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetChangeLogCreateReply) GetOldBalance() int64 {
	if x != nil {
		return x.OldBalance
	}
	return 0
}

func (x *AssetChangeLogCreateReply) GetNewBalance() int64 {
	if x != nil {
		return x.NewBalance
	}
	return 0
}

func (x *AssetChangeLogCreateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *AssetChangeLogCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AssetChangeLogCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AssetChangeLogCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *AssetChangeLogCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *AssetChangeLogCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新AssetChangeLog请求
type AssetChangeLogUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//账本ID
	BalanceId int64 `protobuf:"varint,3,opt,name=balanceId,proto3" json:"balanceId,omitempty"`
	//关联用户事件Id
	EventId int64 `protobuf:"varint,4,opt,name=eventId,proto3" json:"eventId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`
	//账本科目
	AssetItemId int32 `protobuf:"varint,6,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//变化金额
	Amount int64 `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	//变化前剩余可用
	OldBalance int64 `protobuf:"varint,8,opt,name=oldBalance,proto3" json:"oldBalance,omitempty"`
	//变化后剩余可用
	NewBalance int64 `protobuf:"varint,9,opt,name=newBalance,proto3" json:"newBalance,omitempty"`
	//备注
	Remark string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AssetChangeLogUpdateReq) Reset() {
	*x = AssetChangeLogUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetChangeLogUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChangeLogUpdateReq) ProtoMessage() {}

func (x *AssetChangeLogUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChangeLogUpdateReq.ProtoReflect.Descriptor instead.
func (*AssetChangeLogUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP(), []int{6}
}

func (x *AssetChangeLogUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssetChangeLogUpdateReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AssetChangeLogUpdateReq) GetBalanceId() int64 {
	if x != nil {
		return x.BalanceId
	}
	return 0
}

func (x *AssetChangeLogUpdateReq) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *AssetChangeLogUpdateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AssetChangeLogUpdateReq) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *AssetChangeLogUpdateReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetChangeLogUpdateReq) GetOldBalance() int64 {
	if x != nil {
		return x.OldBalance
	}
	return 0
}

func (x *AssetChangeLogUpdateReq) GetNewBalance() int64 {
	if x != nil {
		return x.NewBalance
	}
	return 0
}

func (x *AssetChangeLogUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新AssetChangeLog返回
type AssetChangeLogUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//账本ID
	BalanceId int64 `protobuf:"varint,3,opt,name=balanceId,proto3" json:"balanceId,omitempty"`
	//关联用户事件Id
	EventId int64 `protobuf:"varint,4,opt,name=eventId,proto3" json:"eventId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,5,opt,name=userId,proto3" json:"userId,omitempty"`
	//账本科目
	AssetItemId int32 `protobuf:"varint,6,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//变化金额
	Amount int64 `protobuf:"varint,7,opt,name=amount,proto3" json:"amount,omitempty"`
	//变化前剩余可用
	OldBalance int64 `protobuf:"varint,8,opt,name=oldBalance,proto3" json:"oldBalance,omitempty"`
	//变化后剩余可用
	NewBalance int64 `protobuf:"varint,9,opt,name=newBalance,proto3" json:"newBalance,omitempty"`
	//备注
	Remark string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AssetChangeLogUpdateReply) Reset() {
	*x = AssetChangeLogUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetChangeLogUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChangeLogUpdateReply) ProtoMessage() {}

func (x *AssetChangeLogUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChangeLogUpdateReply.ProtoReflect.Descriptor instead.
func (*AssetChangeLogUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP(), []int{7}
}

func (x *AssetChangeLogUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssetChangeLogUpdateReply) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *AssetChangeLogUpdateReply) GetBalanceId() int64 {
	if x != nil {
		return x.BalanceId
	}
	return 0
}

func (x *AssetChangeLogUpdateReply) GetEventId() int64 {
	if x != nil {
		return x.EventId
	}
	return 0
}

func (x *AssetChangeLogUpdateReply) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AssetChangeLogUpdateReply) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *AssetChangeLogUpdateReply) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AssetChangeLogUpdateReply) GetOldBalance() int64 {
	if x != nil {
		return x.OldBalance
	}
	return 0
}

func (x *AssetChangeLogUpdateReply) GetNewBalance() int64 {
	if x != nil {
		return x.NewBalance
	}
	return 0
}

func (x *AssetChangeLogUpdateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 删除AssetChangeLog请求
type AssetChangeLogDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AssetChangeLogDeleteReq) Reset() {
	*x = AssetChangeLogDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetChangeLogDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChangeLogDeleteReq) ProtoMessage() {}

func (x *AssetChangeLogDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChangeLogDeleteReq.ProtoReflect.Descriptor instead.
func (*AssetChangeLogDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP(), []int{8}
}

func (x *AssetChangeLogDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除AssetChangeLog请求
type AssetChangeLogBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *AssetChangeLogBatchDeleteReq) Reset() {
	*x = AssetChangeLogBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetChangeLogBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChangeLogBatchDeleteReq) ProtoMessage() {}

func (x *AssetChangeLogBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChangeLogBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*AssetChangeLogBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP(), []int{9}
}

func (x *AssetChangeLogBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除AssetChangeLog返回
type AssetChangeLogDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AssetChangeLogDeleteReply) Reset() {
	*x = AssetChangeLogDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetChangeLogDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetChangeLogDeleteReply) ProtoMessage() {}

func (x *AssetChangeLogDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetChangeLogDeleteReply.ProtoReflect.Descriptor instead.
func (*AssetChangeLogDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP(), []int{10}
}

func (x *AssetChangeLogDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_novel_assetchangelog_v1_asset_change_log_proto protoreflect.FileDescriptor

var file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDesc = []byte{
	0x0a, 0x32, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7c, 0x0a, 0x15, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x22, 0x80, 0x01, 0x0a, 0x17, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe7, 0x03, 0x0a, 0x11, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xe9, 0x03, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x95, 0x02, 0x0a,
	0x17, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a,
	0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x22, 0xef, 0x03, 0x0a, 0x19, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xa5, 0x02, 0x0a, 0x17, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xa7,
	0x02, 0x0a, 0x19, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x6c, 0x64, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e, 0x65, 0x77, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x29, 0x0a, 0x17, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x19, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xfc, 0x06, 0x0a, 0x0e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x8e, 0x01,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x28, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x2a, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x82,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4c, 0x6f, 0x67, 0x12, 0x24, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x94, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x2a, 0x2e, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x1a, 0x17,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c,
	0x6f, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x8f, 0x01, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x4c, 0x6f, 0x67, 0x12, 0x2a, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x2c, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c,
	0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x91, 0x01, 0x0a,
	0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x2a, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x96, 0x01, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x2f,
	0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c, 0x6f,
	0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x2c, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4c,
	0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x42, 0x25, 0x5a, 0x23, 0x68, 0x6f, 0x70,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescOnce sync.Once
	file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescData = file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDesc
)

func file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescGZIP() []byte {
	file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescOnce.Do(func() {
		file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescData)
	})
	return file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDescData
}

var file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_novel_assetchangelog_v1_asset_change_log_proto_goTypes = []interface{}{
	(*AssetChangeLogPageReq)(nil),        // 0: assetchangelog.v1.AssetChangeLogPageReq
	(*AssetChangeLogPageReply)(nil),      // 1: assetchangelog.v1.AssetChangeLogPageReply
	(*AssetChangeLogReq)(nil),            // 2: assetchangelog.v1.AssetChangeLogReq
	(*AssetChangeLogReply)(nil),          // 3: assetchangelog.v1.AssetChangeLogReply
	(*AssetChangeLogCreateReq)(nil),      // 4: assetchangelog.v1.AssetChangeLogCreateReq
	(*AssetChangeLogCreateReply)(nil),    // 5: assetchangelog.v1.AssetChangeLogCreateReply
	(*AssetChangeLogUpdateReq)(nil),      // 6: assetchangelog.v1.AssetChangeLogUpdateReq
	(*AssetChangeLogUpdateReply)(nil),    // 7: assetchangelog.v1.AssetChangeLogUpdateReply
	(*AssetChangeLogDeleteReq)(nil),      // 8: assetchangelog.v1.AssetChangeLogDeleteReq
	(*AssetChangeLogBatchDeleteReq)(nil), // 9: assetchangelog.v1.AssetChangeLogBatchDeleteReq
	(*AssetChangeLogDeleteReply)(nil),    // 10: assetchangelog.v1.AssetChangeLogDeleteReply
	(*pagin.Pagination)(nil),             // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),        // 12: google.protobuf.Timestamp
}
var file_api_novel_assetchangelog_v1_asset_change_log_proto_depIdxs = []int32{
	11, // 0: assetchangelog.v1.AssetChangeLogPageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: assetchangelog.v1.AssetChangeLogPageReq.param:type_name -> assetchangelog.v1.AssetChangeLogReq
	11, // 2: assetchangelog.v1.AssetChangeLogPageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: assetchangelog.v1.AssetChangeLogPageReply.items:type_name -> assetchangelog.v1.AssetChangeLogReply
	12, // 4: assetchangelog.v1.AssetChangeLogReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: assetchangelog.v1.AssetChangeLogReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: assetchangelog.v1.AssetChangeLogReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: assetchangelog.v1.AssetChangeLogReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: assetchangelog.v1.AssetChangeLogCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: assetchangelog.v1.AssetChangeLogCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: assetchangelog.v1.AssetChangeLog.GetPageAssetChangeLog:input_type -> assetchangelog.v1.AssetChangeLogPageReq
	2,  // 11: assetchangelog.v1.AssetChangeLog.GetAssetChangeLog:input_type -> assetchangelog.v1.AssetChangeLogReq
	6,  // 12: assetchangelog.v1.AssetChangeLog.UpdateAssetChangeLog:input_type -> assetchangelog.v1.AssetChangeLogUpdateReq
	4,  // 13: assetchangelog.v1.AssetChangeLog.CreateAssetChangeLog:input_type -> assetchangelog.v1.AssetChangeLogCreateReq
	8,  // 14: assetchangelog.v1.AssetChangeLog.DeleteAssetChangeLog:input_type -> assetchangelog.v1.AssetChangeLogDeleteReq
	9,  // 15: assetchangelog.v1.AssetChangeLog.BatchDeleteAssetChangeLog:input_type -> assetchangelog.v1.AssetChangeLogBatchDeleteReq
	1,  // 16: assetchangelog.v1.AssetChangeLog.GetPageAssetChangeLog:output_type -> assetchangelog.v1.AssetChangeLogPageReply
	3,  // 17: assetchangelog.v1.AssetChangeLog.GetAssetChangeLog:output_type -> assetchangelog.v1.AssetChangeLogReply
	7,  // 18: assetchangelog.v1.AssetChangeLog.UpdateAssetChangeLog:output_type -> assetchangelog.v1.AssetChangeLogUpdateReply
	5,  // 19: assetchangelog.v1.AssetChangeLog.CreateAssetChangeLog:output_type -> assetchangelog.v1.AssetChangeLogCreateReply
	10, // 20: assetchangelog.v1.AssetChangeLog.DeleteAssetChangeLog:output_type -> assetchangelog.v1.AssetChangeLogDeleteReply
	10, // 21: assetchangelog.v1.AssetChangeLog.BatchDeleteAssetChangeLog:output_type -> assetchangelog.v1.AssetChangeLogDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_novel_assetchangelog_v1_asset_change_log_proto_init() }
func file_api_novel_assetchangelog_v1_asset_change_log_proto_init() {
	if File_api_novel_assetchangelog_v1_asset_change_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetChangeLogPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetChangeLogPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetChangeLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetChangeLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetChangeLogCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetChangeLogCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetChangeLogUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetChangeLogUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetChangeLogDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetChangeLogBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetChangeLogDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_novel_assetchangelog_v1_asset_change_log_proto_goTypes,
		DependencyIndexes: file_api_novel_assetchangelog_v1_asset_change_log_proto_depIdxs,
		MessageInfos:      file_api_novel_assetchangelog_v1_asset_change_log_proto_msgTypes,
	}.Build()
	File_api_novel_assetchangelog_v1_asset_change_log_proto = out.File
	file_api_novel_assetchangelog_v1_asset_change_log_proto_rawDesc = nil
	file_api_novel_assetchangelog_v1_asset_change_log_proto_goTypes = nil
	file_api_novel_assetchangelog_v1_asset_change_log_proto_depIdxs = nil
}
