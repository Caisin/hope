// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/admin/sysconfig/v1/sys_config.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type SysConfigPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *SysConfigReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *SysConfigPageReq) Reset() {
	*x = SysConfigPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysConfigPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysConfigPageReq) ProtoMessage() {}

func (x *SysConfigPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysConfigPageReq.ProtoReflect.Descriptor instead.
func (*SysConfigPageReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP(), []int{0}
}

func (x *SysConfigPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SysConfigPageReq) GetParam() *SysConfigReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type SysConfigPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*SysConfigReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SysConfigPageReply) Reset() {
	*x = SysConfigPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysConfigPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysConfigPageReply) ProtoMessage() {}

func (x *SysConfigPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysConfigPageReply.ProtoReflect.Descriptor instead.
func (*SysConfigPageReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP(), []int{1}
}

func (x *SysConfigPageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SysConfigPageReply) GetItems() []*SysConfigReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type SysConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//配置名称
	ConfigName string `protobuf:"bytes,2,opt,name=configName,proto3" json:"configName,omitempty"`
	//配置Key
	ConfigKey string `protobuf:"bytes,3,opt,name=configKey,proto3" json:"configKey,omitempty"`
	//配置值
	ConfigValue string `protobuf:"bytes,4,opt,name=configValue,proto3" json:"configValue,omitempty"`
	//配置类型
	ConfigType string `protobuf:"bytes,5,opt,name=configType,proto3" json:"configType,omitempty"`
	//是否前台
	IsFrontend int32 `protobuf:"varint,6,opt,name=isFrontend,proto3" json:"isFrontend,omitempty"`
	//状态:U:使用状态,E:失效状态
	State string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	//备注
	Remark string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,11,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,12,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,13,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysConfigReq) Reset() {
	*x = SysConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysConfigReq) ProtoMessage() {}

func (x *SysConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysConfigReq.ProtoReflect.Descriptor instead.
func (*SysConfigReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP(), []int{2}
}

func (x *SysConfigReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysConfigReq) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *SysConfigReq) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *SysConfigReq) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *SysConfigReq) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *SysConfigReq) GetIsFrontend() int32 {
	if x != nil {
		return x.IsFrontend
	}
	return 0
}

func (x *SysConfigReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SysConfigReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysConfigReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysConfigReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysConfigReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysConfigReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysConfigReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type SysConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//配置名称
	ConfigName string `protobuf:"bytes,2,opt,name=configName,proto3" json:"configName,omitempty"`
	//配置Key
	ConfigKey string `protobuf:"bytes,3,opt,name=configKey,proto3" json:"configKey,omitempty"`
	//配置值
	ConfigValue string `protobuf:"bytes,4,opt,name=configValue,proto3" json:"configValue,omitempty"`
	//配置类型
	ConfigType string `protobuf:"bytes,5,opt,name=configType,proto3" json:"configType,omitempty"`
	//是否前台
	IsFrontend int32 `protobuf:"varint,6,opt,name=isFrontend,proto3" json:"isFrontend,omitempty"`
	//状态:U:使用状态,E:失效状态
	State string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	//备注
	Remark string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,11,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,12,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,13,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysConfigReply) Reset() {
	*x = SysConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysConfigReply) ProtoMessage() {}

func (x *SysConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysConfigReply.ProtoReflect.Descriptor instead.
func (*SysConfigReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP(), []int{3}
}

func (x *SysConfigReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysConfigReply) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *SysConfigReply) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *SysConfigReply) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *SysConfigReply) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *SysConfigReply) GetIsFrontend() int32 {
	if x != nil {
		return x.IsFrontend
	}
	return 0
}

func (x *SysConfigReply) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SysConfigReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysConfigReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysConfigReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysConfigReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysConfigReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysConfigReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建SysConfig请求
type SysConfigCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//配置名称
	ConfigName string `protobuf:"bytes,1,opt,name=configName,proto3" json:"configName,omitempty"`
	//配置Key
	ConfigKey string `protobuf:"bytes,2,opt,name=configKey,proto3" json:"configKey,omitempty"`
	//配置值
	ConfigValue string `protobuf:"bytes,3,opt,name=configValue,proto3" json:"configValue,omitempty"`
	//配置类型
	ConfigType string `protobuf:"bytes,4,opt,name=configType,proto3" json:"configType,omitempty"`
	//是否前台
	IsFrontend int32 `protobuf:"varint,5,opt,name=isFrontend,proto3" json:"isFrontend,omitempty"`
	//状态:U:使用状态,E:失效状态
	State string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	//备注
	Remark string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SysConfigCreateReq) Reset() {
	*x = SysConfigCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysConfigCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysConfigCreateReq) ProtoMessage() {}

func (x *SysConfigCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysConfigCreateReq.ProtoReflect.Descriptor instead.
func (*SysConfigCreateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP(), []int{4}
}

func (x *SysConfigCreateReq) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *SysConfigCreateReq) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *SysConfigCreateReq) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *SysConfigCreateReq) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *SysConfigCreateReq) GetIsFrontend() int32 {
	if x != nil {
		return x.IsFrontend
	}
	return 0
}

func (x *SysConfigCreateReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SysConfigCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建SysConfig返回
type SysConfigCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//配置名称
	ConfigName string `protobuf:"bytes,2,opt,name=configName,proto3" json:"configName,omitempty"`
	//配置Key
	ConfigKey string `protobuf:"bytes,3,opt,name=configKey,proto3" json:"configKey,omitempty"`
	//配置值
	ConfigValue string `protobuf:"bytes,4,opt,name=configValue,proto3" json:"configValue,omitempty"`
	//配置类型
	ConfigType string `protobuf:"bytes,5,opt,name=configType,proto3" json:"configType,omitempty"`
	//是否前台
	IsFrontend int32 `protobuf:"varint,6,opt,name=isFrontend,proto3" json:"isFrontend,omitempty"`
	//状态:U:使用状态,E:失效状态
	State string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	//备注
	Remark string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,11,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,12,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,13,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysConfigCreateReply) Reset() {
	*x = SysConfigCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysConfigCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysConfigCreateReply) ProtoMessage() {}

func (x *SysConfigCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysConfigCreateReply.ProtoReflect.Descriptor instead.
func (*SysConfigCreateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP(), []int{5}
}

func (x *SysConfigCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysConfigCreateReply) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *SysConfigCreateReply) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *SysConfigCreateReply) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *SysConfigCreateReply) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *SysConfigCreateReply) GetIsFrontend() int32 {
	if x != nil {
		return x.IsFrontend
	}
	return 0
}

func (x *SysConfigCreateReply) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SysConfigCreateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysConfigCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysConfigCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysConfigCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysConfigCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysConfigCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新SysConfig请求
type SysConfigUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//配置名称
	ConfigName string `protobuf:"bytes,2,opt,name=configName,proto3" json:"configName,omitempty"`
	//配置Key
	ConfigKey string `protobuf:"bytes,3,opt,name=configKey,proto3" json:"configKey,omitempty"`
	//配置值
	ConfigValue string `protobuf:"bytes,4,opt,name=configValue,proto3" json:"configValue,omitempty"`
	//配置类型
	ConfigType string `protobuf:"bytes,5,opt,name=configType,proto3" json:"configType,omitempty"`
	//是否前台
	IsFrontend int32 `protobuf:"varint,6,opt,name=isFrontend,proto3" json:"isFrontend,omitempty"`
	//状态:U:使用状态,E:失效状态
	State string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	//备注
	Remark string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SysConfigUpdateReq) Reset() {
	*x = SysConfigUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysConfigUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysConfigUpdateReq) ProtoMessage() {}

func (x *SysConfigUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysConfigUpdateReq.ProtoReflect.Descriptor instead.
func (*SysConfigUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP(), []int{6}
}

func (x *SysConfigUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysConfigUpdateReq) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *SysConfigUpdateReq) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *SysConfigUpdateReq) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *SysConfigUpdateReq) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *SysConfigUpdateReq) GetIsFrontend() int32 {
	if x != nil {
		return x.IsFrontend
	}
	return 0
}

func (x *SysConfigUpdateReq) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SysConfigUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新SysConfig返回
type SysConfigUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//配置名称
	ConfigName string `protobuf:"bytes,2,opt,name=configName,proto3" json:"configName,omitempty"`
	//配置Key
	ConfigKey string `protobuf:"bytes,3,opt,name=configKey,proto3" json:"configKey,omitempty"`
	//配置值
	ConfigValue string `protobuf:"bytes,4,opt,name=configValue,proto3" json:"configValue,omitempty"`
	//配置类型
	ConfigType string `protobuf:"bytes,5,opt,name=configType,proto3" json:"configType,omitempty"`
	//是否前台
	IsFrontend int32 `protobuf:"varint,6,opt,name=isFrontend,proto3" json:"isFrontend,omitempty"`
	//状态:U:使用状态,E:失效状态
	State string `protobuf:"bytes,7,opt,name=state,proto3" json:"state,omitempty"`
	//备注
	Remark string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SysConfigUpdateReply) Reset() {
	*x = SysConfigUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysConfigUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysConfigUpdateReply) ProtoMessage() {}

func (x *SysConfigUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysConfigUpdateReply.ProtoReflect.Descriptor instead.
func (*SysConfigUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP(), []int{7}
}

func (x *SysConfigUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysConfigUpdateReply) GetConfigName() string {
	if x != nil {
		return x.ConfigName
	}
	return ""
}

func (x *SysConfigUpdateReply) GetConfigKey() string {
	if x != nil {
		return x.ConfigKey
	}
	return ""
}

func (x *SysConfigUpdateReply) GetConfigValue() string {
	if x != nil {
		return x.ConfigValue
	}
	return ""
}

func (x *SysConfigUpdateReply) GetConfigType() string {
	if x != nil {
		return x.ConfigType
	}
	return ""
}

func (x *SysConfigUpdateReply) GetIsFrontend() int32 {
	if x != nil {
		return x.IsFrontend
	}
	return 0
}

func (x *SysConfigUpdateReply) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *SysConfigUpdateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 删除SysConfig请求
type SysConfigDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SysConfigDeleteReq) Reset() {
	*x = SysConfigDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysConfigDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysConfigDeleteReq) ProtoMessage() {}

func (x *SysConfigDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysConfigDeleteReq.ProtoReflect.Descriptor instead.
func (*SysConfigDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP(), []int{8}
}

func (x *SysConfigDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除SysConfig请求
type SysConfigBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SysConfigBatchDeleteReq) Reset() {
	*x = SysConfigBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysConfigBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysConfigBatchDeleteReq) ProtoMessage() {}

func (x *SysConfigBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysConfigBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*SysConfigBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP(), []int{9}
}

func (x *SysConfigBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除SysConfig返回
type SysConfigDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysConfigDeleteReply) Reset() {
	*x = SysConfigDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysConfigDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysConfigDeleteReply) ProtoMessage() {}

func (x *SysConfigDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysConfigDeleteReply.ProtoReflect.Descriptor instead.
func (*SysConfigDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP(), []int{10}
}

func (x *SysConfigDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_admin_sysconfig_v1_sys_config_proto protoreflect.FileDescriptor

var file_api_admin_sysconfig_v1_sys_config_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x79, 0x73, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6d, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x22, 0x71, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb4, 0x03, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb6,
	0x03, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74,
	0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xbc, 0x03, 0x0a,
	0x14, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xf2, 0x01, 0x0a, 0x12,
	0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0xf4, 0x01, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x46,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69,
	0x73, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x24, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a,
	0x17, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2e, 0x0a, 0x14, 0x53, 0x79,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xbd, 0x05, 0x0a, 0x09, 0x53,
	0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x70, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1e, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73,
	0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x64, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x76, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x17, 0x1a, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x71, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x2e, 0x73, 0x79,
	0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20,
	0x2e, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x78, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x25, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x22, 0x2e, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x2a, 0x0d, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x79, 0x73, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x20, 0x5a, 0x1e, 0x68, 0x6f,
	0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_admin_sysconfig_v1_sys_config_proto_rawDescOnce sync.Once
	file_api_admin_sysconfig_v1_sys_config_proto_rawDescData = file_api_admin_sysconfig_v1_sys_config_proto_rawDesc
)

func file_api_admin_sysconfig_v1_sys_config_proto_rawDescGZIP() []byte {
	file_api_admin_sysconfig_v1_sys_config_proto_rawDescOnce.Do(func() {
		file_api_admin_sysconfig_v1_sys_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_admin_sysconfig_v1_sys_config_proto_rawDescData)
	})
	return file_api_admin_sysconfig_v1_sys_config_proto_rawDescData
}

var file_api_admin_sysconfig_v1_sys_config_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_admin_sysconfig_v1_sys_config_proto_goTypes = []interface{}{
	(*SysConfigPageReq)(nil),        // 0: sysconfig.v1.SysConfigPageReq
	(*SysConfigPageReply)(nil),      // 1: sysconfig.v1.SysConfigPageReply
	(*SysConfigReq)(nil),            // 2: sysconfig.v1.SysConfigReq
	(*SysConfigReply)(nil),          // 3: sysconfig.v1.SysConfigReply
	(*SysConfigCreateReq)(nil),      // 4: sysconfig.v1.SysConfigCreateReq
	(*SysConfigCreateReply)(nil),    // 5: sysconfig.v1.SysConfigCreateReply
	(*SysConfigUpdateReq)(nil),      // 6: sysconfig.v1.SysConfigUpdateReq
	(*SysConfigUpdateReply)(nil),    // 7: sysconfig.v1.SysConfigUpdateReply
	(*SysConfigDeleteReq)(nil),      // 8: sysconfig.v1.SysConfigDeleteReq
	(*SysConfigBatchDeleteReq)(nil), // 9: sysconfig.v1.SysConfigBatchDeleteReq
	(*SysConfigDeleteReply)(nil),    // 10: sysconfig.v1.SysConfigDeleteReply
	(*pagin.Pagination)(nil),        // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),   // 12: google.protobuf.Timestamp
}
var file_api_admin_sysconfig_v1_sys_config_proto_depIdxs = []int32{
	11, // 0: sysconfig.v1.SysConfigPageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: sysconfig.v1.SysConfigPageReq.param:type_name -> sysconfig.v1.SysConfigReq
	11, // 2: sysconfig.v1.SysConfigPageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: sysconfig.v1.SysConfigPageReply.items:type_name -> sysconfig.v1.SysConfigReply
	12, // 4: sysconfig.v1.SysConfigReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: sysconfig.v1.SysConfigReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: sysconfig.v1.SysConfigReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: sysconfig.v1.SysConfigReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: sysconfig.v1.SysConfigCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: sysconfig.v1.SysConfigCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: sysconfig.v1.SysConfig.GetPageSysConfig:input_type -> sysconfig.v1.SysConfigPageReq
	2,  // 11: sysconfig.v1.SysConfig.GetSysConfig:input_type -> sysconfig.v1.SysConfigReq
	6,  // 12: sysconfig.v1.SysConfig.UpdateSysConfig:input_type -> sysconfig.v1.SysConfigUpdateReq
	4,  // 13: sysconfig.v1.SysConfig.CreateSysConfig:input_type -> sysconfig.v1.SysConfigCreateReq
	8,  // 14: sysconfig.v1.SysConfig.DeleteSysConfig:input_type -> sysconfig.v1.SysConfigDeleteReq
	9,  // 15: sysconfig.v1.SysConfig.BatchDeleteSysConfig:input_type -> sysconfig.v1.SysConfigBatchDeleteReq
	1,  // 16: sysconfig.v1.SysConfig.GetPageSysConfig:output_type -> sysconfig.v1.SysConfigPageReply
	3,  // 17: sysconfig.v1.SysConfig.GetSysConfig:output_type -> sysconfig.v1.SysConfigReply
	7,  // 18: sysconfig.v1.SysConfig.UpdateSysConfig:output_type -> sysconfig.v1.SysConfigUpdateReply
	5,  // 19: sysconfig.v1.SysConfig.CreateSysConfig:output_type -> sysconfig.v1.SysConfigCreateReply
	10, // 20: sysconfig.v1.SysConfig.DeleteSysConfig:output_type -> sysconfig.v1.SysConfigDeleteReply
	10, // 21: sysconfig.v1.SysConfig.BatchDeleteSysConfig:output_type -> sysconfig.v1.SysConfigDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_admin_sysconfig_v1_sys_config_proto_init() }
func file_api_admin_sysconfig_v1_sys_config_proto_init() {
	if File_api_admin_sysconfig_v1_sys_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysConfigPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysConfigPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysConfigCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysConfigCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysConfigUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysConfigUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysConfigDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysConfigBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysconfig_v1_sys_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysConfigDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_admin_sysconfig_v1_sys_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_admin_sysconfig_v1_sys_config_proto_goTypes,
		DependencyIndexes: file_api_admin_sysconfig_v1_sys_config_proto_depIdxs,
		MessageInfos:      file_api_admin_sysconfig_v1_sys_config_proto_msgTypes,
	}.Build()
	File_api_admin_sysconfig_v1_sys_config_proto = out.File
	file_api_admin_sysconfig_v1_sys_config_proto_rawDesc = nil
	file_api_admin_sysconfig_v1_sys_config_proto_goTypes = nil
	file_api_admin_sysconfig_v1_sys_config_proto_depIdxs = nil
}
