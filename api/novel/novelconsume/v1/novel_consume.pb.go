// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/novel/novelconsume/v1/novel_consume.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type NovelConsumePageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *NovelConsumeReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *NovelConsumePageReq) Reset() {
	*x = NovelConsumePageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelConsumePageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelConsumePageReq) ProtoMessage() {}

func (x *NovelConsumePageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelConsumePageReq.ProtoReflect.Descriptor instead.
func (*NovelConsumePageReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP(), []int{0}
}

func (x *NovelConsumePageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *NovelConsumePageReq) GetParam() *NovelConsumeReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type NovelConsumePageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*NovelConsumeReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NovelConsumePageReply) Reset() {
	*x = NovelConsumePageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelConsumePageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelConsumePageReply) ProtoMessage() {}

func (x *NovelConsumePageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelConsumePageReply.ProtoReflect.Descriptor instead.
func (*NovelConsumePageReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP(), []int{1}
}

func (x *NovelConsumePageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *NovelConsumePageReply) GetItems() []*NovelConsumeReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type NovelConsumeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//书号
	NovelId int64 `protobuf:"varint,2,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,4,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//VIP折扣金额
	Discount int64 `protobuf:"varint,5,opt,name=discount,proto3" json:"discount,omitempty"`
	//打赏金额
	Reward int64 `protobuf:"varint,6,opt,name=reward,proto3" json:"reward,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,11,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelConsumeReq) Reset() {
	*x = NovelConsumeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelConsumeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelConsumeReq) ProtoMessage() {}

func (x *NovelConsumeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelConsumeReq.ProtoReflect.Descriptor instead.
func (*NovelConsumeReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP(), []int{2}
}

func (x *NovelConsumeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelConsumeReq) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *NovelConsumeReq) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *NovelConsumeReq) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *NovelConsumeReq) GetDiscount() int64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *NovelConsumeReq) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *NovelConsumeReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelConsumeReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelConsumeReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelConsumeReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelConsumeReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type NovelConsumeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//书号
	NovelId int64 `protobuf:"varint,2,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,4,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//VIP折扣金额
	Discount int64 `protobuf:"varint,5,opt,name=discount,proto3" json:"discount,omitempty"`
	//打赏金额
	Reward int64 `protobuf:"varint,6,opt,name=reward,proto3" json:"reward,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,11,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelConsumeReply) Reset() {
	*x = NovelConsumeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelConsumeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelConsumeReply) ProtoMessage() {}

func (x *NovelConsumeReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelConsumeReply.ProtoReflect.Descriptor instead.
func (*NovelConsumeReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP(), []int{3}
}

func (x *NovelConsumeReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelConsumeReply) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *NovelConsumeReply) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *NovelConsumeReply) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *NovelConsumeReply) GetDiscount() int64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *NovelConsumeReply) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *NovelConsumeReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelConsumeReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelConsumeReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelConsumeReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelConsumeReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建NovelConsume请求
type NovelConsumeCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//书号
	NovelId int64 `protobuf:"varint,1,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,2,opt,name=coin,proto3" json:"coin,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,3,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//VIP折扣金额
	Discount int64 `protobuf:"varint,4,opt,name=discount,proto3" json:"discount,omitempty"`
	//打赏金额
	Reward int64 `protobuf:"varint,5,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *NovelConsumeCreateReq) Reset() {
	*x = NovelConsumeCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelConsumeCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelConsumeCreateReq) ProtoMessage() {}

func (x *NovelConsumeCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelConsumeCreateReq.ProtoReflect.Descriptor instead.
func (*NovelConsumeCreateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP(), []int{4}
}

func (x *NovelConsumeCreateReq) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *NovelConsumeCreateReq) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *NovelConsumeCreateReq) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *NovelConsumeCreateReq) GetDiscount() int64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *NovelConsumeCreateReq) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

// 创建NovelConsume返回
type NovelConsumeCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//书号
	NovelId int64 `protobuf:"varint,2,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,4,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//VIP折扣金额
	Discount int64 `protobuf:"varint,5,opt,name=discount,proto3" json:"discount,omitempty"`
	//打赏金额
	Reward int64 `protobuf:"varint,6,opt,name=reward,proto3" json:"reward,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,9,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,10,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,11,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelConsumeCreateReply) Reset() {
	*x = NovelConsumeCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelConsumeCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelConsumeCreateReply) ProtoMessage() {}

func (x *NovelConsumeCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelConsumeCreateReply.ProtoReflect.Descriptor instead.
func (*NovelConsumeCreateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP(), []int{5}
}

func (x *NovelConsumeCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelConsumeCreateReply) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *NovelConsumeCreateReply) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *NovelConsumeCreateReply) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *NovelConsumeCreateReply) GetDiscount() int64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *NovelConsumeCreateReply) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

func (x *NovelConsumeCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelConsumeCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelConsumeCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelConsumeCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelConsumeCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新NovelConsume请求
type NovelConsumeUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//书号
	NovelId int64 `protobuf:"varint,2,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,4,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//VIP折扣金额
	Discount int64 `protobuf:"varint,5,opt,name=discount,proto3" json:"discount,omitempty"`
	//打赏金额
	Reward int64 `protobuf:"varint,6,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *NovelConsumeUpdateReq) Reset() {
	*x = NovelConsumeUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelConsumeUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelConsumeUpdateReq) ProtoMessage() {}

func (x *NovelConsumeUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelConsumeUpdateReq.ProtoReflect.Descriptor instead.
func (*NovelConsumeUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP(), []int{6}
}

func (x *NovelConsumeUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelConsumeUpdateReq) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *NovelConsumeUpdateReq) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *NovelConsumeUpdateReq) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *NovelConsumeUpdateReq) GetDiscount() int64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *NovelConsumeUpdateReq) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

// 更新NovelConsume返回
type NovelConsumeUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//书号
	NovelId int64 `protobuf:"varint,2,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,3,opt,name=coin,proto3" json:"coin,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,4,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//VIP折扣金额
	Discount int64 `protobuf:"varint,5,opt,name=discount,proto3" json:"discount,omitempty"`
	//打赏金额
	Reward int64 `protobuf:"varint,6,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *NovelConsumeUpdateReply) Reset() {
	*x = NovelConsumeUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelConsumeUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelConsumeUpdateReply) ProtoMessage() {}

func (x *NovelConsumeUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelConsumeUpdateReply.ProtoReflect.Descriptor instead.
func (*NovelConsumeUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP(), []int{7}
}

func (x *NovelConsumeUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelConsumeUpdateReply) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *NovelConsumeUpdateReply) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *NovelConsumeUpdateReply) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *NovelConsumeUpdateReply) GetDiscount() int64 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *NovelConsumeUpdateReply) GetReward() int64 {
	if x != nil {
		return x.Reward
	}
	return 0
}

// 删除NovelConsume请求
type NovelConsumeDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NovelConsumeDeleteReq) Reset() {
	*x = NovelConsumeDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelConsumeDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelConsumeDeleteReq) ProtoMessage() {}

func (x *NovelConsumeDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelConsumeDeleteReq.ProtoReflect.Descriptor instead.
func (*NovelConsumeDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP(), []int{8}
}

func (x *NovelConsumeDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除NovelConsume请求
type NovelConsumeBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *NovelConsumeBatchDeleteReq) Reset() {
	*x = NovelConsumeBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelConsumeBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelConsumeBatchDeleteReq) ProtoMessage() {}

func (x *NovelConsumeBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelConsumeBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*NovelConsumeBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP(), []int{9}
}

func (x *NovelConsumeBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除NovelConsume返回
type NovelConsumeDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NovelConsumeDeleteReply) Reset() {
	*x = NovelConsumeDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelConsumeDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelConsumeDeleteReply) ProtoMessage() {}

func (x *NovelConsumeDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelConsumeDeleteReply.ProtoReflect.Descriptor instead.
func (*NovelConsumeDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP(), []int{10}
}

func (x *NovelConsumeDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_novel_novelconsume_v1_novel_consume_proto protoreflect.FileDescriptor

var file_api_novel_novelconsume_v1_novel_consume_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x76,
	0x0a, 0x13, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x36,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x52,
	0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x7a, 0x0a, 0x15, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xe3, 0x02, 0x0a, 0x0f, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe5, 0x02, 0x0a, 0x11, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x91, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x22, 0xeb, 0x02, 0x0a, 0x17, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xa1, 0x01, 0x0a, 0x15, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x17, 0x4e, 0x6f, 0x76, 0x65, 0x6c,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x22, 0x27, 0x0a, 0x15,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2e, 0x0a, 0x1a, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x31, 0x0a, 0x17, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xb7, 0x06, 0x0a, 0x0c, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x12, 0x24, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x77, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x12, 0x20, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x89, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12,
	0x26, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x84, 0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x26, 0x2e, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c,
	0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x86, 0x01, 0x0a, 0x12,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x12, 0x26, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x76,
	0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8b, 0x01, 0x0a, 0x17, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x12, 0x2b, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a,
	0x11, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x42, 0x23, 0x5a, 0x21, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_novel_novelconsume_v1_novel_consume_proto_rawDescOnce sync.Once
	file_api_novel_novelconsume_v1_novel_consume_proto_rawDescData = file_api_novel_novelconsume_v1_novel_consume_proto_rawDesc
)

func file_api_novel_novelconsume_v1_novel_consume_proto_rawDescGZIP() []byte {
	file_api_novel_novelconsume_v1_novel_consume_proto_rawDescOnce.Do(func() {
		file_api_novel_novelconsume_v1_novel_consume_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_novel_novelconsume_v1_novel_consume_proto_rawDescData)
	})
	return file_api_novel_novelconsume_v1_novel_consume_proto_rawDescData
}

var file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_novel_novelconsume_v1_novel_consume_proto_goTypes = []interface{}{
	(*NovelConsumePageReq)(nil),        // 0: novelconsume.v1.NovelConsumePageReq
	(*NovelConsumePageReply)(nil),      // 1: novelconsume.v1.NovelConsumePageReply
	(*NovelConsumeReq)(nil),            // 2: novelconsume.v1.NovelConsumeReq
	(*NovelConsumeReply)(nil),          // 3: novelconsume.v1.NovelConsumeReply
	(*NovelConsumeCreateReq)(nil),      // 4: novelconsume.v1.NovelConsumeCreateReq
	(*NovelConsumeCreateReply)(nil),    // 5: novelconsume.v1.NovelConsumeCreateReply
	(*NovelConsumeUpdateReq)(nil),      // 6: novelconsume.v1.NovelConsumeUpdateReq
	(*NovelConsumeUpdateReply)(nil),    // 7: novelconsume.v1.NovelConsumeUpdateReply
	(*NovelConsumeDeleteReq)(nil),      // 8: novelconsume.v1.NovelConsumeDeleteReq
	(*NovelConsumeBatchDeleteReq)(nil), // 9: novelconsume.v1.NovelConsumeBatchDeleteReq
	(*NovelConsumeDeleteReply)(nil),    // 10: novelconsume.v1.NovelConsumeDeleteReply
	(*pagin.Pagination)(nil),           // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),      // 12: google.protobuf.Timestamp
}
var file_api_novel_novelconsume_v1_novel_consume_proto_depIdxs = []int32{
	11, // 0: novelconsume.v1.NovelConsumePageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: novelconsume.v1.NovelConsumePageReq.param:type_name -> novelconsume.v1.NovelConsumeReq
	11, // 2: novelconsume.v1.NovelConsumePageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: novelconsume.v1.NovelConsumePageReply.items:type_name -> novelconsume.v1.NovelConsumeReply
	12, // 4: novelconsume.v1.NovelConsumeReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: novelconsume.v1.NovelConsumeReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: novelconsume.v1.NovelConsumeReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: novelconsume.v1.NovelConsumeReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: novelconsume.v1.NovelConsumeCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: novelconsume.v1.NovelConsumeCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: novelconsume.v1.NovelConsume.GetPageNovelConsume:input_type -> novelconsume.v1.NovelConsumePageReq
	2,  // 11: novelconsume.v1.NovelConsume.GetNovelConsume:input_type -> novelconsume.v1.NovelConsumeReq
	6,  // 12: novelconsume.v1.NovelConsume.UpdateNovelConsume:input_type -> novelconsume.v1.NovelConsumeUpdateReq
	4,  // 13: novelconsume.v1.NovelConsume.CreateNovelConsume:input_type -> novelconsume.v1.NovelConsumeCreateReq
	8,  // 14: novelconsume.v1.NovelConsume.DeleteNovelConsume:input_type -> novelconsume.v1.NovelConsumeDeleteReq
	9,  // 15: novelconsume.v1.NovelConsume.BatchDeleteNovelConsume:input_type -> novelconsume.v1.NovelConsumeBatchDeleteReq
	1,  // 16: novelconsume.v1.NovelConsume.GetPageNovelConsume:output_type -> novelconsume.v1.NovelConsumePageReply
	3,  // 17: novelconsume.v1.NovelConsume.GetNovelConsume:output_type -> novelconsume.v1.NovelConsumeReply
	7,  // 18: novelconsume.v1.NovelConsume.UpdateNovelConsume:output_type -> novelconsume.v1.NovelConsumeUpdateReply
	5,  // 19: novelconsume.v1.NovelConsume.CreateNovelConsume:output_type -> novelconsume.v1.NovelConsumeCreateReply
	10, // 20: novelconsume.v1.NovelConsume.DeleteNovelConsume:output_type -> novelconsume.v1.NovelConsumeDeleteReply
	10, // 21: novelconsume.v1.NovelConsume.BatchDeleteNovelConsume:output_type -> novelconsume.v1.NovelConsumeDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_novel_novelconsume_v1_novel_consume_proto_init() }
func file_api_novel_novelconsume_v1_novel_consume_proto_init() {
	if File_api_novel_novelconsume_v1_novel_consume_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelConsumePageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelConsumePageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelConsumeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelConsumeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelConsumeCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelConsumeCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelConsumeUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelConsumeUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelConsumeDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelConsumeBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelConsumeDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_novel_novelconsume_v1_novel_consume_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_novel_novelconsume_v1_novel_consume_proto_goTypes,
		DependencyIndexes: file_api_novel_novelconsume_v1_novel_consume_proto_depIdxs,
		MessageInfos:      file_api_novel_novelconsume_v1_novel_consume_proto_msgTypes,
	}.Build()
	File_api_novel_novelconsume_v1_novel_consume_proto = out.File
	file_api_novel_novelconsume_v1_novel_consume_proto_rawDesc = nil
	file_api_novel_novelconsume_v1_novel_consume_proto_goTypes = nil
	file_api_novel_novelconsume_v1_novel_consume_proto_depIdxs = nil
}
