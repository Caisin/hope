// Code generated by Caisin. DO NOT EDIT.
// source: apps/admin/internal/data/ent/schema/sys_tables.go

package convert

import (
	"google.golang.org/protobuf/types/known/timestamppb"
	v1 "hope/api/admin/systables/v1"
	"hope/apps/admin/internal/data/ent"
)

func SysTablesUpdateReq2Data(v *v1.SysTablesUpdateReq) *ent.SysTables {
	if v == nil {
		return nil
	}
	return &ent.SysTables{
		ID:              v.Id,
		TableName:       v.TableName,
		TableComment:    v.TableComment,
		ClassName:       v.ClassName,
		TplCategory:     v.TplCategory,
		PackageName:     v.PackageName,
		ModuleName:      v.ModuleName,
		ModuleFrontName: v.ModuleFrontName,
		BusinessName:    v.BusinessName,
		FunctionName:    v.FunctionName,
		FunctionAuthor:  v.FunctionAuthor,
		PkColumn:        v.PkColumn,
		PkGoField:       v.PkGoField,
		PkJsonField:     v.PkJsonField,
		Options:         v.Options,
		TreeCode:        v.TreeCode,
		TreeParentCode:  v.TreeParentCode,
		TreeName:        v.TreeName,
		Tree:            v.Tree,
		Crud:            v.Crud,
		Remark:          v.Remark,
		IsDataScope:     v.IsDataScope,
		IsActions:       v.IsActions,
		IsAuth:          v.IsAuth,
		IsLogicalDelete: v.IsLogicalDelete,
		LogicalDelete:   v.LogicalDelete,
	}
}

func SysTablesData2UpdateReq(v *ent.SysTables) *v1.SysTablesUpdateReq {
	if v == nil {
		return nil
	}
	return &v1.SysTablesUpdateReq{
		Id:              v.ID,
		TableName:       v.TableName,
		TableComment:    v.TableComment,
		ClassName:       v.ClassName,
		TplCategory:     v.TplCategory,
		PackageName:     v.PackageName,
		ModuleName:      v.ModuleName,
		ModuleFrontName: v.ModuleFrontName,
		BusinessName:    v.BusinessName,
		FunctionName:    v.FunctionName,
		FunctionAuthor:  v.FunctionAuthor,
		PkColumn:        v.PkColumn,
		PkGoField:       v.PkGoField,
		PkJsonField:     v.PkJsonField,
		Options:         v.Options,
		TreeCode:        v.TreeCode,
		TreeParentCode:  v.TreeParentCode,
		TreeName:        v.TreeName,
		Tree:            v.Tree,
		Crud:            v.Crud,
		Remark:          v.Remark,
		IsDataScope:     v.IsDataScope,
		IsActions:       v.IsActions,
		IsAuth:          v.IsAuth,
		IsLogicalDelete: v.IsLogicalDelete,
		LogicalDelete:   v.LogicalDelete,
	}
}

func SysTablesCreateReq2Data(v *v1.SysTablesCreateReq) *ent.SysTables {
	if v == nil {
		return nil
	}
	return &ent.SysTables{
		TableName:       v.TableName,
		TableComment:    v.TableComment,
		ClassName:       v.ClassName,
		TplCategory:     v.TplCategory,
		PackageName:     v.PackageName,
		ModuleName:      v.ModuleName,
		ModuleFrontName: v.ModuleFrontName,
		BusinessName:    v.BusinessName,
		FunctionName:    v.FunctionName,
		FunctionAuthor:  v.FunctionAuthor,
		PkColumn:        v.PkColumn,
		PkGoField:       v.PkGoField,
		PkJsonField:     v.PkJsonField,
		Options:         v.Options,
		TreeCode:        v.TreeCode,
		TreeParentCode:  v.TreeParentCode,
		TreeName:        v.TreeName,
		Tree:            v.Tree,
		Crud:            v.Crud,
		Remark:          v.Remark,
		IsDataScope:     v.IsDataScope,
		IsActions:       v.IsActions,
		IsAuth:          v.IsAuth,
		IsLogicalDelete: v.IsLogicalDelete,
		LogicalDelete:   v.LogicalDelete,
	}
}

func SysTablesData2CreateReq(v *ent.SysTables) *v1.SysTablesCreateReq {
	if v == nil {
		return nil
	}
	return &v1.SysTablesCreateReq{
		TableName:       v.TableName,
		TableComment:    v.TableComment,
		ClassName:       v.ClassName,
		TplCategory:     v.TplCategory,
		PackageName:     v.PackageName,
		ModuleName:      v.ModuleName,
		ModuleFrontName: v.ModuleFrontName,
		BusinessName:    v.BusinessName,
		FunctionName:    v.FunctionName,
		FunctionAuthor:  v.FunctionAuthor,
		PkColumn:        v.PkColumn,
		PkGoField:       v.PkGoField,
		PkJsonField:     v.PkJsonField,
		Options:         v.Options,
		TreeCode:        v.TreeCode,
		TreeParentCode:  v.TreeParentCode,
		TreeName:        v.TreeName,
		Tree:            v.Tree,
		Crud:            v.Crud,
		Remark:          v.Remark,
		IsDataScope:     v.IsDataScope,
		IsActions:       v.IsActions,
		IsAuth:          v.IsAuth,
		IsLogicalDelete: v.IsLogicalDelete,
		LogicalDelete:   v.LogicalDelete,
	}
}

func SysTablesReq2Data(v *v1.SysTablesReq) *ent.SysTables {
	if v == nil {
		return nil
	}
	return &ent.SysTables{
		TableName:       v.TableName,
		TableComment:    v.TableComment,
		ClassName:       v.ClassName,
		TplCategory:     v.TplCategory,
		PackageName:     v.PackageName,
		ModuleName:      v.ModuleName,
		ModuleFrontName: v.ModuleFrontName,
		BusinessName:    v.BusinessName,
		FunctionName:    v.FunctionName,
		FunctionAuthor:  v.FunctionAuthor,
		PkColumn:        v.PkColumn,
		PkGoField:       v.PkGoField,
		PkJsonField:     v.PkJsonField,
		Options:         v.Options,
		TreeCode:        v.TreeCode,
		TreeParentCode:  v.TreeParentCode,
		TreeName:        v.TreeName,
		Tree:            v.Tree,
		Crud:            v.Crud,
		Remark:          v.Remark,
		IsDataScope:     v.IsDataScope,
		IsActions:       v.IsActions,
		IsAuth:          v.IsAuth,
		IsLogicalDelete: v.IsLogicalDelete,
		LogicalDelete:   v.LogicalDelete,
	}
}

func SysTablesData2Req(v *ent.SysTables) *v1.SysTablesReq {
	if v == nil {
		return nil
	}
	return &v1.SysTablesReq{
		TableName:       v.TableName,
		TableComment:    v.TableComment,
		ClassName:       v.ClassName,
		TplCategory:     v.TplCategory,
		PackageName:     v.PackageName,
		ModuleName:      v.ModuleName,
		ModuleFrontName: v.ModuleFrontName,
		BusinessName:    v.BusinessName,
		FunctionName:    v.FunctionName,
		FunctionAuthor:  v.FunctionAuthor,
		PkColumn:        v.PkColumn,
		PkGoField:       v.PkGoField,
		PkJsonField:     v.PkJsonField,
		Options:         v.Options,
		TreeCode:        v.TreeCode,
		TreeParentCode:  v.TreeParentCode,
		TreeName:        v.TreeName,
		Tree:            v.Tree,
		Crud:            v.Crud,
		Remark:          v.Remark,
		IsDataScope:     v.IsDataScope,
		IsActions:       v.IsActions,
		IsAuth:          v.IsAuth,
		IsLogicalDelete: v.IsLogicalDelete,
		LogicalDelete:   v.LogicalDelete,
	}
}

func SysTablesData2Reply(v *ent.SysTables) *v1.SysTablesData {
	if v == nil {
		return nil
	}
	return &v1.SysTablesData{
		Id:                  v.ID,
		TableName:           v.TableName,
		TableComment:        v.TableComment,
		ClassName:           v.ClassName,
		TplCategory:         v.TplCategory,
		PackageName:         v.PackageName,
		ModuleName:          v.ModuleName,
		ModuleFrontName:     v.ModuleFrontName,
		BusinessName:        v.BusinessName,
		FunctionName:        v.FunctionName,
		FunctionAuthor:      v.FunctionAuthor,
		PkColumn:            v.PkColumn,
		PkGoField:           v.PkGoField,
		PkJsonField:         v.PkJsonField,
		Options:             v.Options,
		TreeCode:            v.TreeCode,
		TreeParentCode:      v.TreeParentCode,
		TreeName:            v.TreeName,
		Tree:                v.Tree,
		Crud:                v.Crud,
		Remark:              v.Remark,
		IsDataScope:         v.IsDataScope,
		IsActions:           v.IsActions,
		IsAuth:              v.IsAuth,
		IsLogicalDelete:     v.IsLogicalDelete,
		LogicalDelete:       v.LogicalDelete,
		LogicalDeleteColumn: v.LogicalDeleteColumn,
		CreatedAt:           timestamppb.New(v.CreatedAt),
		UpdatedAt:           timestamppb.New(v.UpdatedAt),
		CreateBy:            v.CreateBy,
		UpdateBy:            v.UpdateBy,
		TenantId:            v.TenantId,
	}
}
