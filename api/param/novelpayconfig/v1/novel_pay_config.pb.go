// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/param/novelpayconfig/v1/novel_pay_config.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type NovelPayConfigData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//谷歌商品ID
	ProductId string `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	//商品名称
	PaymentName string `protobuf:"bytes,3,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//首次充值金额
	FirstPayment int64 `protobuf:"varint,4,opt,name=firstPayment,proto3" json:"firstPayment,omitempty"`
	//充值金额:分
	Payment int64 `protobuf:"varint,5,opt,name=payment,proto3" json:"payment,omitempty"`
	//原价
	OriginalPrice int64 `protobuf:"varint,6,opt,name=originalPrice,proto3" json:"originalPrice,omitempty"`
	//配置类型,activity
	CfgType string `protobuf:"bytes,7,opt,name=cfgType,proto3" json:"cfgType,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,8,opt,name=coin,proto3" json:"coin,omitempty"`
	//货币类型
	Currency string `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,10,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//现金科目,查看asset_item表cash_flag=1
	CoinItem int32 `protobuf:"varint,11,opt,name=coinItem,proto3" json:"coinItem,omitempty"`
	//赠送科目,查看asset_item表cash_flag=0
	CouponItem int32 `protobuf:"varint,12,opt,name=couponItem,proto3" json:"couponItem,omitempty"`
	//排序
	Sort int32 `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	//状态
	State bool `protobuf:"varint,14,opt,name=state,proto3" json:"state,omitempty"`
	//巨量引擎是否回传
	IsSend int32 `protobuf:"varint,15,opt,name=isSend,proto3" json:"isSend,omitempty"`
	//充值类型
	PayType int32 `protobuf:"varint,16,opt,name=payType,proto3" json:"payType,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,17,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//展示火
	IsHot bool `protobuf:"varint,18,opt,name=isHot,proto3" json:"isHot,omitempty"`
	//扣款周期天数,有这个值就周期扣款
	CycleDay int32 `protobuf:"varint,19,opt,name=cycleDay,proto3" json:"cycleDay,omitempty"`
	//描述
	Summary string `protobuf:"bytes,20,opt,name=summary,proto3" json:"summary,omitempty"`
	//备注
	Remark string `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,24,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,25,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,26,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,27,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,28,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelPayConfigData) Reset() {
	*x = NovelPayConfigData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigData) ProtoMessage() {}

func (x *NovelPayConfigData) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigData.ProtoReflect.Descriptor instead.
func (*NovelPayConfigData) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{0}
}

func (x *NovelPayConfigData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelPayConfigData) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *NovelPayConfigData) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *NovelPayConfigData) GetFirstPayment() int64 {
	if x != nil {
		return x.FirstPayment
	}
	return 0
}

func (x *NovelPayConfigData) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *NovelPayConfigData) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *NovelPayConfigData) GetCfgType() string {
	if x != nil {
		return x.CfgType
	}
	return ""
}

func (x *NovelPayConfigData) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *NovelPayConfigData) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *NovelPayConfigData) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *NovelPayConfigData) GetCoinItem() int32 {
	if x != nil {
		return x.CoinItem
	}
	return 0
}

func (x *NovelPayConfigData) GetCouponItem() int32 {
	if x != nil {
		return x.CouponItem
	}
	return 0
}

func (x *NovelPayConfigData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *NovelPayConfigData) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *NovelPayConfigData) GetIsSend() int32 {
	if x != nil {
		return x.IsSend
	}
	return 0
}

func (x *NovelPayConfigData) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *NovelPayConfigData) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *NovelPayConfigData) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *NovelPayConfigData) GetCycleDay() int32 {
	if x != nil {
		return x.CycleDay
	}
	return 0
}

func (x *NovelPayConfigData) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *NovelPayConfigData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *NovelPayConfigData) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *NovelPayConfigData) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

func (x *NovelPayConfigData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelPayConfigData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelPayConfigData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelPayConfigData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelPayConfigData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type NovelPayConfigPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *NovelPayConfigReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *NovelPayConfigPageReq) Reset() {
	*x = NovelPayConfigPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigPageReq) ProtoMessage() {}

func (x *NovelPayConfigPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigPageReq.ProtoReflect.Descriptor instead.
func (*NovelPayConfigPageReq) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{1}
}

func (x *NovelPayConfigPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *NovelPayConfigPageReq) GetParam() *NovelPayConfigReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type NovelPayConfigPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*NovelPayConfigData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NovelPayConfigPageReply) Reset() {
	*x = NovelPayConfigPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigPageReply) ProtoMessage() {}

func (x *NovelPayConfigPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigPageReply.ProtoReflect.Descriptor instead.
func (*NovelPayConfigPageReply) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{2}
}

func (x *NovelPayConfigPageReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NovelPayConfigPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NovelPayConfigPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *NovelPayConfigPageReply) GetItems() []*NovelPayConfigData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type NovelPayConfigReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//谷歌商品ID
	ProductId string `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	//商品名称
	PaymentName string `protobuf:"bytes,3,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//首次充值金额
	FirstPayment int64 `protobuf:"varint,4,opt,name=firstPayment,proto3" json:"firstPayment,omitempty"`
	//充值金额:分
	Payment int64 `protobuf:"varint,5,opt,name=payment,proto3" json:"payment,omitempty"`
	//原价
	OriginalPrice int64 `protobuf:"varint,6,opt,name=originalPrice,proto3" json:"originalPrice,omitempty"`
	//配置类型,activity
	CfgType string `protobuf:"bytes,7,opt,name=cfgType,proto3" json:"cfgType,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,8,opt,name=coin,proto3" json:"coin,omitempty"`
	//货币类型
	Currency string `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,10,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//现金科目,查看asset_item表cash_flag=1
	CoinItem int32 `protobuf:"varint,11,opt,name=coinItem,proto3" json:"coinItem,omitempty"`
	//赠送科目,查看asset_item表cash_flag=0
	CouponItem int32 `protobuf:"varint,12,opt,name=couponItem,proto3" json:"couponItem,omitempty"`
	//排序
	Sort int32 `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	//状态
	State bool `protobuf:"varint,14,opt,name=state,proto3" json:"state,omitempty"`
	//巨量引擎是否回传
	IsSend int32 `protobuf:"varint,15,opt,name=isSend,proto3" json:"isSend,omitempty"`
	//充值类型
	PayType int32 `protobuf:"varint,16,opt,name=payType,proto3" json:"payType,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,17,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//展示火
	IsHot bool `protobuf:"varint,18,opt,name=isHot,proto3" json:"isHot,omitempty"`
	//扣款周期天数,有这个值就周期扣款
	CycleDay int32 `protobuf:"varint,19,opt,name=cycleDay,proto3" json:"cycleDay,omitempty"`
	//描述
	Summary string `protobuf:"bytes,20,opt,name=summary,proto3" json:"summary,omitempty"`
	//备注
	Remark string `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,24,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,25,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,26,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,27,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,28,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelPayConfigReq) Reset() {
	*x = NovelPayConfigReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigReq) ProtoMessage() {}

func (x *NovelPayConfigReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigReq.ProtoReflect.Descriptor instead.
func (*NovelPayConfigReq) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{3}
}

func (x *NovelPayConfigReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelPayConfigReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *NovelPayConfigReq) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *NovelPayConfigReq) GetFirstPayment() int64 {
	if x != nil {
		return x.FirstPayment
	}
	return 0
}

func (x *NovelPayConfigReq) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *NovelPayConfigReq) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *NovelPayConfigReq) GetCfgType() string {
	if x != nil {
		return x.CfgType
	}
	return ""
}

func (x *NovelPayConfigReq) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *NovelPayConfigReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *NovelPayConfigReq) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *NovelPayConfigReq) GetCoinItem() int32 {
	if x != nil {
		return x.CoinItem
	}
	return 0
}

func (x *NovelPayConfigReq) GetCouponItem() int32 {
	if x != nil {
		return x.CouponItem
	}
	return 0
}

func (x *NovelPayConfigReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *NovelPayConfigReq) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *NovelPayConfigReq) GetIsSend() int32 {
	if x != nil {
		return x.IsSend
	}
	return 0
}

func (x *NovelPayConfigReq) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *NovelPayConfigReq) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *NovelPayConfigReq) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *NovelPayConfigReq) GetCycleDay() int32 {
	if x != nil {
		return x.CycleDay
	}
	return 0
}

func (x *NovelPayConfigReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *NovelPayConfigReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *NovelPayConfigReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *NovelPayConfigReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

func (x *NovelPayConfigReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelPayConfigReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelPayConfigReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelPayConfigReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelPayConfigReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type NovelPayConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *NovelPayConfigData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NovelPayConfigReply) Reset() {
	*x = NovelPayConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigReply) ProtoMessage() {}

func (x *NovelPayConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigReply.ProtoReflect.Descriptor instead.
func (*NovelPayConfigReply) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{4}
}

func (x *NovelPayConfigReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NovelPayConfigReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NovelPayConfigReply) GetResult() *NovelPayConfigData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建NovelPayConfig请求
type NovelPayConfigCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//谷歌商品ID
	ProductId string `protobuf:"bytes,1,opt,name=productId,proto3" json:"productId,omitempty"`
	//商品名称
	PaymentName string `protobuf:"bytes,2,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//首次充值金额
	FirstPayment int64 `protobuf:"varint,3,opt,name=firstPayment,proto3" json:"firstPayment,omitempty"`
	//充值金额:分
	Payment int64 `protobuf:"varint,4,opt,name=payment,proto3" json:"payment,omitempty"`
	//原价
	OriginalPrice int64 `protobuf:"varint,5,opt,name=originalPrice,proto3" json:"originalPrice,omitempty"`
	//配置类型,activity
	CfgType string `protobuf:"bytes,6,opt,name=cfgType,proto3" json:"cfgType,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,7,opt,name=coin,proto3" json:"coin,omitempty"`
	//货币类型
	Currency string `protobuf:"bytes,8,opt,name=currency,proto3" json:"currency,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,9,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//现金科目,查看asset_item表cash_flag=1
	CoinItem int32 `protobuf:"varint,10,opt,name=coinItem,proto3" json:"coinItem,omitempty"`
	//赠送科目,查看asset_item表cash_flag=0
	CouponItem int32 `protobuf:"varint,11,opt,name=couponItem,proto3" json:"couponItem,omitempty"`
	//排序
	Sort int32 `protobuf:"varint,12,opt,name=sort,proto3" json:"sort,omitempty"`
	//状态
	State bool `protobuf:"varint,13,opt,name=state,proto3" json:"state,omitempty"`
	//巨量引擎是否回传
	IsSend int32 `protobuf:"varint,14,opt,name=isSend,proto3" json:"isSend,omitempty"`
	//充值类型
	PayType int32 `protobuf:"varint,15,opt,name=payType,proto3" json:"payType,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,16,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//展示火
	IsHot bool `protobuf:"varint,17,opt,name=isHot,proto3" json:"isHot,omitempty"`
	//扣款周期天数,有这个值就周期扣款
	CycleDay int32 `protobuf:"varint,18,opt,name=cycleDay,proto3" json:"cycleDay,omitempty"`
	//描述
	Summary string `protobuf:"bytes,19,opt,name=summary,proto3" json:"summary,omitempty"`
	//备注
	Remark string `protobuf:"bytes,20,opt,name=remark,proto3" json:"remark,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
}

func (x *NovelPayConfigCreateReq) Reset() {
	*x = NovelPayConfigCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigCreateReq) ProtoMessage() {}

func (x *NovelPayConfigCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigCreateReq.ProtoReflect.Descriptor instead.
func (*NovelPayConfigCreateReq) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{5}
}

func (x *NovelPayConfigCreateReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *NovelPayConfigCreateReq) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *NovelPayConfigCreateReq) GetFirstPayment() int64 {
	if x != nil {
		return x.FirstPayment
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetCfgType() string {
	if x != nil {
		return x.CfgType
	}
	return ""
}

func (x *NovelPayConfigCreateReq) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *NovelPayConfigCreateReq) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetCoinItem() int32 {
	if x != nil {
		return x.CoinItem
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetCouponItem() int32 {
	if x != nil {
		return x.CouponItem
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *NovelPayConfigCreateReq) GetIsSend() int32 {
	if x != nil {
		return x.IsSend
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *NovelPayConfigCreateReq) GetCycleDay() int32 {
	if x != nil {
		return x.CycleDay
	}
	return 0
}

func (x *NovelPayConfigCreateReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *NovelPayConfigCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *NovelPayConfigCreateReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *NovelPayConfigCreateReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

// 创建NovelPayConfig返回
type NovelPayConfigCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *NovelPayConfigData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NovelPayConfigCreateReply) Reset() {
	*x = NovelPayConfigCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigCreateReply) ProtoMessage() {}

func (x *NovelPayConfigCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigCreateReply.ProtoReflect.Descriptor instead.
func (*NovelPayConfigCreateReply) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{6}
}

func (x *NovelPayConfigCreateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NovelPayConfigCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NovelPayConfigCreateReply) GetResult() *NovelPayConfigData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新NovelPayConfig请求
type NovelPayConfigUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//谷歌商品ID
	ProductId string `protobuf:"bytes,2,opt,name=productId,proto3" json:"productId,omitempty"`
	//商品名称
	PaymentName string `protobuf:"bytes,3,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//首次充值金额
	FirstPayment int64 `protobuf:"varint,4,opt,name=firstPayment,proto3" json:"firstPayment,omitempty"`
	//充值金额:分
	Payment int64 `protobuf:"varint,5,opt,name=payment,proto3" json:"payment,omitempty"`
	//原价
	OriginalPrice int64 `protobuf:"varint,6,opt,name=originalPrice,proto3" json:"originalPrice,omitempty"`
	//配置类型,activity
	CfgType string `protobuf:"bytes,7,opt,name=cfgType,proto3" json:"cfgType,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,8,opt,name=coin,proto3" json:"coin,omitempty"`
	//货币类型
	Currency string `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,10,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//现金科目,查看asset_item表cash_flag=1
	CoinItem int32 `protobuf:"varint,11,opt,name=coinItem,proto3" json:"coinItem,omitempty"`
	//赠送科目,查看asset_item表cash_flag=0
	CouponItem int32 `protobuf:"varint,12,opt,name=couponItem,proto3" json:"couponItem,omitempty"`
	//排序
	Sort int32 `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	//状态
	State bool `protobuf:"varint,14,opt,name=state,proto3" json:"state,omitempty"`
	//巨量引擎是否回传
	IsSend int32 `protobuf:"varint,15,opt,name=isSend,proto3" json:"isSend,omitempty"`
	//充值类型
	PayType int32 `protobuf:"varint,16,opt,name=payType,proto3" json:"payType,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,17,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//展示火
	IsHot bool `protobuf:"varint,18,opt,name=isHot,proto3" json:"isHot,omitempty"`
	//扣款周期天数,有这个值就周期扣款
	CycleDay int32 `protobuf:"varint,19,opt,name=cycleDay,proto3" json:"cycleDay,omitempty"`
	//描述
	Summary string `protobuf:"bytes,20,opt,name=summary,proto3" json:"summary,omitempty"`
	//备注
	Remark string `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
}

func (x *NovelPayConfigUpdateReq) Reset() {
	*x = NovelPayConfigUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigUpdateReq) ProtoMessage() {}

func (x *NovelPayConfigUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigUpdateReq.ProtoReflect.Descriptor instead.
func (*NovelPayConfigUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{7}
}

func (x *NovelPayConfigUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *NovelPayConfigUpdateReq) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *NovelPayConfigUpdateReq) GetFirstPayment() int64 {
	if x != nil {
		return x.FirstPayment
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetCfgType() string {
	if x != nil {
		return x.CfgType
	}
	return ""
}

func (x *NovelPayConfigUpdateReq) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *NovelPayConfigUpdateReq) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetCoinItem() int32 {
	if x != nil {
		return x.CoinItem
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetCouponItem() int32 {
	if x != nil {
		return x.CouponItem
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetState() bool {
	if x != nil {
		return x.State
	}
	return false
}

func (x *NovelPayConfigUpdateReq) GetIsSend() int32 {
	if x != nil {
		return x.IsSend
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetIsHot() bool {
	if x != nil {
		return x.IsHot
	}
	return false
}

func (x *NovelPayConfigUpdateReq) GetCycleDay() int32 {
	if x != nil {
		return x.CycleDay
	}
	return 0
}

func (x *NovelPayConfigUpdateReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *NovelPayConfigUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *NovelPayConfigUpdateReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *NovelPayConfigUpdateReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

// 更新NovelPayConfig返回
type NovelPayConfigUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *NovelPayConfigData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NovelPayConfigUpdateReply) Reset() {
	*x = NovelPayConfigUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigUpdateReply) ProtoMessage() {}

func (x *NovelPayConfigUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigUpdateReply.ProtoReflect.Descriptor instead.
func (*NovelPayConfigUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{8}
}

func (x *NovelPayConfigUpdateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NovelPayConfigUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NovelPayConfigUpdateReply) GetResult() *NovelPayConfigData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除NovelPayConfig请求
type NovelPayConfigDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NovelPayConfigDeleteReq) Reset() {
	*x = NovelPayConfigDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigDeleteReq) ProtoMessage() {}

func (x *NovelPayConfigDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigDeleteReq.ProtoReflect.Descriptor instead.
func (*NovelPayConfigDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{9}
}

func (x *NovelPayConfigDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除NovelPayConfig请求
type NovelPayConfigBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *NovelPayConfigBatchDeleteReq) Reset() {
	*x = NovelPayConfigBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigBatchDeleteReq) ProtoMessage() {}

func (x *NovelPayConfigBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*NovelPayConfigBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{10}
}

func (x *NovelPayConfigBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除NovelPayConfig返回
type NovelPayConfigDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NovelPayConfigDeleteReply) Reset() {
	*x = NovelPayConfigDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelPayConfigDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelPayConfigDeleteReply) ProtoMessage() {}

func (x *NovelPayConfigDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelPayConfigDeleteReply.ProtoReflect.Descriptor instead.
func (*NovelPayConfigDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP(), []int{11}
}

func (x *NovelPayConfigDeleteReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *NovelPayConfigDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NovelPayConfigDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_param_novelpayconfig_v1_novel_pay_config_proto protoreflect.FileDescriptor

var file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDesc = []byte{
	0x0a, 0x32, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2f, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x82, 0x07, 0x0a, 0x12, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50,
	0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x66, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x66, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e,
	0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x65,
	0x6e, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x44, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x7c, 0x0a, 0x15, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x3a, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x9a, 0x01, 0x0a, 0x17, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70,
	0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x81, 0x07, 0x0a, 0x11, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50,
	0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x66, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x66, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6e,
	0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x44, 0x61, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x79, 0x63,
	0x6c, 0x65, 0x44, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xaf,
	0x05, 0x0a, 0x17, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x66, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x66, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x44, 0x61, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x79, 0x63, 0x6c,
	0x65, 0x44, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x88, 0x01, 0x0a, 0x19, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbf, 0x05, 0x0a, 0x17,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x66, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x66,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x73, 0x48, 0x6f, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x69, 0x73, 0x48, 0x6f, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61,
	0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x44, 0x61,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x88, 0x01,
	0x0a, 0x19, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x29, 0x0a, 0x17, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x30, 0x0a, 0x1c, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03,
	0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x61, 0x0a, 0x19, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x88, 0x07, 0x0a, 0x0e, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x90, 0x01, 0x0a, 0x15,
	0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x28, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70, 0x61, 0x79,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50,
	0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x2a, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x70,
	0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x84,
	0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x24, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70, 0x61, 0x79, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x96, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a,
	0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e,
	0x1a, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x70, 0x61, 0x79, 0x2f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x91,
	0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61,
	0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70,
	0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x3a,
	0x01, 0x2a, 0x12, 0x93, 0x01, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a, 0x2e, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70,
	0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x98, 0x01, 0x0a, 0x19, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2f, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70, 0x61,
	0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c,
	0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70,
	0x61, 0x79, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x50, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f,
	0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x42, 0x25, 0x5a, 0x23, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x70, 0x61, 0x79, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescOnce sync.Once
	file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescData = file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDesc
)

func file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescGZIP() []byte {
	file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescOnce.Do(func() {
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescData)
	})
	return file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDescData
}

var file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_param_novelpayconfig_v1_novel_pay_config_proto_goTypes = []interface{}{
	(*NovelPayConfigData)(nil),           // 0: novelpayconfig.v1.NovelPayConfigData
	(*NovelPayConfigPageReq)(nil),        // 1: novelpayconfig.v1.NovelPayConfigPageReq
	(*NovelPayConfigPageReply)(nil),      // 2: novelpayconfig.v1.NovelPayConfigPageReply
	(*NovelPayConfigReq)(nil),            // 3: novelpayconfig.v1.NovelPayConfigReq
	(*NovelPayConfigReply)(nil),          // 4: novelpayconfig.v1.NovelPayConfigReply
	(*NovelPayConfigCreateReq)(nil),      // 5: novelpayconfig.v1.NovelPayConfigCreateReq
	(*NovelPayConfigCreateReply)(nil),    // 6: novelpayconfig.v1.NovelPayConfigCreateReply
	(*NovelPayConfigUpdateReq)(nil),      // 7: novelpayconfig.v1.NovelPayConfigUpdateReq
	(*NovelPayConfigUpdateReply)(nil),    // 8: novelpayconfig.v1.NovelPayConfigUpdateReply
	(*NovelPayConfigDeleteReq)(nil),      // 9: novelpayconfig.v1.NovelPayConfigDeleteReq
	(*NovelPayConfigBatchDeleteReq)(nil), // 10: novelpayconfig.v1.NovelPayConfigBatchDeleteReq
	(*NovelPayConfigDeleteReply)(nil),    // 11: novelpayconfig.v1.NovelPayConfigDeleteReply
	(*timestamppb.Timestamp)(nil),        // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),             // 13: pagin.Pagination
}
var file_api_param_novelpayconfig_v1_novel_pay_config_proto_depIdxs = []int32{
	12, // 0: novelpayconfig.v1.NovelPayConfigData.effectTime:type_name -> google.protobuf.Timestamp
	12, // 1: novelpayconfig.v1.NovelPayConfigData.expiredTime:type_name -> google.protobuf.Timestamp
	12, // 2: novelpayconfig.v1.NovelPayConfigData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 3: novelpayconfig.v1.NovelPayConfigData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 4: novelpayconfig.v1.NovelPayConfigPageReq.pagin:type_name -> pagin.Pagination
	3,  // 5: novelpayconfig.v1.NovelPayConfigPageReq.param:type_name -> novelpayconfig.v1.NovelPayConfigReq
	0,  // 6: novelpayconfig.v1.NovelPayConfigPageReply.items:type_name -> novelpayconfig.v1.NovelPayConfigData
	12, // 7: novelpayconfig.v1.NovelPayConfigReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 8: novelpayconfig.v1.NovelPayConfigReq.expiredTime:type_name -> google.protobuf.Timestamp
	12, // 9: novelpayconfig.v1.NovelPayConfigReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 10: novelpayconfig.v1.NovelPayConfigReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 11: novelpayconfig.v1.NovelPayConfigReply.result:type_name -> novelpayconfig.v1.NovelPayConfigData
	12, // 12: novelpayconfig.v1.NovelPayConfigCreateReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 13: novelpayconfig.v1.NovelPayConfigCreateReq.expiredTime:type_name -> google.protobuf.Timestamp
	0,  // 14: novelpayconfig.v1.NovelPayConfigCreateReply.result:type_name -> novelpayconfig.v1.NovelPayConfigData
	12, // 15: novelpayconfig.v1.NovelPayConfigUpdateReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 16: novelpayconfig.v1.NovelPayConfigUpdateReq.expiredTime:type_name -> google.protobuf.Timestamp
	0,  // 17: novelpayconfig.v1.NovelPayConfigUpdateReply.result:type_name -> novelpayconfig.v1.NovelPayConfigData
	1,  // 18: novelpayconfig.v1.NovelPayConfig.GetPageNovelPayConfig:input_type -> novelpayconfig.v1.NovelPayConfigPageReq
	3,  // 19: novelpayconfig.v1.NovelPayConfig.GetNovelPayConfig:input_type -> novelpayconfig.v1.NovelPayConfigReq
	7,  // 20: novelpayconfig.v1.NovelPayConfig.UpdateNovelPayConfig:input_type -> novelpayconfig.v1.NovelPayConfigUpdateReq
	5,  // 21: novelpayconfig.v1.NovelPayConfig.CreateNovelPayConfig:input_type -> novelpayconfig.v1.NovelPayConfigCreateReq
	9,  // 22: novelpayconfig.v1.NovelPayConfig.DeleteNovelPayConfig:input_type -> novelpayconfig.v1.NovelPayConfigDeleteReq
	10, // 23: novelpayconfig.v1.NovelPayConfig.BatchDeleteNovelPayConfig:input_type -> novelpayconfig.v1.NovelPayConfigBatchDeleteReq
	2,  // 24: novelpayconfig.v1.NovelPayConfig.GetPageNovelPayConfig:output_type -> novelpayconfig.v1.NovelPayConfigPageReply
	4,  // 25: novelpayconfig.v1.NovelPayConfig.GetNovelPayConfig:output_type -> novelpayconfig.v1.NovelPayConfigReply
	8,  // 26: novelpayconfig.v1.NovelPayConfig.UpdateNovelPayConfig:output_type -> novelpayconfig.v1.NovelPayConfigUpdateReply
	6,  // 27: novelpayconfig.v1.NovelPayConfig.CreateNovelPayConfig:output_type -> novelpayconfig.v1.NovelPayConfigCreateReply
	11, // 28: novelpayconfig.v1.NovelPayConfig.DeleteNovelPayConfig:output_type -> novelpayconfig.v1.NovelPayConfigDeleteReply
	11, // 29: novelpayconfig.v1.NovelPayConfig.BatchDeleteNovelPayConfig:output_type -> novelpayconfig.v1.NovelPayConfigDeleteReply
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_param_novelpayconfig_v1_novel_pay_config_proto_init() }
func file_api_param_novelpayconfig_v1_novel_pay_config_proto_init() {
	if File_api_param_novelpayconfig_v1_novel_pay_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelPayConfigDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_param_novelpayconfig_v1_novel_pay_config_proto_goTypes,
		DependencyIndexes: file_api_param_novelpayconfig_v1_novel_pay_config_proto_depIdxs,
		MessageInfos:      file_api_param_novelpayconfig_v1_novel_pay_config_proto_msgTypes,
	}.Build()
	File_api_param_novelpayconfig_v1_novel_pay_config_proto = out.File
	file_api_param_novelpayconfig_v1_novel_pay_config_proto_rawDesc = nil
	file_api_param_novelpayconfig_v1_novel_pay_config_proto_goTypes = nil
	file_api_param_novelpayconfig_v1_novel_pay_config_proto_depIdxs = nil
}
