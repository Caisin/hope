// Code generated by Caisin. DO NOT EDIT.
// source: apps/novel/internal/data/ent/schema/novel_classify.go

package convert

import (
	"google.golang.org/protobuf/types/known/timestamppb"
	v1 "hope/api/novel/novelclassify/v1"
	"hope/apps/novel/internal/data/ent"
)

func NovelClassifyUpdateReq2Data(v *v1.NovelClassifyUpdateReq) *ent.NovelClassify {
	if v == nil {
		return nil
	}
	return &ent.NovelClassify{
		ID:           v.Id,
		Pid:          v.Pid,
		ClassifyName: v.ClassifyName,
		Status:       v.Status,
		OrderNum:     v.OrderNum,
	}
}

func NovelClassifyData2UpdateReq(v *ent.NovelClassify) *v1.NovelClassifyUpdateReq {
	if v == nil {
		return nil
	}
	return &v1.NovelClassifyUpdateReq{
		Id:           v.ID,
		Pid:          v.Pid,
		ClassifyName: v.ClassifyName,
		Status:       v.Status,
		OrderNum:     v.OrderNum,
	}
}

func NovelClassifyCreateReq2Data(v *v1.NovelClassifyCreateReq) *ent.NovelClassify {
	if v == nil {
		return nil
	}
	return &ent.NovelClassify{
		Pid:          v.Pid,
		ClassifyName: v.ClassifyName,
		Status:       v.Status,
		OrderNum:     v.OrderNum,
	}
}

func NovelClassifyData2CreateReq(v *ent.NovelClassify) *v1.NovelClassifyCreateReq {
	if v == nil {
		return nil
	}
	return &v1.NovelClassifyCreateReq{
		Pid:          v.Pid,
		ClassifyName: v.ClassifyName,
		Status:       v.Status,
		OrderNum:     v.OrderNum,
	}
}

func NovelClassifyReq2Data(v *v1.NovelClassifyReq) *ent.NovelClassify {
	if v == nil {
		return nil
	}
	return &ent.NovelClassify{
		Pid:          v.Pid,
		ClassifyName: v.ClassifyName,
		Status:       v.Status,
		OrderNum:     v.OrderNum,
	}
}

func NovelClassifyData2Req(v *ent.NovelClassify) *v1.NovelClassifyReq {
	if v == nil {
		return nil
	}
	return &v1.NovelClassifyReq{
		Pid:          v.Pid,
		ClassifyName: v.ClassifyName,
		Status:       v.Status,
		OrderNum:     v.OrderNum,
	}
}

func NovelClassifyData2Reply(v *ent.NovelClassify) *v1.NovelClassifyData {
	if v == nil {
		return nil
	}
	return &v1.NovelClassifyData{
		Id:           v.ID,
		Pid:          v.Pid,
		ClassifyName: v.ClassifyName,
		Status:       v.Status,
		OrderNum:     v.OrderNum,
		Remark:       v.Remark,
		CreatedAt:    timestamppb.New(v.CreatedAt),
		UpdatedAt:    timestamppb.New(v.UpdatedAt),
		CreateBy:     v.CreateBy,
		UpdateBy:     v.UpdateBy,
		TenantId:     v.TenantId,
	}
}
