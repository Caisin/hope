// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/novel/assetitem/v1/asset_item.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type AssetItemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//账本科目
	AssetItemId int32 `protobuf:"varint,2,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//账本名称
	AssetName string `protobuf:"bytes,3,opt,name=assetName,proto3" json:"assetName,omitempty"`
	//现金标记,0书券1现金
	CashTag int32 `protobuf:"varint,4,opt,name=cashTag,proto3" json:"cashTag,omitempty"`
	//有效天数
	ValidDays int32 `protobuf:"varint,5,opt,name=validDays,proto3" json:"validDays,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,12,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *AssetItemData) Reset() {
	*x = AssetItemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemData) ProtoMessage() {}

func (x *AssetItemData) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemData.ProtoReflect.Descriptor instead.
func (*AssetItemData) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{0}
}

func (x *AssetItemData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssetItemData) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *AssetItemData) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *AssetItemData) GetCashTag() int32 {
	if x != nil {
		return x.CashTag
	}
	return 0
}

func (x *AssetItemData) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

func (x *AssetItemData) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *AssetItemData) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

func (x *AssetItemData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AssetItemData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AssetItemData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *AssetItemData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *AssetItemData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type AssetItemPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *AssetItemReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *AssetItemPageReq) Reset() {
	*x = AssetItemPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemPageReq) ProtoMessage() {}

func (x *AssetItemPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemPageReq.ProtoReflect.Descriptor instead.
func (*AssetItemPageReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{1}
}

func (x *AssetItemPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *AssetItemPageReq) GetParam() *AssetItemReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type AssetItemPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*AssetItemData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AssetItemPageReply) Reset() {
	*x = AssetItemPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemPageReply) ProtoMessage() {}

func (x *AssetItemPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemPageReply.ProtoReflect.Descriptor instead.
func (*AssetItemPageReply) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{2}
}

func (x *AssetItemPageReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AssetItemPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AssetItemPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AssetItemPageReply) GetItems() []*AssetItemData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type AssetItemReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//账本科目
	AssetItemId int32 `protobuf:"varint,2,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//账本名称
	AssetName string `protobuf:"bytes,3,opt,name=assetName,proto3" json:"assetName,omitempty"`
	//现金标记,0书券1现金
	CashTag int32 `protobuf:"varint,4,opt,name=cashTag,proto3" json:"cashTag,omitempty"`
	//有效天数
	ValidDays int32 `protobuf:"varint,5,opt,name=validDays,proto3" json:"validDays,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,12,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *AssetItemReq) Reset() {
	*x = AssetItemReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemReq) ProtoMessage() {}

func (x *AssetItemReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemReq.ProtoReflect.Descriptor instead.
func (*AssetItemReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{3}
}

func (x *AssetItemReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssetItemReq) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *AssetItemReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *AssetItemReq) GetCashTag() int32 {
	if x != nil {
		return x.CashTag
	}
	return 0
}

func (x *AssetItemReq) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

func (x *AssetItemReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *AssetItemReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

func (x *AssetItemReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *AssetItemReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *AssetItemReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *AssetItemReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *AssetItemReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type AssetItemReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *AssetItemData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AssetItemReply) Reset() {
	*x = AssetItemReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemReply) ProtoMessage() {}

func (x *AssetItemReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemReply.ProtoReflect.Descriptor instead.
func (*AssetItemReply) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{4}
}

func (x *AssetItemReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AssetItemReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AssetItemReply) GetResult() *AssetItemData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建AssetItem请求
type AssetItemCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//账本科目
	AssetItemId int32 `protobuf:"varint,1,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//账本名称
	AssetName string `protobuf:"bytes,2,opt,name=assetName,proto3" json:"assetName,omitempty"`
	//现金标记,0书券1现金
	CashTag int32 `protobuf:"varint,3,opt,name=cashTag,proto3" json:"cashTag,omitempty"`
	//有效天数
	ValidDays int32 `protobuf:"varint,4,opt,name=validDays,proto3" json:"validDays,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
}

func (x *AssetItemCreateReq) Reset() {
	*x = AssetItemCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemCreateReq) ProtoMessage() {}

func (x *AssetItemCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemCreateReq.ProtoReflect.Descriptor instead.
func (*AssetItemCreateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{5}
}

func (x *AssetItemCreateReq) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *AssetItemCreateReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *AssetItemCreateReq) GetCashTag() int32 {
	if x != nil {
		return x.CashTag
	}
	return 0
}

func (x *AssetItemCreateReq) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

func (x *AssetItemCreateReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *AssetItemCreateReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

// 创建AssetItem返回
type AssetItemCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *AssetItemData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AssetItemCreateReply) Reset() {
	*x = AssetItemCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemCreateReply) ProtoMessage() {}

func (x *AssetItemCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemCreateReply.ProtoReflect.Descriptor instead.
func (*AssetItemCreateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{6}
}

func (x *AssetItemCreateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AssetItemCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AssetItemCreateReply) GetResult() *AssetItemData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新AssetItem请求
type AssetItemUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//账本科目
	AssetItemId int32 `protobuf:"varint,2,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//账本名称
	AssetName string `protobuf:"bytes,3,opt,name=assetName,proto3" json:"assetName,omitempty"`
	//现金标记,0书券1现金
	CashTag int32 `protobuf:"varint,4,opt,name=cashTag,proto3" json:"cashTag,omitempty"`
	//有效天数
	ValidDays int32 `protobuf:"varint,5,opt,name=validDays,proto3" json:"validDays,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
}

func (x *AssetItemUpdateReq) Reset() {
	*x = AssetItemUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemUpdateReq) ProtoMessage() {}

func (x *AssetItemUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemUpdateReq.ProtoReflect.Descriptor instead.
func (*AssetItemUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{7}
}

func (x *AssetItemUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AssetItemUpdateReq) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *AssetItemUpdateReq) GetAssetName() string {
	if x != nil {
		return x.AssetName
	}
	return ""
}

func (x *AssetItemUpdateReq) GetCashTag() int32 {
	if x != nil {
		return x.CashTag
	}
	return 0
}

func (x *AssetItemUpdateReq) GetValidDays() int32 {
	if x != nil {
		return x.ValidDays
	}
	return 0
}

func (x *AssetItemUpdateReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *AssetItemUpdateReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

// 更新AssetItem返回
type AssetItemUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *AssetItemData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AssetItemUpdateReply) Reset() {
	*x = AssetItemUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemUpdateReply) ProtoMessage() {}

func (x *AssetItemUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemUpdateReply.ProtoReflect.Descriptor instead.
func (*AssetItemUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{8}
}

func (x *AssetItemUpdateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AssetItemUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AssetItemUpdateReply) GetResult() *AssetItemData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除AssetItem请求
type AssetItemDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AssetItemDeleteReq) Reset() {
	*x = AssetItemDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemDeleteReq) ProtoMessage() {}

func (x *AssetItemDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemDeleteReq.ProtoReflect.Descriptor instead.
func (*AssetItemDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{9}
}

func (x *AssetItemDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除AssetItem请求
type AssetItemBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *AssetItemBatchDeleteReq) Reset() {
	*x = AssetItemBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemBatchDeleteReq) ProtoMessage() {}

func (x *AssetItemBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*AssetItemBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{10}
}

func (x *AssetItemBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除AssetItem返回
type AssetItemDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *AssetItemDeleteReply) Reset() {
	*x = AssetItemDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssetItemDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssetItemDeleteReply) ProtoMessage() {}

func (x *AssetItemDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_assetitem_v1_asset_item_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssetItemDeleteReply.ProtoReflect.Descriptor instead.
func (*AssetItemDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP(), []int{11}
}

func (x *AssetItemDeleteReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AssetItemDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AssetItemDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_novel_assetitem_v1_asset_item_proto protoreflect.FileDescriptor

var file_api_novel_assetitem_v1_asset_item_proto_rawDesc = []byte{
	0x0a, 0x27, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x03, 0x0a, 0x0d, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x68, 0x54,
	0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61, 0x73, 0x68, 0x54, 0x61,
	0x67, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12,
	0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x6d, 0x0a, 0x10, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x30,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x22, 0x8b, 0x01, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd8,
	0x03, 0x0a, 0x0c, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x68, 0x54, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x63, 0x61, 0x73, 0x68, 0x54, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x0e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x86,
	0x02, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x73, 0x68, 0x54, 0x61, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61, 0x73, 0x68, 0x54, 0x61, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x14, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x96, 0x02, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x73,
	0x68, 0x54, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61, 0x73, 0x68,
	0x54, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x79, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x44, 0x61, 0x79,
	0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a,
	0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x79, 0x0a, 0x14, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x24, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x17,
	0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x5c, 0x0a, 0x14, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xc3, 0x05, 0x0a, 0x09, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x71, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x73, 0x73, 0x65,
	0x74, 0x49, 0x74, 0x65, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x61, 0x73, 0x73, 0x65,
	0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x69,
	0x74, 0x65, 0x6d, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x65, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x77, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x20, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x1a, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x69, 0x74, 0x65, 0x6d,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x72, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x20, 0x2e, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x3a, 0x01, 0x2a, 0x12, 0x74, 0x0a, 0x0f,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x20, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x79, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x25, 0x2e, 0x61, 0x73, 0x73,
	0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x2a, 0x0e, 0x2f,
	0x76, 0x31, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2f, 0x69, 0x74, 0x65, 0x6d, 0x42, 0x20, 0x5a,
	0x1e, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x69, 0x74, 0x65, 0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_novel_assetitem_v1_asset_item_proto_rawDescOnce sync.Once
	file_api_novel_assetitem_v1_asset_item_proto_rawDescData = file_api_novel_assetitem_v1_asset_item_proto_rawDesc
)

func file_api_novel_assetitem_v1_asset_item_proto_rawDescGZIP() []byte {
	file_api_novel_assetitem_v1_asset_item_proto_rawDescOnce.Do(func() {
		file_api_novel_assetitem_v1_asset_item_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_novel_assetitem_v1_asset_item_proto_rawDescData)
	})
	return file_api_novel_assetitem_v1_asset_item_proto_rawDescData
}

var file_api_novel_assetitem_v1_asset_item_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_novel_assetitem_v1_asset_item_proto_goTypes = []interface{}{
	(*AssetItemData)(nil),           // 0: assetitem.v1.AssetItemData
	(*AssetItemPageReq)(nil),        // 1: assetitem.v1.AssetItemPageReq
	(*AssetItemPageReply)(nil),      // 2: assetitem.v1.AssetItemPageReply
	(*AssetItemReq)(nil),            // 3: assetitem.v1.AssetItemReq
	(*AssetItemReply)(nil),          // 4: assetitem.v1.AssetItemReply
	(*AssetItemCreateReq)(nil),      // 5: assetitem.v1.AssetItemCreateReq
	(*AssetItemCreateReply)(nil),    // 6: assetitem.v1.AssetItemCreateReply
	(*AssetItemUpdateReq)(nil),      // 7: assetitem.v1.AssetItemUpdateReq
	(*AssetItemUpdateReply)(nil),    // 8: assetitem.v1.AssetItemUpdateReply
	(*AssetItemDeleteReq)(nil),      // 9: assetitem.v1.AssetItemDeleteReq
	(*AssetItemBatchDeleteReq)(nil), // 10: assetitem.v1.AssetItemBatchDeleteReq
	(*AssetItemDeleteReply)(nil),    // 11: assetitem.v1.AssetItemDeleteReply
	(*timestamppb.Timestamp)(nil),   // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),        // 13: pagin.Pagination
}
var file_api_novel_assetitem_v1_asset_item_proto_depIdxs = []int32{
	12, // 0: assetitem.v1.AssetItemData.effectTime:type_name -> google.protobuf.Timestamp
	12, // 1: assetitem.v1.AssetItemData.expiredTime:type_name -> google.protobuf.Timestamp
	12, // 2: assetitem.v1.AssetItemData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 3: assetitem.v1.AssetItemData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 4: assetitem.v1.AssetItemPageReq.pagin:type_name -> pagin.Pagination
	3,  // 5: assetitem.v1.AssetItemPageReq.param:type_name -> assetitem.v1.AssetItemReq
	0,  // 6: assetitem.v1.AssetItemPageReply.items:type_name -> assetitem.v1.AssetItemData
	12, // 7: assetitem.v1.AssetItemReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 8: assetitem.v1.AssetItemReq.expiredTime:type_name -> google.protobuf.Timestamp
	12, // 9: assetitem.v1.AssetItemReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 10: assetitem.v1.AssetItemReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 11: assetitem.v1.AssetItemReply.result:type_name -> assetitem.v1.AssetItemData
	12, // 12: assetitem.v1.AssetItemCreateReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 13: assetitem.v1.AssetItemCreateReq.expiredTime:type_name -> google.protobuf.Timestamp
	0,  // 14: assetitem.v1.AssetItemCreateReply.result:type_name -> assetitem.v1.AssetItemData
	12, // 15: assetitem.v1.AssetItemUpdateReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 16: assetitem.v1.AssetItemUpdateReq.expiredTime:type_name -> google.protobuf.Timestamp
	0,  // 17: assetitem.v1.AssetItemUpdateReply.result:type_name -> assetitem.v1.AssetItemData
	1,  // 18: assetitem.v1.AssetItem.GetAssetItemPage:input_type -> assetitem.v1.AssetItemPageReq
	3,  // 19: assetitem.v1.AssetItem.GetAssetItem:input_type -> assetitem.v1.AssetItemReq
	7,  // 20: assetitem.v1.AssetItem.UpdateAssetItem:input_type -> assetitem.v1.AssetItemUpdateReq
	5,  // 21: assetitem.v1.AssetItem.CreateAssetItem:input_type -> assetitem.v1.AssetItemCreateReq
	9,  // 22: assetitem.v1.AssetItem.DeleteAssetItem:input_type -> assetitem.v1.AssetItemDeleteReq
	10, // 23: assetitem.v1.AssetItem.BatchDeleteAssetItem:input_type -> assetitem.v1.AssetItemBatchDeleteReq
	2,  // 24: assetitem.v1.AssetItem.GetAssetItemPage:output_type -> assetitem.v1.AssetItemPageReply
	4,  // 25: assetitem.v1.AssetItem.GetAssetItem:output_type -> assetitem.v1.AssetItemReply
	8,  // 26: assetitem.v1.AssetItem.UpdateAssetItem:output_type -> assetitem.v1.AssetItemUpdateReply
	6,  // 27: assetitem.v1.AssetItem.CreateAssetItem:output_type -> assetitem.v1.AssetItemCreateReply
	11, // 28: assetitem.v1.AssetItem.DeleteAssetItem:output_type -> assetitem.v1.AssetItemDeleteReply
	11, // 29: assetitem.v1.AssetItem.BatchDeleteAssetItem:output_type -> assetitem.v1.AssetItemDeleteReply
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_novel_assetitem_v1_asset_item_proto_init() }
func file_api_novel_assetitem_v1_asset_item_proto_init() {
	if File_api_novel_assetitem_v1_asset_item_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_assetitem_v1_asset_item_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssetItemDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_novel_assetitem_v1_asset_item_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_novel_assetitem_v1_asset_item_proto_goTypes,
		DependencyIndexes: file_api_novel_assetitem_v1_asset_item_proto_depIdxs,
		MessageInfos:      file_api_novel_assetitem_v1_asset_item_proto_msgTypes,
	}.Build()
	File_api_novel_assetitem_v1_asset_item_proto = out.File
	file_api_novel_assetitem_v1_asset_item_proto_rawDesc = nil
	file_api_novel_assetitem_v1_asset_item_proto_goTypes = nil
	file_api_novel_assetitem_v1_asset_item_proto_depIdxs = nil
}
