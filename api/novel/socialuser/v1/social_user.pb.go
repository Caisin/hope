// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/novel/socialuser/v1/social_user.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type SocialUserPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *SocialUserReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *SocialUserPageReq) Reset() {
	*x = SocialUserPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUserPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUserPageReq) ProtoMessage() {}

func (x *SocialUserPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUserPageReq.ProtoReflect.Descriptor instead.
func (*SocialUserPageReq) Descriptor() ([]byte, []int) {
	return file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP(), []int{0}
}

func (x *SocialUserPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SocialUserPageReq) GetParam() *SocialUserReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type SocialUserPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*SocialUserReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SocialUserPageReply) Reset() {
	*x = SocialUserPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUserPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUserPageReply) ProtoMessage() {}

func (x *SocialUserPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUserPageReply.ProtoReflect.Descriptor instead.
func (*SocialUserPageReply) Descriptor() ([]byte, []int) {
	return file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP(), []int{1}
}

func (x *SocialUserPageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SocialUserPageReply) GetItems() []*SocialUserReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type SocialUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//注册渠道
	ChId int64 `protobuf:"varint,2,opt,name=chId,proto3" json:"chId,omitempty"`
	//只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段
	Unionid string `protobuf:"bytes,3,opt,name=unionid,proto3" json:"unionid,omitempty"`
	//第三方登录token
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	//用户的标识，对当前公众号唯一
	Openid string `protobuf:"bytes,5,opt,name=openid,proto3" json:"openid,omitempty"`
	//小程序唯一身份ID
	RoutineOpenid string `protobuf:"bytes,6,opt,name=routineOpenid,proto3" json:"routineOpenid,omitempty"`
	//用户名
	UserName string `protobuf:"bytes,7,opt,name=userName,proto3" json:"userName,omitempty"`
	//用户的昵称
	NickName string `protobuf:"bytes,8,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//生日
	Birthday *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`
	//手机
	Phone string `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty"`
	//邮箱
	Email string `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	//密码
	Password string `protobuf:"bytes,12,opt,name=password,proto3" json:"password,omitempty"`
	//用户头像
	Avatar string `protobuf:"bytes,13,opt,name=avatar,proto3" json:"avatar,omitempty"`
	//用户的性别，值为1时是男性，值为2时是女性，值为0时是未知
	Sex int32 `protobuf:"varint,14,opt,name=sex,proto3" json:"sex,omitempty"`
	//用户所在城市区域
	Region string `protobuf:"bytes,15,opt,name=region,proto3" json:"region,omitempty"`
	//用户所在城市
	City string `protobuf:"bytes,16,opt,name=city,proto3" json:"city,omitempty"`
	//用户的语言，简体中文为zh_CN
	Language string `protobuf:"bytes,17,opt,name=language,proto3" json:"language,omitempty"`
	//用户所在省份
	Province string `protobuf:"bytes,18,opt,name=province,proto3" json:"province,omitempty"`
	//用户所在国家
	Country string `protobuf:"bytes,19,opt,name=country,proto3" json:"country,omitempty"`
	//个性签名
	Signature string `protobuf:"bytes,20,opt,name=signature,proto3" json:"signature,omitempty"`
	//公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
	Remark string `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	//用户所在的分组ID（兼容旧的用户分组接口）
	Groupid int32 `protobuf:"varint,22,opt,name=groupid,proto3" json:"groupid,omitempty"`
	//用户被打上的标签ID列表
	TagidList string `protobuf:"bytes,23,opt,name=tagidList,proto3" json:"tagidList,omitempty"`
	//用户是否订阅该公众号标识
	Subscribe int32 `protobuf:"varint,24,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	//关注公众号时间
	SubscribeTime int32 `protobuf:"varint,25,opt,name=subscribeTime,proto3" json:"subscribeTime,omitempty"`
	//小程序用户会话密匙
	SessionKey string `protobuf:"bytes,26,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
	//用户类型
	UserType string `protobuf:"bytes,27,opt,name=userType,proto3" json:"userType,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,28,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,29,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,30,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,31,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,32,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SocialUserReq) Reset() {
	*x = SocialUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUserReq) ProtoMessage() {}

func (x *SocialUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUserReq.ProtoReflect.Descriptor instead.
func (*SocialUserReq) Descriptor() ([]byte, []int) {
	return file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP(), []int{2}
}

func (x *SocialUserReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SocialUserReq) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *SocialUserReq) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *SocialUserReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SocialUserReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *SocialUserReq) GetRoutineOpenid() string {
	if x != nil {
		return x.RoutineOpenid
	}
	return ""
}

func (x *SocialUserReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SocialUserReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SocialUserReq) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *SocialUserReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SocialUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SocialUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SocialUserReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SocialUserReq) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SocialUserReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SocialUserReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SocialUserReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SocialUserReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *SocialUserReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SocialUserReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SocialUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SocialUserReq) GetGroupid() int32 {
	if x != nil {
		return x.Groupid
	}
	return 0
}

func (x *SocialUserReq) GetTagidList() string {
	if x != nil {
		return x.TagidList
	}
	return ""
}

func (x *SocialUserReq) GetSubscribe() int32 {
	if x != nil {
		return x.Subscribe
	}
	return 0
}

func (x *SocialUserReq) GetSubscribeTime() int32 {
	if x != nil {
		return x.SubscribeTime
	}
	return 0
}

func (x *SocialUserReq) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *SocialUserReq) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *SocialUserReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SocialUserReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SocialUserReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SocialUserReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SocialUserReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type SocialUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//注册渠道
	ChId int64 `protobuf:"varint,2,opt,name=chId,proto3" json:"chId,omitempty"`
	//只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段
	Unionid string `protobuf:"bytes,3,opt,name=unionid,proto3" json:"unionid,omitempty"`
	//第三方登录token
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	//用户的标识，对当前公众号唯一
	Openid string `protobuf:"bytes,5,opt,name=openid,proto3" json:"openid,omitempty"`
	//小程序唯一身份ID
	RoutineOpenid string `protobuf:"bytes,6,opt,name=routineOpenid,proto3" json:"routineOpenid,omitempty"`
	//用户名
	UserName string `protobuf:"bytes,7,opt,name=userName,proto3" json:"userName,omitempty"`
	//用户的昵称
	NickName string `protobuf:"bytes,8,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//生日
	Birthday *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`
	//手机
	Phone string `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty"`
	//邮箱
	Email string `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	//密码
	Password string `protobuf:"bytes,12,opt,name=password,proto3" json:"password,omitempty"`
	//用户头像
	Avatar string `protobuf:"bytes,13,opt,name=avatar,proto3" json:"avatar,omitempty"`
	//用户的性别，值为1时是男性，值为2时是女性，值为0时是未知
	Sex int32 `protobuf:"varint,14,opt,name=sex,proto3" json:"sex,omitempty"`
	//用户所在城市区域
	Region string `protobuf:"bytes,15,opt,name=region,proto3" json:"region,omitempty"`
	//用户所在城市
	City string `protobuf:"bytes,16,opt,name=city,proto3" json:"city,omitempty"`
	//用户的语言，简体中文为zh_CN
	Language string `protobuf:"bytes,17,opt,name=language,proto3" json:"language,omitempty"`
	//用户所在省份
	Province string `protobuf:"bytes,18,opt,name=province,proto3" json:"province,omitempty"`
	//用户所在国家
	Country string `protobuf:"bytes,19,opt,name=country,proto3" json:"country,omitempty"`
	//个性签名
	Signature string `protobuf:"bytes,20,opt,name=signature,proto3" json:"signature,omitempty"`
	//公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
	Remark string `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	//用户所在的分组ID（兼容旧的用户分组接口）
	Groupid int32 `protobuf:"varint,22,opt,name=groupid,proto3" json:"groupid,omitempty"`
	//用户被打上的标签ID列表
	TagidList string `protobuf:"bytes,23,opt,name=tagidList,proto3" json:"tagidList,omitempty"`
	//用户是否订阅该公众号标识
	Subscribe int32 `protobuf:"varint,24,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	//关注公众号时间
	SubscribeTime int32 `protobuf:"varint,25,opt,name=subscribeTime,proto3" json:"subscribeTime,omitempty"`
	//小程序用户会话密匙
	SessionKey string `protobuf:"bytes,26,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
	//用户类型
	UserType string `protobuf:"bytes,27,opt,name=userType,proto3" json:"userType,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,28,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,29,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,30,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,31,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,32,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SocialUserReply) Reset() {
	*x = SocialUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUserReply) ProtoMessage() {}

func (x *SocialUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUserReply.ProtoReflect.Descriptor instead.
func (*SocialUserReply) Descriptor() ([]byte, []int) {
	return file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP(), []int{3}
}

func (x *SocialUserReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SocialUserReply) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *SocialUserReply) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *SocialUserReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SocialUserReply) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *SocialUserReply) GetRoutineOpenid() string {
	if x != nil {
		return x.RoutineOpenid
	}
	return ""
}

func (x *SocialUserReply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SocialUserReply) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SocialUserReply) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *SocialUserReply) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SocialUserReply) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SocialUserReply) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SocialUserReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SocialUserReply) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SocialUserReply) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SocialUserReply) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SocialUserReply) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SocialUserReply) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *SocialUserReply) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SocialUserReply) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SocialUserReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SocialUserReply) GetGroupid() int32 {
	if x != nil {
		return x.Groupid
	}
	return 0
}

func (x *SocialUserReply) GetTagidList() string {
	if x != nil {
		return x.TagidList
	}
	return ""
}

func (x *SocialUserReply) GetSubscribe() int32 {
	if x != nil {
		return x.Subscribe
	}
	return 0
}

func (x *SocialUserReply) GetSubscribeTime() int32 {
	if x != nil {
		return x.SubscribeTime
	}
	return 0
}

func (x *SocialUserReply) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *SocialUserReply) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *SocialUserReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SocialUserReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SocialUserReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SocialUserReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SocialUserReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建SocialUser请求
type SocialUserCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//注册渠道
	ChId int64 `protobuf:"varint,1,opt,name=chId,proto3" json:"chId,omitempty"`
	//只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段
	Unionid string `protobuf:"bytes,2,opt,name=unionid,proto3" json:"unionid,omitempty"`
	//第三方登录token
	Token string `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	//用户的标识，对当前公众号唯一
	Openid string `protobuf:"bytes,4,opt,name=openid,proto3" json:"openid,omitempty"`
	//小程序唯一身份ID
	RoutineOpenid string `protobuf:"bytes,5,opt,name=routineOpenid,proto3" json:"routineOpenid,omitempty"`
	//用户名
	UserName string `protobuf:"bytes,6,opt,name=userName,proto3" json:"userName,omitempty"`
	//用户的昵称
	NickName string `protobuf:"bytes,7,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//生日
	Birthday *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=birthday,proto3" json:"birthday,omitempty"`
	//手机
	Phone string `protobuf:"bytes,9,opt,name=phone,proto3" json:"phone,omitempty"`
	//邮箱
	Email string `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	//密码
	Password string `protobuf:"bytes,11,opt,name=password,proto3" json:"password,omitempty"`
	//用户头像
	Avatar string `protobuf:"bytes,12,opt,name=avatar,proto3" json:"avatar,omitempty"`
	//用户的性别，值为1时是男性，值为2时是女性，值为0时是未知
	Sex int32 `protobuf:"varint,13,opt,name=sex,proto3" json:"sex,omitempty"`
	//用户所在城市区域
	Region string `protobuf:"bytes,14,opt,name=region,proto3" json:"region,omitempty"`
	//用户所在城市
	City string `protobuf:"bytes,15,opt,name=city,proto3" json:"city,omitempty"`
	//用户的语言，简体中文为zh_CN
	Language string `protobuf:"bytes,16,opt,name=language,proto3" json:"language,omitempty"`
	//用户所在省份
	Province string `protobuf:"bytes,17,opt,name=province,proto3" json:"province,omitempty"`
	//用户所在国家
	Country string `protobuf:"bytes,18,opt,name=country,proto3" json:"country,omitempty"`
	//个性签名
	Signature string `protobuf:"bytes,19,opt,name=signature,proto3" json:"signature,omitempty"`
	//公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
	Remark string `protobuf:"bytes,20,opt,name=remark,proto3" json:"remark,omitempty"`
	//用户所在的分组ID（兼容旧的用户分组接口）
	Groupid int32 `protobuf:"varint,21,opt,name=groupid,proto3" json:"groupid,omitempty"`
	//用户被打上的标签ID列表
	TagidList string `protobuf:"bytes,22,opt,name=tagidList,proto3" json:"tagidList,omitempty"`
	//用户是否订阅该公众号标识
	Subscribe int32 `protobuf:"varint,23,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	//关注公众号时间
	SubscribeTime int32 `protobuf:"varint,24,opt,name=subscribeTime,proto3" json:"subscribeTime,omitempty"`
	//小程序用户会话密匙
	SessionKey string `protobuf:"bytes,25,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
	//用户类型
	UserType string `protobuf:"bytes,26,opt,name=userType,proto3" json:"userType,omitempty"`
}

func (x *SocialUserCreateReq) Reset() {
	*x = SocialUserCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUserCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUserCreateReq) ProtoMessage() {}

func (x *SocialUserCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUserCreateReq.ProtoReflect.Descriptor instead.
func (*SocialUserCreateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP(), []int{4}
}

func (x *SocialUserCreateReq) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *SocialUserCreateReq) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *SocialUserCreateReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SocialUserCreateReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *SocialUserCreateReq) GetRoutineOpenid() string {
	if x != nil {
		return x.RoutineOpenid
	}
	return ""
}

func (x *SocialUserCreateReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SocialUserCreateReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SocialUserCreateReq) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *SocialUserCreateReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SocialUserCreateReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SocialUserCreateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SocialUserCreateReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SocialUserCreateReq) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SocialUserCreateReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SocialUserCreateReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SocialUserCreateReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SocialUserCreateReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *SocialUserCreateReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SocialUserCreateReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SocialUserCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SocialUserCreateReq) GetGroupid() int32 {
	if x != nil {
		return x.Groupid
	}
	return 0
}

func (x *SocialUserCreateReq) GetTagidList() string {
	if x != nil {
		return x.TagidList
	}
	return ""
}

func (x *SocialUserCreateReq) GetSubscribe() int32 {
	if x != nil {
		return x.Subscribe
	}
	return 0
}

func (x *SocialUserCreateReq) GetSubscribeTime() int32 {
	if x != nil {
		return x.SubscribeTime
	}
	return 0
}

func (x *SocialUserCreateReq) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *SocialUserCreateReq) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

// 创建SocialUser返回
type SocialUserCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//注册渠道
	ChId int64 `protobuf:"varint,2,opt,name=chId,proto3" json:"chId,omitempty"`
	//只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段
	Unionid string `protobuf:"bytes,3,opt,name=unionid,proto3" json:"unionid,omitempty"`
	//第三方登录token
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	//用户的标识，对当前公众号唯一
	Openid string `protobuf:"bytes,5,opt,name=openid,proto3" json:"openid,omitempty"`
	//小程序唯一身份ID
	RoutineOpenid string `protobuf:"bytes,6,opt,name=routineOpenid,proto3" json:"routineOpenid,omitempty"`
	//用户名
	UserName string `protobuf:"bytes,7,opt,name=userName,proto3" json:"userName,omitempty"`
	//用户的昵称
	NickName string `protobuf:"bytes,8,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//生日
	Birthday *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`
	//手机
	Phone string `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty"`
	//邮箱
	Email string `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	//密码
	Password string `protobuf:"bytes,12,opt,name=password,proto3" json:"password,omitempty"`
	//用户头像
	Avatar string `protobuf:"bytes,13,opt,name=avatar,proto3" json:"avatar,omitempty"`
	//用户的性别，值为1时是男性，值为2时是女性，值为0时是未知
	Sex int32 `protobuf:"varint,14,opt,name=sex,proto3" json:"sex,omitempty"`
	//用户所在城市区域
	Region string `protobuf:"bytes,15,opt,name=region,proto3" json:"region,omitempty"`
	//用户所在城市
	City string `protobuf:"bytes,16,opt,name=city,proto3" json:"city,omitempty"`
	//用户的语言，简体中文为zh_CN
	Language string `protobuf:"bytes,17,opt,name=language,proto3" json:"language,omitempty"`
	//用户所在省份
	Province string `protobuf:"bytes,18,opt,name=province,proto3" json:"province,omitempty"`
	//用户所在国家
	Country string `protobuf:"bytes,19,opt,name=country,proto3" json:"country,omitempty"`
	//个性签名
	Signature string `protobuf:"bytes,20,opt,name=signature,proto3" json:"signature,omitempty"`
	//公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
	Remark string `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	//用户所在的分组ID（兼容旧的用户分组接口）
	Groupid int32 `protobuf:"varint,22,opt,name=groupid,proto3" json:"groupid,omitempty"`
	//用户被打上的标签ID列表
	TagidList string `protobuf:"bytes,23,opt,name=tagidList,proto3" json:"tagidList,omitempty"`
	//用户是否订阅该公众号标识
	Subscribe int32 `protobuf:"varint,24,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	//关注公众号时间
	SubscribeTime int32 `protobuf:"varint,25,opt,name=subscribeTime,proto3" json:"subscribeTime,omitempty"`
	//小程序用户会话密匙
	SessionKey string `protobuf:"bytes,26,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
	//用户类型
	UserType string `protobuf:"bytes,27,opt,name=userType,proto3" json:"userType,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,28,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,29,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,30,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,31,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,32,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SocialUserCreateReply) Reset() {
	*x = SocialUserCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUserCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUserCreateReply) ProtoMessage() {}

func (x *SocialUserCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUserCreateReply.ProtoReflect.Descriptor instead.
func (*SocialUserCreateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP(), []int{5}
}

func (x *SocialUserCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SocialUserCreateReply) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *SocialUserCreateReply) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *SocialUserCreateReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SocialUserCreateReply) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *SocialUserCreateReply) GetRoutineOpenid() string {
	if x != nil {
		return x.RoutineOpenid
	}
	return ""
}

func (x *SocialUserCreateReply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SocialUserCreateReply) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SocialUserCreateReply) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *SocialUserCreateReply) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SocialUserCreateReply) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SocialUserCreateReply) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SocialUserCreateReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SocialUserCreateReply) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SocialUserCreateReply) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SocialUserCreateReply) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SocialUserCreateReply) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SocialUserCreateReply) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *SocialUserCreateReply) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SocialUserCreateReply) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SocialUserCreateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SocialUserCreateReply) GetGroupid() int32 {
	if x != nil {
		return x.Groupid
	}
	return 0
}

func (x *SocialUserCreateReply) GetTagidList() string {
	if x != nil {
		return x.TagidList
	}
	return ""
}

func (x *SocialUserCreateReply) GetSubscribe() int32 {
	if x != nil {
		return x.Subscribe
	}
	return 0
}

func (x *SocialUserCreateReply) GetSubscribeTime() int32 {
	if x != nil {
		return x.SubscribeTime
	}
	return 0
}

func (x *SocialUserCreateReply) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *SocialUserCreateReply) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *SocialUserCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SocialUserCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SocialUserCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SocialUserCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SocialUserCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新SocialUser请求
type SocialUserUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//注册渠道
	ChId int64 `protobuf:"varint,2,opt,name=chId,proto3" json:"chId,omitempty"`
	//只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段
	Unionid string `protobuf:"bytes,3,opt,name=unionid,proto3" json:"unionid,omitempty"`
	//第三方登录token
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	//用户的标识，对当前公众号唯一
	Openid string `protobuf:"bytes,5,opt,name=openid,proto3" json:"openid,omitempty"`
	//小程序唯一身份ID
	RoutineOpenid string `protobuf:"bytes,6,opt,name=routineOpenid,proto3" json:"routineOpenid,omitempty"`
	//用户名
	UserName string `protobuf:"bytes,7,opt,name=userName,proto3" json:"userName,omitempty"`
	//用户的昵称
	NickName string `protobuf:"bytes,8,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//生日
	Birthday *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`
	//手机
	Phone string `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty"`
	//邮箱
	Email string `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	//密码
	Password string `protobuf:"bytes,12,opt,name=password,proto3" json:"password,omitempty"`
	//用户头像
	Avatar string `protobuf:"bytes,13,opt,name=avatar,proto3" json:"avatar,omitempty"`
	//用户的性别，值为1时是男性，值为2时是女性，值为0时是未知
	Sex int32 `protobuf:"varint,14,opt,name=sex,proto3" json:"sex,omitempty"`
	//用户所在城市区域
	Region string `protobuf:"bytes,15,opt,name=region,proto3" json:"region,omitempty"`
	//用户所在城市
	City string `protobuf:"bytes,16,opt,name=city,proto3" json:"city,omitempty"`
	//用户的语言，简体中文为zh_CN
	Language string `protobuf:"bytes,17,opt,name=language,proto3" json:"language,omitempty"`
	//用户所在省份
	Province string `protobuf:"bytes,18,opt,name=province,proto3" json:"province,omitempty"`
	//用户所在国家
	Country string `protobuf:"bytes,19,opt,name=country,proto3" json:"country,omitempty"`
	//个性签名
	Signature string `protobuf:"bytes,20,opt,name=signature,proto3" json:"signature,omitempty"`
	//公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
	Remark string `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	//用户所在的分组ID（兼容旧的用户分组接口）
	Groupid int32 `protobuf:"varint,22,opt,name=groupid,proto3" json:"groupid,omitempty"`
	//用户被打上的标签ID列表
	TagidList string `protobuf:"bytes,23,opt,name=tagidList,proto3" json:"tagidList,omitempty"`
	//用户是否订阅该公众号标识
	Subscribe int32 `protobuf:"varint,24,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	//关注公众号时间
	SubscribeTime int32 `protobuf:"varint,25,opt,name=subscribeTime,proto3" json:"subscribeTime,omitempty"`
	//小程序用户会话密匙
	SessionKey string `protobuf:"bytes,26,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
	//用户类型
	UserType string `protobuf:"bytes,27,opt,name=userType,proto3" json:"userType,omitempty"`
}

func (x *SocialUserUpdateReq) Reset() {
	*x = SocialUserUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUserUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUserUpdateReq) ProtoMessage() {}

func (x *SocialUserUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUserUpdateReq.ProtoReflect.Descriptor instead.
func (*SocialUserUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP(), []int{6}
}

func (x *SocialUserUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SocialUserUpdateReq) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *SocialUserUpdateReq) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *SocialUserUpdateReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SocialUserUpdateReq) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *SocialUserUpdateReq) GetRoutineOpenid() string {
	if x != nil {
		return x.RoutineOpenid
	}
	return ""
}

func (x *SocialUserUpdateReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SocialUserUpdateReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SocialUserUpdateReq) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *SocialUserUpdateReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SocialUserUpdateReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SocialUserUpdateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SocialUserUpdateReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SocialUserUpdateReq) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SocialUserUpdateReq) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SocialUserUpdateReq) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SocialUserUpdateReq) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SocialUserUpdateReq) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *SocialUserUpdateReq) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SocialUserUpdateReq) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SocialUserUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SocialUserUpdateReq) GetGroupid() int32 {
	if x != nil {
		return x.Groupid
	}
	return 0
}

func (x *SocialUserUpdateReq) GetTagidList() string {
	if x != nil {
		return x.TagidList
	}
	return ""
}

func (x *SocialUserUpdateReq) GetSubscribe() int32 {
	if x != nil {
		return x.Subscribe
	}
	return 0
}

func (x *SocialUserUpdateReq) GetSubscribeTime() int32 {
	if x != nil {
		return x.SubscribeTime
	}
	return 0
}

func (x *SocialUserUpdateReq) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *SocialUserUpdateReq) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

// 更新SocialUser返回
type SocialUserUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//注册渠道
	ChId int64 `protobuf:"varint,2,opt,name=chId,proto3" json:"chId,omitempty"`
	//只有在用户将公众号绑定到微信开放平台帐号后，才会出现该字段
	Unionid string `protobuf:"bytes,3,opt,name=unionid,proto3" json:"unionid,omitempty"`
	//第三方登录token
	Token string `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	//用户的标识，对当前公众号唯一
	Openid string `protobuf:"bytes,5,opt,name=openid,proto3" json:"openid,omitempty"`
	//小程序唯一身份ID
	RoutineOpenid string `protobuf:"bytes,6,opt,name=routineOpenid,proto3" json:"routineOpenid,omitempty"`
	//用户名
	UserName string `protobuf:"bytes,7,opt,name=userName,proto3" json:"userName,omitempty"`
	//用户的昵称
	NickName string `protobuf:"bytes,8,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//生日
	Birthday *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=birthday,proto3" json:"birthday,omitempty"`
	//手机
	Phone string `protobuf:"bytes,10,opt,name=phone,proto3" json:"phone,omitempty"`
	//邮箱
	Email string `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	//密码
	Password string `protobuf:"bytes,12,opt,name=password,proto3" json:"password,omitempty"`
	//用户头像
	Avatar string `protobuf:"bytes,13,opt,name=avatar,proto3" json:"avatar,omitempty"`
	//用户的性别，值为1时是男性，值为2时是女性，值为0时是未知
	Sex int32 `protobuf:"varint,14,opt,name=sex,proto3" json:"sex,omitempty"`
	//用户所在城市区域
	Region string `protobuf:"bytes,15,opt,name=region,proto3" json:"region,omitempty"`
	//用户所在城市
	City string `protobuf:"bytes,16,opt,name=city,proto3" json:"city,omitempty"`
	//用户的语言，简体中文为zh_CN
	Language string `protobuf:"bytes,17,opt,name=language,proto3" json:"language,omitempty"`
	//用户所在省份
	Province string `protobuf:"bytes,18,opt,name=province,proto3" json:"province,omitempty"`
	//用户所在国家
	Country string `protobuf:"bytes,19,opt,name=country,proto3" json:"country,omitempty"`
	//个性签名
	Signature string `protobuf:"bytes,20,opt,name=signature,proto3" json:"signature,omitempty"`
	//公众号运营者对粉丝的备注，公众号运营者可在微信公众平台用户管理界面对粉丝添加备注
	Remark string `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
	//用户所在的分组ID（兼容旧的用户分组接口）
	Groupid int32 `protobuf:"varint,22,opt,name=groupid,proto3" json:"groupid,omitempty"`
	//用户被打上的标签ID列表
	TagidList string `protobuf:"bytes,23,opt,name=tagidList,proto3" json:"tagidList,omitempty"`
	//用户是否订阅该公众号标识
	Subscribe int32 `protobuf:"varint,24,opt,name=subscribe,proto3" json:"subscribe,omitempty"`
	//关注公众号时间
	SubscribeTime int32 `protobuf:"varint,25,opt,name=subscribeTime,proto3" json:"subscribeTime,omitempty"`
	//小程序用户会话密匙
	SessionKey string `protobuf:"bytes,26,opt,name=sessionKey,proto3" json:"sessionKey,omitempty"`
	//用户类型
	UserType string `protobuf:"bytes,27,opt,name=userType,proto3" json:"userType,omitempty"`
}

func (x *SocialUserUpdateReply) Reset() {
	*x = SocialUserUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUserUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUserUpdateReply) ProtoMessage() {}

func (x *SocialUserUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUserUpdateReply.ProtoReflect.Descriptor instead.
func (*SocialUserUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP(), []int{7}
}

func (x *SocialUserUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SocialUserUpdateReply) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *SocialUserUpdateReply) GetUnionid() string {
	if x != nil {
		return x.Unionid
	}
	return ""
}

func (x *SocialUserUpdateReply) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SocialUserUpdateReply) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *SocialUserUpdateReply) GetRoutineOpenid() string {
	if x != nil {
		return x.RoutineOpenid
	}
	return ""
}

func (x *SocialUserUpdateReply) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *SocialUserUpdateReply) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SocialUserUpdateReply) GetBirthday() *timestamppb.Timestamp {
	if x != nil {
		return x.Birthday
	}
	return nil
}

func (x *SocialUserUpdateReply) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SocialUserUpdateReply) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SocialUserUpdateReply) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SocialUserUpdateReply) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SocialUserUpdateReply) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SocialUserUpdateReply) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *SocialUserUpdateReply) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *SocialUserUpdateReply) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SocialUserUpdateReply) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *SocialUserUpdateReply) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *SocialUserUpdateReply) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SocialUserUpdateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SocialUserUpdateReply) GetGroupid() int32 {
	if x != nil {
		return x.Groupid
	}
	return 0
}

func (x *SocialUserUpdateReply) GetTagidList() string {
	if x != nil {
		return x.TagidList
	}
	return ""
}

func (x *SocialUserUpdateReply) GetSubscribe() int32 {
	if x != nil {
		return x.Subscribe
	}
	return 0
}

func (x *SocialUserUpdateReply) GetSubscribeTime() int32 {
	if x != nil {
		return x.SubscribeTime
	}
	return 0
}

func (x *SocialUserUpdateReply) GetSessionKey() string {
	if x != nil {
		return x.SessionKey
	}
	return ""
}

func (x *SocialUserUpdateReply) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

// 删除SocialUser请求
type SocialUserDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SocialUserDeleteReq) Reset() {
	*x = SocialUserDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUserDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUserDeleteReq) ProtoMessage() {}

func (x *SocialUserDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUserDeleteReq.ProtoReflect.Descriptor instead.
func (*SocialUserDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP(), []int{8}
}

func (x *SocialUserDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除SocialUser请求
type SocialUserBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SocialUserBatchDeleteReq) Reset() {
	*x = SocialUserBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUserBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUserBatchDeleteReq) ProtoMessage() {}

func (x *SocialUserBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUserBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*SocialUserBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP(), []int{9}
}

func (x *SocialUserBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除SocialUser返回
type SocialUserDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SocialUserDeleteReply) Reset() {
	*x = SocialUserDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SocialUserDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SocialUserDeleteReply) ProtoMessage() {}

func (x *SocialUserDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_socialuser_v1_social_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SocialUserDeleteReply.ProtoReflect.Descriptor instead.
func (*SocialUserDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP(), []int{10}
}

func (x *SocialUserDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_novel_socialuser_v1_social_user_proto protoreflect.FileDescriptor

var file_api_novel_socialuser_v1_social_user_proto_rawDesc = []byte{
	0x0a, 0x29, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x70, 0x0a, 0x11, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x74, 0x0a, 0x13, 0x53, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0xb7, 0x07, 0x0a, 0x0d, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x67, 0x69, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xb9, 0x07, 0x0a, 0x0f, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73,
	0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x67, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65,
	0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe5, 0x05, 0x0a, 0x13, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x68, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73,
	0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69,
	0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x67, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xbf,
	0x07, 0x0a, 0x15, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61,
	0x67, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x61, 0x67, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0xf5, 0x05, 0x0a, 0x13, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x78, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61,
	0x67, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x61, 0x67, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xf7, 0x05, 0x0a, 0x15, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x68, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74,
	0x68, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x67, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x67, 0x69, 0x64, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79,
	0x70, 0x65, 0x22, 0x25, 0x0a, 0x13, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x18, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2f, 0x0a, 0x15, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xe8, 0x05, 0x0a, 0x0a, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x77, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x67, 0x65, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x73,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x6b, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1c, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7d, 0x0a,
	0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x22, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x19, 0x1a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x78, 0x0a, 0x10,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x22, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x7a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x7f, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x73, 0x6f,
	0x63, 0x69, 0x61, 0x6c, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x42, 0x21, 0x5a, 0x1f, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_novel_socialuser_v1_social_user_proto_rawDescOnce sync.Once
	file_api_novel_socialuser_v1_social_user_proto_rawDescData = file_api_novel_socialuser_v1_social_user_proto_rawDesc
)

func file_api_novel_socialuser_v1_social_user_proto_rawDescGZIP() []byte {
	file_api_novel_socialuser_v1_social_user_proto_rawDescOnce.Do(func() {
		file_api_novel_socialuser_v1_social_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_novel_socialuser_v1_social_user_proto_rawDescData)
	})
	return file_api_novel_socialuser_v1_social_user_proto_rawDescData
}

var file_api_novel_socialuser_v1_social_user_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_novel_socialuser_v1_social_user_proto_goTypes = []interface{}{
	(*SocialUserPageReq)(nil),        // 0: socialuser.v1.SocialUserPageReq
	(*SocialUserPageReply)(nil),      // 1: socialuser.v1.SocialUserPageReply
	(*SocialUserReq)(nil),            // 2: socialuser.v1.SocialUserReq
	(*SocialUserReply)(nil),          // 3: socialuser.v1.SocialUserReply
	(*SocialUserCreateReq)(nil),      // 4: socialuser.v1.SocialUserCreateReq
	(*SocialUserCreateReply)(nil),    // 5: socialuser.v1.SocialUserCreateReply
	(*SocialUserUpdateReq)(nil),      // 6: socialuser.v1.SocialUserUpdateReq
	(*SocialUserUpdateReply)(nil),    // 7: socialuser.v1.SocialUserUpdateReply
	(*SocialUserDeleteReq)(nil),      // 8: socialuser.v1.SocialUserDeleteReq
	(*SocialUserBatchDeleteReq)(nil), // 9: socialuser.v1.SocialUserBatchDeleteReq
	(*SocialUserDeleteReply)(nil),    // 10: socialuser.v1.SocialUserDeleteReply
	(*pagin.Pagination)(nil),         // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),    // 12: google.protobuf.Timestamp
}
var file_api_novel_socialuser_v1_social_user_proto_depIdxs = []int32{
	11, // 0: socialuser.v1.SocialUserPageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: socialuser.v1.SocialUserPageReq.param:type_name -> socialuser.v1.SocialUserReq
	11, // 2: socialuser.v1.SocialUserPageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: socialuser.v1.SocialUserPageReply.items:type_name -> socialuser.v1.SocialUserReply
	12, // 4: socialuser.v1.SocialUserReq.birthday:type_name -> google.protobuf.Timestamp
	12, // 5: socialuser.v1.SocialUserReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 6: socialuser.v1.SocialUserReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 7: socialuser.v1.SocialUserReply.birthday:type_name -> google.protobuf.Timestamp
	12, // 8: socialuser.v1.SocialUserReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: socialuser.v1.SocialUserReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 10: socialuser.v1.SocialUserCreateReq.birthday:type_name -> google.protobuf.Timestamp
	12, // 11: socialuser.v1.SocialUserCreateReply.birthday:type_name -> google.protobuf.Timestamp
	12, // 12: socialuser.v1.SocialUserCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 13: socialuser.v1.SocialUserCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 14: socialuser.v1.SocialUserUpdateReq.birthday:type_name -> google.protobuf.Timestamp
	12, // 15: socialuser.v1.SocialUserUpdateReply.birthday:type_name -> google.protobuf.Timestamp
	0,  // 16: socialuser.v1.SocialUser.GetPageSocialUser:input_type -> socialuser.v1.SocialUserPageReq
	2,  // 17: socialuser.v1.SocialUser.GetSocialUser:input_type -> socialuser.v1.SocialUserReq
	6,  // 18: socialuser.v1.SocialUser.UpdateSocialUser:input_type -> socialuser.v1.SocialUserUpdateReq
	4,  // 19: socialuser.v1.SocialUser.CreateSocialUser:input_type -> socialuser.v1.SocialUserCreateReq
	8,  // 20: socialuser.v1.SocialUser.DeleteSocialUser:input_type -> socialuser.v1.SocialUserDeleteReq
	9,  // 21: socialuser.v1.SocialUser.BatchDeleteSocialUser:input_type -> socialuser.v1.SocialUserBatchDeleteReq
	1,  // 22: socialuser.v1.SocialUser.GetPageSocialUser:output_type -> socialuser.v1.SocialUserPageReply
	3,  // 23: socialuser.v1.SocialUser.GetSocialUser:output_type -> socialuser.v1.SocialUserReply
	7,  // 24: socialuser.v1.SocialUser.UpdateSocialUser:output_type -> socialuser.v1.SocialUserUpdateReply
	5,  // 25: socialuser.v1.SocialUser.CreateSocialUser:output_type -> socialuser.v1.SocialUserCreateReply
	10, // 26: socialuser.v1.SocialUser.DeleteSocialUser:output_type -> socialuser.v1.SocialUserDeleteReply
	10, // 27: socialuser.v1.SocialUser.BatchDeleteSocialUser:output_type -> socialuser.v1.SocialUserDeleteReply
	22, // [22:28] is the sub-list for method output_type
	16, // [16:22] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_api_novel_socialuser_v1_social_user_proto_init() }
func file_api_novel_socialuser_v1_social_user_proto_init() {
	if File_api_novel_socialuser_v1_social_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_novel_socialuser_v1_social_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUserPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_socialuser_v1_social_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUserPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_socialuser_v1_social_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_socialuser_v1_social_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_socialuser_v1_social_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUserCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_socialuser_v1_social_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUserCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_socialuser_v1_social_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUserUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_socialuser_v1_social_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUserUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_socialuser_v1_social_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUserDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_socialuser_v1_social_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUserBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_socialuser_v1_social_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SocialUserDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_novel_socialuser_v1_social_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_novel_socialuser_v1_social_user_proto_goTypes,
		DependencyIndexes: file_api_novel_socialuser_v1_social_user_proto_depIdxs,
		MessageInfos:      file_api_novel_socialuser_v1_social_user_proto_msgTypes,
	}.Build()
	File_api_novel_socialuser_v1_social_user_proto = out.File
	file_api_novel_socialuser_v1_social_user_proto_rawDesc = nil
	file_api_novel_socialuser_v1_social_user_proto_goTypes = nil
	file_api_novel_socialuser_v1_social_user_proto_depIdxs = nil
}
