// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/admin/sysuser/v1/sys_user.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type SysUserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	//密码
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	//昵称
	NickName string `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//手机号
	Phone string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	//部门ID
	DeptId int64 `protobuf:"varint,6,opt,name=deptId,proto3" json:"deptId,omitempty"`
	//岗位ID
	PostId int64 `protobuf:"varint,7,opt,name=postId,proto3" json:"postId,omitempty"`
	//角色ID
	RoleId int64 `protobuf:"varint,8,opt,name=roleId,proto3" json:"roleId,omitempty"`
	//头像
	Avatar string `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	//性别,0保密,1男,2女
	Sex int32 `protobuf:"varint,10,opt,name=sex,proto3" json:"sex,omitempty"`
	//邮箱
	Email string `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	//备注
	Remark string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	//个人简介
	Desc string `protobuf:"bytes,13,opt,name=desc,proto3" json:"desc,omitempty"`
	//登陆默认打开页面
	HomePath string `protobuf:"bytes,14,opt,name=homePath,proto3" json:"homePath,omitempty"`
	//状态
	Status string `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,18,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,19,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,20,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysUserData) Reset() {
	*x = SysUserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserData) ProtoMessage() {}

func (x *SysUserData) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserData.ProtoReflect.Descriptor instead.
func (*SysUserData) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{0}
}

func (x *SysUserData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysUserData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysUserData) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SysUserData) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SysUserData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SysUserData) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SysUserData) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *SysUserData) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *SysUserData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysUserData) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SysUserData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysUserData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysUserData) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SysUserData) GetHomePath() string {
	if x != nil {
		return x.HomePath
	}
	return ""
}

func (x *SysUserData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysUserData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysUserData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysUserData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysUserData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysUserData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type SysUserPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *SysUserReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *SysUserPageReq) Reset() {
	*x = SysUserPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserPageReq) ProtoMessage() {}

func (x *SysUserPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserPageReq.ProtoReflect.Descriptor instead.
func (*SysUserPageReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{1}
}

func (x *SysUserPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SysUserPageReq) GetParam() *SysUserReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type SysUserPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*SysUserData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SysUserPageReply) Reset() {
	*x = SysUserPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserPageReply) ProtoMessage() {}

func (x *SysUserPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserPageReply.ProtoReflect.Descriptor instead.
func (*SysUserPageReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{2}
}

func (x *SysUserPageReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysUserPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysUserPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SysUserPageReply) GetItems() []*SysUserData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type SysUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	//密码
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	//昵称
	NickName string `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//手机号
	Phone string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	//部门ID
	DeptId int64 `protobuf:"varint,6,opt,name=deptId,proto3" json:"deptId,omitempty"`
	//岗位ID
	PostId int64 `protobuf:"varint,7,opt,name=postId,proto3" json:"postId,omitempty"`
	//角色ID
	RoleId int64 `protobuf:"varint,8,opt,name=roleId,proto3" json:"roleId,omitempty"`
	//头像
	Avatar string `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	//性别,0保密,1男,2女
	Sex int32 `protobuf:"varint,10,opt,name=sex,proto3" json:"sex,omitempty"`
	//邮箱
	Email string `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	//备注
	Remark string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	//个人简介
	Desc string `protobuf:"bytes,13,opt,name=desc,proto3" json:"desc,omitempty"`
	//登陆默认打开页面
	HomePath string `protobuf:"bytes,14,opt,name=homePath,proto3" json:"homePath,omitempty"`
	//状态
	Status string `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,18,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,19,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,20,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysUserReq) Reset() {
	*x = SysUserReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserReq) ProtoMessage() {}

func (x *SysUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserReq.ProtoReflect.Descriptor instead.
func (*SysUserReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{3}
}

func (x *SysUserReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysUserReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SysUserReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SysUserReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SysUserReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SysUserReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *SysUserReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *SysUserReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysUserReq) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SysUserReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysUserReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysUserReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SysUserReq) GetHomePath() string {
	if x != nil {
		return x.HomePath
	}
	return ""
}

func (x *SysUserReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysUserReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysUserReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysUserReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysUserReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysUserReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type SysUserReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysUserData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysUserReply) Reset() {
	*x = SysUserReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserReply) ProtoMessage() {}

func (x *SysUserReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserReply.ProtoReflect.Descriptor instead.
func (*SysUserReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{4}
}

func (x *SysUserReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysUserReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysUserReply) GetResult() *SysUserData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建SysUser请求
type SysUserCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户名
	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	//密码
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	//昵称
	NickName string `protobuf:"bytes,3,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//手机号
	Phone string `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	//部门ID
	DeptId int64 `protobuf:"varint,5,opt,name=deptId,proto3" json:"deptId,omitempty"`
	//岗位ID
	PostId int64 `protobuf:"varint,6,opt,name=postId,proto3" json:"postId,omitempty"`
	//角色ID
	RoleId int64 `protobuf:"varint,7,opt,name=roleId,proto3" json:"roleId,omitempty"`
	//头像
	Avatar string `protobuf:"bytes,8,opt,name=avatar,proto3" json:"avatar,omitempty"`
	//性别,0保密,1男,2女
	Sex int32 `protobuf:"varint,9,opt,name=sex,proto3" json:"sex,omitempty"`
	//邮箱
	Email string `protobuf:"bytes,10,opt,name=email,proto3" json:"email,omitempty"`
	//备注
	Remark string `protobuf:"bytes,11,opt,name=remark,proto3" json:"remark,omitempty"`
	//个人简介
	Desc string `protobuf:"bytes,12,opt,name=desc,proto3" json:"desc,omitempty"`
	//登陆默认打开页面
	HomePath string `protobuf:"bytes,13,opt,name=homePath,proto3" json:"homePath,omitempty"`
	//状态
	Status string `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SysUserCreateReq) Reset() {
	*x = SysUserCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserCreateReq) ProtoMessage() {}

func (x *SysUserCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserCreateReq.ProtoReflect.Descriptor instead.
func (*SysUserCreateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{5}
}

func (x *SysUserCreateReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysUserCreateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SysUserCreateReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SysUserCreateReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SysUserCreateReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SysUserCreateReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *SysUserCreateReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *SysUserCreateReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysUserCreateReq) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SysUserCreateReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysUserCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysUserCreateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SysUserCreateReq) GetHomePath() string {
	if x != nil {
		return x.HomePath
	}
	return ""
}

func (x *SysUserCreateReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 创建SysUser返回
type SysUserCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysUserData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysUserCreateReply) Reset() {
	*x = SysUserCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserCreateReply) ProtoMessage() {}

func (x *SysUserCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserCreateReply.ProtoReflect.Descriptor instead.
func (*SysUserCreateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{6}
}

func (x *SysUserCreateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysUserCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysUserCreateReply) GetResult() *SysUserData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新SysUser请求
type SysUserUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户名
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	//密码
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	//昵称
	NickName string `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
	//手机号
	Phone string `protobuf:"bytes,5,opt,name=phone,proto3" json:"phone,omitempty"`
	//部门ID
	DeptId int64 `protobuf:"varint,6,opt,name=deptId,proto3" json:"deptId,omitempty"`
	//岗位ID
	PostId int64 `protobuf:"varint,7,opt,name=postId,proto3" json:"postId,omitempty"`
	//角色ID
	RoleId int64 `protobuf:"varint,8,opt,name=roleId,proto3" json:"roleId,omitempty"`
	//头像
	Avatar string `protobuf:"bytes,9,opt,name=avatar,proto3" json:"avatar,omitempty"`
	//性别,0保密,1男,2女
	Sex int32 `protobuf:"varint,10,opt,name=sex,proto3" json:"sex,omitempty"`
	//邮箱
	Email string `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	//备注
	Remark string `protobuf:"bytes,12,opt,name=remark,proto3" json:"remark,omitempty"`
	//个人简介
	Desc string `protobuf:"bytes,13,opt,name=desc,proto3" json:"desc,omitempty"`
	//登陆默认打开页面
	HomePath string `protobuf:"bytes,14,opt,name=homePath,proto3" json:"homePath,omitempty"`
	//状态
	Status string `protobuf:"bytes,15,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SysUserUpdateReq) Reset() {
	*x = SysUserUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserUpdateReq) ProtoMessage() {}

func (x *SysUserUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserUpdateReq.ProtoReflect.Descriptor instead.
func (*SysUserUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{7}
}

func (x *SysUserUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysUserUpdateReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SysUserUpdateReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *SysUserUpdateReq) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *SysUserUpdateReq) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *SysUserUpdateReq) GetDeptId() int64 {
	if x != nil {
		return x.DeptId
	}
	return 0
}

func (x *SysUserUpdateReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *SysUserUpdateReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *SysUserUpdateReq) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *SysUserUpdateReq) GetSex() int32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *SysUserUpdateReq) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *SysUserUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysUserUpdateReq) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *SysUserUpdateReq) GetHomePath() string {
	if x != nil {
		return x.HomePath
	}
	return ""
}

func (x *SysUserUpdateReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 更新SysUser返回
type SysUserUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysUserData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysUserUpdateReply) Reset() {
	*x = SysUserUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserUpdateReply) ProtoMessage() {}

func (x *SysUserUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserUpdateReply.ProtoReflect.Descriptor instead.
func (*SysUserUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{8}
}

func (x *SysUserUpdateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysUserUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysUserUpdateReply) GetResult() *SysUserData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除SysUser请求
type SysUserDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SysUserDeleteReq) Reset() {
	*x = SysUserDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserDeleteReq) ProtoMessage() {}

func (x *SysUserDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserDeleteReq.ProtoReflect.Descriptor instead.
func (*SysUserDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{9}
}

func (x *SysUserDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除SysUser请求
type SysUserBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SysUserBatchDeleteReq) Reset() {
	*x = SysUserBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserBatchDeleteReq) ProtoMessage() {}

func (x *SysUserBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*SysUserBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{10}
}

func (x *SysUserBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除SysUser返回
type SysUserDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysUserDeleteReply) Reset() {
	*x = SysUserDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysUserDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysUserDeleteReply) ProtoMessage() {}

func (x *SysUserDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysuser_v1_sys_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysUserDeleteReply.ProtoReflect.Descriptor instead.
func (*SysUserDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP(), []int{11}
}

func (x *SysUserDeleteReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysUserDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysUserDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_admin_sysuser_v1_sys_user_proto protoreflect.FileDescriptor

var file_api_admin_sysuser_v1_sys_user_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xb7, 0x04, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70,
	0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a,
	0x08, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x0e, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x22, 0x85, 0x01, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb6, 0x04, 0x0a, 0x0a, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x50,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xe4, 0x02, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x73, 0x65, 0x78, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x74,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x73, 0x0a, 0x12, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xf4,
	0x02, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x64, 0x65, 0x70, 0x74, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x64,
	0x65, 0x70, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x65, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6d, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x73, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x22, 0x0a, 0x10, 0x53, 0x79,
	0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29,
	0x0a, 0x15, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x12, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xf9, 0x04, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x75,
	0x73, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x6b, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a,
	0x12, 0x66, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x2f, 0x75, 0x73, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x68, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a,
	0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x6d, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x79,
	0x73, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x2a, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x42, 0x1e, 0x5a, 0x1c, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_admin_sysuser_v1_sys_user_proto_rawDescOnce sync.Once
	file_api_admin_sysuser_v1_sys_user_proto_rawDescData = file_api_admin_sysuser_v1_sys_user_proto_rawDesc
)

func file_api_admin_sysuser_v1_sys_user_proto_rawDescGZIP() []byte {
	file_api_admin_sysuser_v1_sys_user_proto_rawDescOnce.Do(func() {
		file_api_admin_sysuser_v1_sys_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_admin_sysuser_v1_sys_user_proto_rawDescData)
	})
	return file_api_admin_sysuser_v1_sys_user_proto_rawDescData
}

var file_api_admin_sysuser_v1_sys_user_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_admin_sysuser_v1_sys_user_proto_goTypes = []interface{}{
	(*SysUserData)(nil),           // 0: sysuser.v1.SysUserData
	(*SysUserPageReq)(nil),        // 1: sysuser.v1.SysUserPageReq
	(*SysUserPageReply)(nil),      // 2: sysuser.v1.SysUserPageReply
	(*SysUserReq)(nil),            // 3: sysuser.v1.SysUserReq
	(*SysUserReply)(nil),          // 4: sysuser.v1.SysUserReply
	(*SysUserCreateReq)(nil),      // 5: sysuser.v1.SysUserCreateReq
	(*SysUserCreateReply)(nil),    // 6: sysuser.v1.SysUserCreateReply
	(*SysUserUpdateReq)(nil),      // 7: sysuser.v1.SysUserUpdateReq
	(*SysUserUpdateReply)(nil),    // 8: sysuser.v1.SysUserUpdateReply
	(*SysUserDeleteReq)(nil),      // 9: sysuser.v1.SysUserDeleteReq
	(*SysUserBatchDeleteReq)(nil), // 10: sysuser.v1.SysUserBatchDeleteReq
	(*SysUserDeleteReply)(nil),    // 11: sysuser.v1.SysUserDeleteReply
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),      // 13: pagin.Pagination
}
var file_api_admin_sysuser_v1_sys_user_proto_depIdxs = []int32{
	12, // 0: sysuser.v1.SysUserData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 1: sysuser.v1.SysUserData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 2: sysuser.v1.SysUserPageReq.pagin:type_name -> pagin.Pagination
	3,  // 3: sysuser.v1.SysUserPageReq.param:type_name -> sysuser.v1.SysUserReq
	0,  // 4: sysuser.v1.SysUserPageReply.items:type_name -> sysuser.v1.SysUserData
	12, // 5: sysuser.v1.SysUserReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 6: sysuser.v1.SysUserReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 7: sysuser.v1.SysUserReply.result:type_name -> sysuser.v1.SysUserData
	0,  // 8: sysuser.v1.SysUserCreateReply.result:type_name -> sysuser.v1.SysUserData
	0,  // 9: sysuser.v1.SysUserUpdateReply.result:type_name -> sysuser.v1.SysUserData
	1,  // 10: sysuser.v1.SysUser.GetPageSysUser:input_type -> sysuser.v1.SysUserPageReq
	3,  // 11: sysuser.v1.SysUser.GetSysUser:input_type -> sysuser.v1.SysUserReq
	7,  // 12: sysuser.v1.SysUser.UpdateSysUser:input_type -> sysuser.v1.SysUserUpdateReq
	5,  // 13: sysuser.v1.SysUser.CreateSysUser:input_type -> sysuser.v1.SysUserCreateReq
	9,  // 14: sysuser.v1.SysUser.DeleteSysUser:input_type -> sysuser.v1.SysUserDeleteReq
	10, // 15: sysuser.v1.SysUser.BatchDeleteSysUser:input_type -> sysuser.v1.SysUserBatchDeleteReq
	2,  // 16: sysuser.v1.SysUser.GetPageSysUser:output_type -> sysuser.v1.SysUserPageReply
	4,  // 17: sysuser.v1.SysUser.GetSysUser:output_type -> sysuser.v1.SysUserReply
	8,  // 18: sysuser.v1.SysUser.UpdateSysUser:output_type -> sysuser.v1.SysUserUpdateReply
	6,  // 19: sysuser.v1.SysUser.CreateSysUser:output_type -> sysuser.v1.SysUserCreateReply
	11, // 20: sysuser.v1.SysUser.DeleteSysUser:output_type -> sysuser.v1.SysUserDeleteReply
	11, // 21: sysuser.v1.SysUser.BatchDeleteSysUser:output_type -> sysuser.v1.SysUserDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_admin_sysuser_v1_sys_user_proto_init() }
func file_api_admin_sysuser_v1_sys_user_proto_init() {
	if File_api_admin_sysuser_v1_sys_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysuser_v1_sys_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysUserDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_admin_sysuser_v1_sys_user_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_admin_sysuser_v1_sys_user_proto_goTypes,
		DependencyIndexes: file_api_admin_sysuser_v1_sys_user_proto_depIdxs,
		MessageInfos:      file_api_admin_sysuser_v1_sys_user_proto_msgTypes,
	}.Build()
	File_api_admin_sysuser_v1_sys_user_proto = out.File
	file_api_admin_sysuser_v1_sys_user_proto_rawDesc = nil
	file_api_admin_sysuser_v1_sys_user_proto_goTypes = nil
	file_api_admin_sysuser_v1_sys_user_proto_depIdxs = nil
}
