// Code generated by entc, DO NOT EDIT.

package useranalysisstatistics

import (
	"time"
)

const (
	// Label holds the string label denoting the useranalysisstatistics type in the database.
	Label = "user_analysis_statistics"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldStatisticsDate holds the string denoting the statisticsdate field in the database.
	FieldStatisticsDate = "statistics_date"
	// FieldAllUserNum holds the string denoting the allusernum field in the database.
	FieldAllUserNum = "all_user_num"
	// FieldAllPayment holds the string denoting the allpayment field in the database.
	FieldAllPayment = "all_payment"
	// FieldAllPayUser holds the string denoting the allpayuser field in the database.
	FieldAllPayUser = "all_pay_user"
	// FieldAllOrderNum holds the string denoting the allordernum field in the database.
	FieldAllOrderNum = "all_order_num"
	// FieldDayUserNum holds the string denoting the dayusernum field in the database.
	FieldDayUserNum = "day_user_num"
	// FieldDayPayment holds the string denoting the daypayment field in the database.
	FieldDayPayment = "day_payment"
	// FieldDayOrderNum holds the string denoting the dayordernum field in the database.
	FieldDayOrderNum = "day_order_num"
	// FieldDayPayUser holds the string denoting the daypayuser field in the database.
	FieldDayPayUser = "day_pay_user"
	// FieldDayRegPayment holds the string denoting the dayregpayment field in the database.
	FieldDayRegPayment = "day_reg_payment"
	// FieldDayRegUserNum holds the string denoting the dayregusernum field in the database.
	FieldDayRegUserNum = "day_reg_user_num"
	// FieldDayRegOrderNum holds the string denoting the dayregordernum field in the database.
	FieldDayRegOrderNum = "day_reg_order_num"
	// FieldOldRegPayment holds the string denoting the oldregpayment field in the database.
	FieldOldRegPayment = "old_reg_payment"
	// FieldOldRegUserNum holds the string denoting the oldregusernum field in the database.
	FieldOldRegUserNum = "old_reg_user_num"
	// FieldOldRegOrderNum holds the string denoting the oldregordernum field in the database.
	FieldOldRegOrderNum = "old_reg_order_num"
	// FieldPayRate holds the string denoting the payrate field in the database.
	FieldPayRate = "pay_rate"
	// FieldArpu holds the string denoting the arpu field in the database.
	FieldArpu = "arpu"
	// FieldDayRegArpu holds the string denoting the dayregarpu field in the database.
	FieldDayRegArpu = "day_reg_arpu"
	// FieldDayArpu holds the string denoting the dayarpu field in the database.
	FieldDayArpu = "day_arpu"
	// FieldDayOldArpu holds the string denoting the dayoldarpu field in the database.
	FieldDayOldArpu = "day_old_arpu"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreateBy holds the string denoting the createby field in the database.
	FieldCreateBy = "create_by"
	// FieldUpdateBy holds the string denoting the updateby field in the database.
	FieldUpdateBy = "update_by"
	// FieldTenantId holds the string denoting the tenantid field in the database.
	FieldTenantId = "tenant_id"
	// Table holds the table name of the useranalysisstatistics in the database.
	Table = "user_analysis_statistics"
)

// Columns holds all SQL columns for useranalysisstatistics fields.
var Columns = []string{
	FieldID,
	FieldStatisticsDate,
	FieldAllUserNum,
	FieldAllPayment,
	FieldAllPayUser,
	FieldAllOrderNum,
	FieldDayUserNum,
	FieldDayPayment,
	FieldDayOrderNum,
	FieldDayPayUser,
	FieldDayRegPayment,
	FieldDayRegUserNum,
	FieldDayRegOrderNum,
	FieldOldRegPayment,
	FieldOldRegUserNum,
	FieldOldRegOrderNum,
	FieldPayRate,
	FieldArpu,
	FieldDayRegArpu,
	FieldDayArpu,
	FieldDayOldArpu,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreateBy,
	FieldUpdateBy,
	FieldTenantId,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updatedAt" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updatedAt" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCreateBy holds the default value on creation for the "createBy" field.
	DefaultCreateBy int64
	// DefaultUpdateBy holds the default value on creation for the "updateBy" field.
	DefaultUpdateBy int64
	// DefaultTenantId holds the default value on creation for the "tenantId" field.
	DefaultTenantId int64
)
