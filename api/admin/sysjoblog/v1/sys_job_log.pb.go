// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/admin/sysjoblog/v1/sys_job_log.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type SysJobLogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//编码
	JobId int64 `protobuf:"varint,2,opt,name=jobId,proto3" json:"jobId,omitempty"`
	//名称
	JobName string `protobuf:"bytes,3,opt,name=jobName,proto3" json:"jobName,omitempty"`
	//job启动时返回的id
	EntryId int32 `protobuf:"varint,4,opt,name=entryId,proto3" json:"entryId,omitempty"`
	//状态
	Status bool `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	//耗时
	Duration *durationpb.Duration `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	//执行详情,错误信息
	Info string `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,12,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysJobLogData) Reset() {
	*x = SysJobLogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogData) ProtoMessage() {}

func (x *SysJobLogData) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogData.ProtoReflect.Descriptor instead.
func (*SysJobLogData) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{0}
}

func (x *SysJobLogData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysJobLogData) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *SysJobLogData) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *SysJobLogData) GetEntryId() int32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *SysJobLogData) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SysJobLogData) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *SysJobLogData) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *SysJobLogData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysJobLogData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysJobLogData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysJobLogData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysJobLogData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type SysJobLogPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *SysJobLogReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *SysJobLogPageReq) Reset() {
	*x = SysJobLogPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogPageReq) ProtoMessage() {}

func (x *SysJobLogPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogPageReq.ProtoReflect.Descriptor instead.
func (*SysJobLogPageReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{1}
}

func (x *SysJobLogPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SysJobLogPageReq) GetParam() *SysJobLogReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type SysJobLogPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*SysJobLogData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SysJobLogPageReply) Reset() {
	*x = SysJobLogPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogPageReply) ProtoMessage() {}

func (x *SysJobLogPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogPageReply.ProtoReflect.Descriptor instead.
func (*SysJobLogPageReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{2}
}

func (x *SysJobLogPageReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysJobLogPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysJobLogPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SysJobLogPageReply) GetItems() []*SysJobLogData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type SysJobLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//编码
	JobId int64 `protobuf:"varint,2,opt,name=jobId,proto3" json:"jobId,omitempty"`
	//名称
	JobName string `protobuf:"bytes,3,opt,name=jobName,proto3" json:"jobName,omitempty"`
	//job启动时返回的id
	EntryId int32 `protobuf:"varint,4,opt,name=entryId,proto3" json:"entryId,omitempty"`
	//状态
	Status bool `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	//耗时
	Duration *durationpb.Duration `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	//执行详情,错误信息
	Info string `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,10,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,11,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,12,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysJobLogReq) Reset() {
	*x = SysJobLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogReq) ProtoMessage() {}

func (x *SysJobLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogReq.ProtoReflect.Descriptor instead.
func (*SysJobLogReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{3}
}

func (x *SysJobLogReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysJobLogReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *SysJobLogReq) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *SysJobLogReq) GetEntryId() int32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *SysJobLogReq) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SysJobLogReq) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *SysJobLogReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

func (x *SysJobLogReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysJobLogReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysJobLogReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysJobLogReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysJobLogReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type SysJobLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysJobLogData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysJobLogReply) Reset() {
	*x = SysJobLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogReply) ProtoMessage() {}

func (x *SysJobLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogReply.ProtoReflect.Descriptor instead.
func (*SysJobLogReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{4}
}

func (x *SysJobLogReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysJobLogReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysJobLogReply) GetResult() *SysJobLogData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建SysJobLog请求
type SysJobLogCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//编码
	JobId int64 `protobuf:"varint,1,opt,name=jobId,proto3" json:"jobId,omitempty"`
	//名称
	JobName string `protobuf:"bytes,2,opt,name=jobName,proto3" json:"jobName,omitempty"`
	//job启动时返回的id
	EntryId int32 `protobuf:"varint,3,opt,name=entryId,proto3" json:"entryId,omitempty"`
	//状态
	Status bool `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	//耗时
	Duration *durationpb.Duration `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	//执行详情,错误信息
	Info string `protobuf:"bytes,6,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SysJobLogCreateReq) Reset() {
	*x = SysJobLogCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogCreateReq) ProtoMessage() {}

func (x *SysJobLogCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogCreateReq.ProtoReflect.Descriptor instead.
func (*SysJobLogCreateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{5}
}

func (x *SysJobLogCreateReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *SysJobLogCreateReq) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *SysJobLogCreateReq) GetEntryId() int32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *SysJobLogCreateReq) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SysJobLogCreateReq) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *SysJobLogCreateReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

// 创建SysJobLog返回
type SysJobLogCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysJobLogData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysJobLogCreateReply) Reset() {
	*x = SysJobLogCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogCreateReply) ProtoMessage() {}

func (x *SysJobLogCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogCreateReply.ProtoReflect.Descriptor instead.
func (*SysJobLogCreateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{6}
}

func (x *SysJobLogCreateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysJobLogCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysJobLogCreateReply) GetResult() *SysJobLogData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新SysJobLog请求
type SysJobLogUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//编码
	JobId int64 `protobuf:"varint,2,opt,name=jobId,proto3" json:"jobId,omitempty"`
	//名称
	JobName string `protobuf:"bytes,3,opt,name=jobName,proto3" json:"jobName,omitempty"`
	//job启动时返回的id
	EntryId int32 `protobuf:"varint,4,opt,name=entryId,proto3" json:"entryId,omitempty"`
	//状态
	Status bool `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	//耗时
	Duration *durationpb.Duration `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	//执行详情,错误信息
	Info string `protobuf:"bytes,7,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SysJobLogUpdateReq) Reset() {
	*x = SysJobLogUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogUpdateReq) ProtoMessage() {}

func (x *SysJobLogUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogUpdateReq.ProtoReflect.Descriptor instead.
func (*SysJobLogUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{7}
}

func (x *SysJobLogUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysJobLogUpdateReq) GetJobId() int64 {
	if x != nil {
		return x.JobId
	}
	return 0
}

func (x *SysJobLogUpdateReq) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *SysJobLogUpdateReq) GetEntryId() int32 {
	if x != nil {
		return x.EntryId
	}
	return 0
}

func (x *SysJobLogUpdateReq) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *SysJobLogUpdateReq) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (x *SysJobLogUpdateReq) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

// 更新SysJobLog返回
type SysJobLogUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysJobLogData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysJobLogUpdateReply) Reset() {
	*x = SysJobLogUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogUpdateReply) ProtoMessage() {}

func (x *SysJobLogUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogUpdateReply.ProtoReflect.Descriptor instead.
func (*SysJobLogUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{8}
}

func (x *SysJobLogUpdateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysJobLogUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysJobLogUpdateReply) GetResult() *SysJobLogData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除SysJobLog请求
type SysJobLogDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SysJobLogDeleteReq) Reset() {
	*x = SysJobLogDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogDeleteReq) ProtoMessage() {}

func (x *SysJobLogDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogDeleteReq.ProtoReflect.Descriptor instead.
func (*SysJobLogDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{9}
}

func (x *SysJobLogDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除SysJobLog请求
type SysJobLogBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SysJobLogBatchDeleteReq) Reset() {
	*x = SysJobLogBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogBatchDeleteReq) ProtoMessage() {}

func (x *SysJobLogBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*SysJobLogBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{10}
}

func (x *SysJobLogBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除SysJobLog返回
type SysJobLogDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysJobLogDeleteReply) Reset() {
	*x = SysJobLogDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysJobLogDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysJobLogDeleteReply) ProtoMessage() {}

func (x *SysJobLogDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysJobLogDeleteReply.ProtoReflect.Descriptor instead.
func (*SysJobLogDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP(), []int{11}
}

func (x *SysJobLogDeleteReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysJobLogDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysJobLogDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_admin_sysjoblog_v1_sys_job_log_proto protoreflect.FileDescriptor

var file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDesc = []byte{
	0x0a, 0x28, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x6a,
	0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x6a, 0x6f, 0x62,
	0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x79, 0x73, 0x6a,
	0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x94, 0x03, 0x0a, 0x0d, 0x53, 0x79, 0x73, 0x4a, 0x6f,
	0x62, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6d, 0x0a,
	0x10, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x6a,
	0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c,
	0x6f, 0x67, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x8b, 0x01, 0x0a,
	0x12, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x31, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x93, 0x03, 0x0a, 0x0c, 0x53,
	0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x73, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x33, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x01, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62,
	0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x6a, 0x6f, 0x62, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35,
	0x0a, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x79, 0x0a, 0x14, 0x53, 0x79, 0x73,
	0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x33, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0xd1, 0x01, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c,
	0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6a,
	0x6f, 0x62, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6a, 0x6f, 0x62, 0x49,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x79, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x4a,
	0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x33,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x24, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2b, 0x0a, 0x17, 0x53, 0x79, 0x73,
	0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x5c, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62,
	0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x32, 0xc9, 0x05, 0x0a, 0x09, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c,
	0x6f, 0x67, 0x12, 0x72, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c,
	0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x6c, 0x6f,
	0x67, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x66, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73,
	0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x52,
	0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79,
	0x73, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x78,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f,
	0x67, 0x12, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x1a,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x6c, 0x6f, 0x67,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x73, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x12, 0x20, 0x2e, 0x73, 0x79,
	0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f,
	0x62, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e,
	0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x73,
	0x79, 0x73, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x6c, 0x6f, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x75, 0x0a,
	0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67,
	0x12, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x6c, 0x6f, 0x67, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7a, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x12, 0x25, 0x2e, 0x73,
	0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a,
	0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x2a,
	0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x6a, 0x6f, 0x62, 0x2f, 0x6c, 0x6f, 0x67,
	0x42, 0x20, 0x5a, 0x1e, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x6a, 0x6f, 0x62, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x3b,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescOnce sync.Once
	file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescData = file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDesc
)

func file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescGZIP() []byte {
	file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescOnce.Do(func() {
		file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescData)
	})
	return file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDescData
}

var file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_admin_sysjoblog_v1_sys_job_log_proto_goTypes = []interface{}{
	(*SysJobLogData)(nil),           // 0: sysjoblog.v1.SysJobLogData
	(*SysJobLogPageReq)(nil),        // 1: sysjoblog.v1.SysJobLogPageReq
	(*SysJobLogPageReply)(nil),      // 2: sysjoblog.v1.SysJobLogPageReply
	(*SysJobLogReq)(nil),            // 3: sysjoblog.v1.SysJobLogReq
	(*SysJobLogReply)(nil),          // 4: sysjoblog.v1.SysJobLogReply
	(*SysJobLogCreateReq)(nil),      // 5: sysjoblog.v1.SysJobLogCreateReq
	(*SysJobLogCreateReply)(nil),    // 6: sysjoblog.v1.SysJobLogCreateReply
	(*SysJobLogUpdateReq)(nil),      // 7: sysjoblog.v1.SysJobLogUpdateReq
	(*SysJobLogUpdateReply)(nil),    // 8: sysjoblog.v1.SysJobLogUpdateReply
	(*SysJobLogDeleteReq)(nil),      // 9: sysjoblog.v1.SysJobLogDeleteReq
	(*SysJobLogBatchDeleteReq)(nil), // 10: sysjoblog.v1.SysJobLogBatchDeleteReq
	(*SysJobLogDeleteReply)(nil),    // 11: sysjoblog.v1.SysJobLogDeleteReply
	(*durationpb.Duration)(nil),     // 12: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),   // 13: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),        // 14: pagin.Pagination
}
var file_api_admin_sysjoblog_v1_sys_job_log_proto_depIdxs = []int32{
	12, // 0: sysjoblog.v1.SysJobLogData.duration:type_name -> google.protobuf.Duration
	13, // 1: sysjoblog.v1.SysJobLogData.createdAt:type_name -> google.protobuf.Timestamp
	13, // 2: sysjoblog.v1.SysJobLogData.updatedAt:type_name -> google.protobuf.Timestamp
	14, // 3: sysjoblog.v1.SysJobLogPageReq.pagin:type_name -> pagin.Pagination
	3,  // 4: sysjoblog.v1.SysJobLogPageReq.param:type_name -> sysjoblog.v1.SysJobLogReq
	0,  // 5: sysjoblog.v1.SysJobLogPageReply.items:type_name -> sysjoblog.v1.SysJobLogData
	12, // 6: sysjoblog.v1.SysJobLogReq.duration:type_name -> google.protobuf.Duration
	13, // 7: sysjoblog.v1.SysJobLogReq.createdAt:type_name -> google.protobuf.Timestamp
	13, // 8: sysjoblog.v1.SysJobLogReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 9: sysjoblog.v1.SysJobLogReply.result:type_name -> sysjoblog.v1.SysJobLogData
	12, // 10: sysjoblog.v1.SysJobLogCreateReq.duration:type_name -> google.protobuf.Duration
	0,  // 11: sysjoblog.v1.SysJobLogCreateReply.result:type_name -> sysjoblog.v1.SysJobLogData
	12, // 12: sysjoblog.v1.SysJobLogUpdateReq.duration:type_name -> google.protobuf.Duration
	0,  // 13: sysjoblog.v1.SysJobLogUpdateReply.result:type_name -> sysjoblog.v1.SysJobLogData
	1,  // 14: sysjoblog.v1.SysJobLog.GetSysJobLogPage:input_type -> sysjoblog.v1.SysJobLogPageReq
	3,  // 15: sysjoblog.v1.SysJobLog.GetSysJobLog:input_type -> sysjoblog.v1.SysJobLogReq
	7,  // 16: sysjoblog.v1.SysJobLog.UpdateSysJobLog:input_type -> sysjoblog.v1.SysJobLogUpdateReq
	5,  // 17: sysjoblog.v1.SysJobLog.CreateSysJobLog:input_type -> sysjoblog.v1.SysJobLogCreateReq
	9,  // 18: sysjoblog.v1.SysJobLog.DeleteSysJobLog:input_type -> sysjoblog.v1.SysJobLogDeleteReq
	10, // 19: sysjoblog.v1.SysJobLog.BatchDeleteSysJobLog:input_type -> sysjoblog.v1.SysJobLogBatchDeleteReq
	2,  // 20: sysjoblog.v1.SysJobLog.GetSysJobLogPage:output_type -> sysjoblog.v1.SysJobLogPageReply
	4,  // 21: sysjoblog.v1.SysJobLog.GetSysJobLog:output_type -> sysjoblog.v1.SysJobLogReply
	8,  // 22: sysjoblog.v1.SysJobLog.UpdateSysJobLog:output_type -> sysjoblog.v1.SysJobLogUpdateReply
	6,  // 23: sysjoblog.v1.SysJobLog.CreateSysJobLog:output_type -> sysjoblog.v1.SysJobLogCreateReply
	11, // 24: sysjoblog.v1.SysJobLog.DeleteSysJobLog:output_type -> sysjoblog.v1.SysJobLogDeleteReply
	11, // 25: sysjoblog.v1.SysJobLog.BatchDeleteSysJobLog:output_type -> sysjoblog.v1.SysJobLogDeleteReply
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_admin_sysjoblog_v1_sys_job_log_proto_init() }
func file_api_admin_sysjoblog_v1_sys_job_log_proto_init() {
	if File_api_admin_sysjoblog_v1_sys_job_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysJobLogDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_admin_sysjoblog_v1_sys_job_log_proto_goTypes,
		DependencyIndexes: file_api_admin_sysjoblog_v1_sys_job_log_proto_depIdxs,
		MessageInfos:      file_api_admin_sysjoblog_v1_sys_job_log_proto_msgTypes,
	}.Build()
	File_api_admin_sysjoblog_v1_sys_job_log_proto = out.File
	file_api_admin_sysjoblog_v1_sys_job_log_proto_rawDesc = nil
	file_api_admin_sysjoblog_v1_sys_job_log_proto_goTypes = nil
	file_api_admin_sysjoblog_v1_sys_job_log_proto_depIdxs = nil
}
