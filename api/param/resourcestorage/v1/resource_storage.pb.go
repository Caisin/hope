// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/param/resourcestorage/v1/resource_storage.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type ResourceStoragePageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *ResourceStorageReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *ResourceStoragePageReq) Reset() {
	*x = ResourceStoragePageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStoragePageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStoragePageReq) ProtoMessage() {}

func (x *ResourceStoragePageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStoragePageReq.ProtoReflect.Descriptor instead.
func (*ResourceStoragePageReq) Descriptor() ([]byte, []int) {
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP(), []int{0}
}

func (x *ResourceStoragePageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *ResourceStoragePageReq) GetParam() *ResourceStorageReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type ResourceStoragePageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*ResourceStorageReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ResourceStoragePageReply) Reset() {
	*x = ResourceStoragePageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStoragePageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStoragePageReply) ProtoMessage() {}

func (x *ResourceStoragePageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStoragePageReply.ProtoReflect.Descriptor instead.
func (*ResourceStoragePageReply) Descriptor() ([]byte, []int) {
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceStoragePageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *ResourceStoragePageReply) GetItems() []*ResourceStorageReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type ResourceStorageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//分组
	GroupId int32 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	//存储类型 1
	StorageType int32 `protobuf:"varint,3,opt,name=storageType,proto3" json:"storageType,omitempty"`
	//文件真实的名称
	RealName string `protobuf:"bytes,4,opt,name=realName,proto3" json:"realName,omitempty"`
	//Bucket 识别符(七牛)
	Bucket string `protobuf:"bytes,5,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//文件名称
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	//后缀
	Suffix string `protobuf:"bytes,7,opt,name=suffix,proto3" json:"suffix,omitempty"`
	//路径
	Path string `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	//类型
	Type string `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	//大小
	Size string `protobuf:"bytes,10,opt,name=size,proto3" json:"size,omitempty"`
	//(sm.sm)删除的URL
	DeleteUrl string `protobuf:"bytes,11,opt,name=deleteUrl,proto3" json:"deleteUrl,omitempty"`
	//(sm.sm)图片名称
	Filename string `protobuf:"bytes,12,opt,name=filename,proto3" json:"filename,omitempty"`
	//文件名(七牛)
	Key string `protobuf:"bytes,13,opt,name=key,proto3" json:"key,omitempty"`
	//(sm.sm)图片高度
	Height string `protobuf:"bytes,14,opt,name=height,proto3" json:"height,omitempty"`
	//(sm.sm)图片地址
	Url string `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`
	//(sm.sm)用户名称
	Username string `protobuf:"bytes,16,opt,name=username,proto3" json:"username,omitempty"`
	//(sm.sm)图片宽度
	Width string `protobuf:"bytes,17,opt,name=width,proto3" json:"width,omitempty"`
	//(sm.sm)文件的MD5值
	Md5Code string `protobuf:"bytes,18,opt,name=md5code,proto3" json:"md5code,omitempty"`
	//备注
	Remark string `protobuf:"bytes,19,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,22,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,23,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,24,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *ResourceStorageReq) Reset() {
	*x = ResourceStorageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStorageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStorageReq) ProtoMessage() {}

func (x *ResourceStorageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStorageReq.ProtoReflect.Descriptor instead.
func (*ResourceStorageReq) Descriptor() ([]byte, []int) {
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP(), []int{2}
}

func (x *ResourceStorageReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResourceStorageReq) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ResourceStorageReq) GetStorageType() int32 {
	if x != nil {
		return x.StorageType
	}
	return 0
}

func (x *ResourceStorageReq) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *ResourceStorageReq) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ResourceStorageReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceStorageReq) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *ResourceStorageReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ResourceStorageReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ResourceStorageReq) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ResourceStorageReq) GetDeleteUrl() string {
	if x != nil {
		return x.DeleteUrl
	}
	return ""
}

func (x *ResourceStorageReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ResourceStorageReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ResourceStorageReq) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *ResourceStorageReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResourceStorageReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ResourceStorageReq) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *ResourceStorageReq) GetMd5Code() string {
	if x != nil {
		return x.Md5Code
	}
	return ""
}

func (x *ResourceStorageReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ResourceStorageReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ResourceStorageReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ResourceStorageReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ResourceStorageReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ResourceStorageReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type ResourceStorageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//分组
	GroupId int32 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	//存储类型 1
	StorageType int32 `protobuf:"varint,3,opt,name=storageType,proto3" json:"storageType,omitempty"`
	//文件真实的名称
	RealName string `protobuf:"bytes,4,opt,name=realName,proto3" json:"realName,omitempty"`
	//Bucket 识别符(七牛)
	Bucket string `protobuf:"bytes,5,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//文件名称
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	//后缀
	Suffix string `protobuf:"bytes,7,opt,name=suffix,proto3" json:"suffix,omitempty"`
	//路径
	Path string `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	//类型
	Type string `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	//大小
	Size string `protobuf:"bytes,10,opt,name=size,proto3" json:"size,omitempty"`
	//(sm.sm)删除的URL
	DeleteUrl string `protobuf:"bytes,11,opt,name=deleteUrl,proto3" json:"deleteUrl,omitempty"`
	//(sm.sm)图片名称
	Filename string `protobuf:"bytes,12,opt,name=filename,proto3" json:"filename,omitempty"`
	//文件名(七牛)
	Key string `protobuf:"bytes,13,opt,name=key,proto3" json:"key,omitempty"`
	//(sm.sm)图片高度
	Height string `protobuf:"bytes,14,opt,name=height,proto3" json:"height,omitempty"`
	//(sm.sm)图片地址
	Url string `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`
	//(sm.sm)用户名称
	Username string `protobuf:"bytes,16,opt,name=username,proto3" json:"username,omitempty"`
	//(sm.sm)图片宽度
	Width string `protobuf:"bytes,17,opt,name=width,proto3" json:"width,omitempty"`
	//(sm.sm)文件的MD5值
	Md5Code string `protobuf:"bytes,18,opt,name=md5code,proto3" json:"md5code,omitempty"`
	//备注
	Remark string `protobuf:"bytes,19,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,22,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,23,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,24,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *ResourceStorageReply) Reset() {
	*x = ResourceStorageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStorageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStorageReply) ProtoMessage() {}

func (x *ResourceStorageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStorageReply.ProtoReflect.Descriptor instead.
func (*ResourceStorageReply) Descriptor() ([]byte, []int) {
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP(), []int{3}
}

func (x *ResourceStorageReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResourceStorageReply) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ResourceStorageReply) GetStorageType() int32 {
	if x != nil {
		return x.StorageType
	}
	return 0
}

func (x *ResourceStorageReply) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *ResourceStorageReply) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ResourceStorageReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceStorageReply) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *ResourceStorageReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ResourceStorageReply) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ResourceStorageReply) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ResourceStorageReply) GetDeleteUrl() string {
	if x != nil {
		return x.DeleteUrl
	}
	return ""
}

func (x *ResourceStorageReply) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ResourceStorageReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ResourceStorageReply) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *ResourceStorageReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResourceStorageReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ResourceStorageReply) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *ResourceStorageReply) GetMd5Code() string {
	if x != nil {
		return x.Md5Code
	}
	return ""
}

func (x *ResourceStorageReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ResourceStorageReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ResourceStorageReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ResourceStorageReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ResourceStorageReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ResourceStorageReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建ResourceStorage请求
type ResourceStorageCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分组
	GroupId int32 `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	//存储类型 1
	StorageType int32 `protobuf:"varint,2,opt,name=storageType,proto3" json:"storageType,omitempty"`
	//文件真实的名称
	RealName string `protobuf:"bytes,3,opt,name=realName,proto3" json:"realName,omitempty"`
	//Bucket 识别符(七牛)
	Bucket string `protobuf:"bytes,4,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//文件名称
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	//后缀
	Suffix string `protobuf:"bytes,6,opt,name=suffix,proto3" json:"suffix,omitempty"`
	//路径
	Path string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	//类型
	Type string `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`
	//大小
	Size string `protobuf:"bytes,9,opt,name=size,proto3" json:"size,omitempty"`
	//(sm.sm)删除的URL
	DeleteUrl string `protobuf:"bytes,10,opt,name=deleteUrl,proto3" json:"deleteUrl,omitempty"`
	//(sm.sm)图片名称
	Filename string `protobuf:"bytes,11,opt,name=filename,proto3" json:"filename,omitempty"`
	//文件名(七牛)
	Key string `protobuf:"bytes,12,opt,name=key,proto3" json:"key,omitempty"`
	//(sm.sm)图片高度
	Height string `protobuf:"bytes,13,opt,name=height,proto3" json:"height,omitempty"`
	//(sm.sm)图片地址
	Url string `protobuf:"bytes,14,opt,name=url,proto3" json:"url,omitempty"`
	//(sm.sm)用户名称
	Username string `protobuf:"bytes,15,opt,name=username,proto3" json:"username,omitempty"`
	//(sm.sm)图片宽度
	Width string `protobuf:"bytes,16,opt,name=width,proto3" json:"width,omitempty"`
	//(sm.sm)文件的MD5值
	Md5Code string `protobuf:"bytes,17,opt,name=md5code,proto3" json:"md5code,omitempty"`
	//备注
	Remark string `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ResourceStorageCreateReq) Reset() {
	*x = ResourceStorageCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStorageCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStorageCreateReq) ProtoMessage() {}

func (x *ResourceStorageCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStorageCreateReq.ProtoReflect.Descriptor instead.
func (*ResourceStorageCreateReq) Descriptor() ([]byte, []int) {
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP(), []int{4}
}

func (x *ResourceStorageCreateReq) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ResourceStorageCreateReq) GetStorageType() int32 {
	if x != nil {
		return x.StorageType
	}
	return 0
}

func (x *ResourceStorageCreateReq) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetDeleteUrl() string {
	if x != nil {
		return x.DeleteUrl
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetMd5Code() string {
	if x != nil {
		return x.Md5Code
	}
	return ""
}

func (x *ResourceStorageCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建ResourceStorage返回
type ResourceStorageCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//分组
	GroupId int32 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	//存储类型 1
	StorageType int32 `protobuf:"varint,3,opt,name=storageType,proto3" json:"storageType,omitempty"`
	//文件真实的名称
	RealName string `protobuf:"bytes,4,opt,name=realName,proto3" json:"realName,omitempty"`
	//Bucket 识别符(七牛)
	Bucket string `protobuf:"bytes,5,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//文件名称
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	//后缀
	Suffix string `protobuf:"bytes,7,opt,name=suffix,proto3" json:"suffix,omitempty"`
	//路径
	Path string `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	//类型
	Type string `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	//大小
	Size string `protobuf:"bytes,10,opt,name=size,proto3" json:"size,omitempty"`
	//(sm.sm)删除的URL
	DeleteUrl string `protobuf:"bytes,11,opt,name=deleteUrl,proto3" json:"deleteUrl,omitempty"`
	//(sm.sm)图片名称
	Filename string `protobuf:"bytes,12,opt,name=filename,proto3" json:"filename,omitempty"`
	//文件名(七牛)
	Key string `protobuf:"bytes,13,opt,name=key,proto3" json:"key,omitempty"`
	//(sm.sm)图片高度
	Height string `protobuf:"bytes,14,opt,name=height,proto3" json:"height,omitempty"`
	//(sm.sm)图片地址
	Url string `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`
	//(sm.sm)用户名称
	Username string `protobuf:"bytes,16,opt,name=username,proto3" json:"username,omitempty"`
	//(sm.sm)图片宽度
	Width string `protobuf:"bytes,17,opt,name=width,proto3" json:"width,omitempty"`
	//(sm.sm)文件的MD5值
	Md5Code string `protobuf:"bytes,18,opt,name=md5code,proto3" json:"md5code,omitempty"`
	//备注
	Remark string `protobuf:"bytes,19,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,22,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,23,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,24,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *ResourceStorageCreateReply) Reset() {
	*x = ResourceStorageCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStorageCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStorageCreateReply) ProtoMessage() {}

func (x *ResourceStorageCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStorageCreateReply.ProtoReflect.Descriptor instead.
func (*ResourceStorageCreateReply) Descriptor() ([]byte, []int) {
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP(), []int{5}
}

func (x *ResourceStorageCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResourceStorageCreateReply) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ResourceStorageCreateReply) GetStorageType() int32 {
	if x != nil {
		return x.StorageType
	}
	return 0
}

func (x *ResourceStorageCreateReply) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetDeleteUrl() string {
	if x != nil {
		return x.DeleteUrl
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetMd5Code() string {
	if x != nil {
		return x.Md5Code
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *ResourceStorageCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ResourceStorageCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ResourceStorageCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ResourceStorageCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ResourceStorageCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新ResourceStorage请求
type ResourceStorageUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//分组
	GroupId int32 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	//存储类型 1
	StorageType int32 `protobuf:"varint,3,opt,name=storageType,proto3" json:"storageType,omitempty"`
	//文件真实的名称
	RealName string `protobuf:"bytes,4,opt,name=realName,proto3" json:"realName,omitempty"`
	//Bucket 识别符(七牛)
	Bucket string `protobuf:"bytes,5,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//文件名称
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	//后缀
	Suffix string `protobuf:"bytes,7,opt,name=suffix,proto3" json:"suffix,omitempty"`
	//路径
	Path string `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	//类型
	Type string `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	//大小
	Size string `protobuf:"bytes,10,opt,name=size,proto3" json:"size,omitempty"`
	//(sm.sm)删除的URL
	DeleteUrl string `protobuf:"bytes,11,opt,name=deleteUrl,proto3" json:"deleteUrl,omitempty"`
	//(sm.sm)图片名称
	Filename string `protobuf:"bytes,12,opt,name=filename,proto3" json:"filename,omitempty"`
	//文件名(七牛)
	Key string `protobuf:"bytes,13,opt,name=key,proto3" json:"key,omitempty"`
	//(sm.sm)图片高度
	Height string `protobuf:"bytes,14,opt,name=height,proto3" json:"height,omitempty"`
	//(sm.sm)图片地址
	Url string `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`
	//(sm.sm)用户名称
	Username string `protobuf:"bytes,16,opt,name=username,proto3" json:"username,omitempty"`
	//(sm.sm)图片宽度
	Width string `protobuf:"bytes,17,opt,name=width,proto3" json:"width,omitempty"`
	//(sm.sm)文件的MD5值
	Md5Code string `protobuf:"bytes,18,opt,name=md5code,proto3" json:"md5code,omitempty"`
	//备注
	Remark string `protobuf:"bytes,19,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ResourceStorageUpdateReq) Reset() {
	*x = ResourceStorageUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStorageUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStorageUpdateReq) ProtoMessage() {}

func (x *ResourceStorageUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStorageUpdateReq.ProtoReflect.Descriptor instead.
func (*ResourceStorageUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP(), []int{6}
}

func (x *ResourceStorageUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResourceStorageUpdateReq) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ResourceStorageUpdateReq) GetStorageType() int32 {
	if x != nil {
		return x.StorageType
	}
	return 0
}

func (x *ResourceStorageUpdateReq) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetDeleteUrl() string {
	if x != nil {
		return x.DeleteUrl
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetMd5Code() string {
	if x != nil {
		return x.Md5Code
	}
	return ""
}

func (x *ResourceStorageUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新ResourceStorage返回
type ResourceStorageUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//分组
	GroupId int32 `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	//存储类型 1
	StorageType int32 `protobuf:"varint,3,opt,name=storageType,proto3" json:"storageType,omitempty"`
	//文件真实的名称
	RealName string `protobuf:"bytes,4,opt,name=realName,proto3" json:"realName,omitempty"`
	//Bucket 识别符(七牛)
	Bucket string `protobuf:"bytes,5,opt,name=bucket,proto3" json:"bucket,omitempty"`
	//文件名称
	Name string `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	//后缀
	Suffix string `protobuf:"bytes,7,opt,name=suffix,proto3" json:"suffix,omitempty"`
	//路径
	Path string `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	//类型
	Type string `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`
	//大小
	Size string `protobuf:"bytes,10,opt,name=size,proto3" json:"size,omitempty"`
	//(sm.sm)删除的URL
	DeleteUrl string `protobuf:"bytes,11,opt,name=deleteUrl,proto3" json:"deleteUrl,omitempty"`
	//(sm.sm)图片名称
	Filename string `protobuf:"bytes,12,opt,name=filename,proto3" json:"filename,omitempty"`
	//文件名(七牛)
	Key string `protobuf:"bytes,13,opt,name=key,proto3" json:"key,omitempty"`
	//(sm.sm)图片高度
	Height string `protobuf:"bytes,14,opt,name=height,proto3" json:"height,omitempty"`
	//(sm.sm)图片地址
	Url string `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`
	//(sm.sm)用户名称
	Username string `protobuf:"bytes,16,opt,name=username,proto3" json:"username,omitempty"`
	//(sm.sm)图片宽度
	Width string `protobuf:"bytes,17,opt,name=width,proto3" json:"width,omitempty"`
	//(sm.sm)文件的MD5值
	Md5Code string `protobuf:"bytes,18,opt,name=md5code,proto3" json:"md5code,omitempty"`
	//备注
	Remark string `protobuf:"bytes,19,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *ResourceStorageUpdateReply) Reset() {
	*x = ResourceStorageUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStorageUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStorageUpdateReply) ProtoMessage() {}

func (x *ResourceStorageUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStorageUpdateReply.ProtoReflect.Descriptor instead.
func (*ResourceStorageUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP(), []int{7}
}

func (x *ResourceStorageUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResourceStorageUpdateReply) GetGroupId() int32 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ResourceStorageUpdateReply) GetStorageType() int32 {
	if x != nil {
		return x.StorageType
	}
	return 0
}

func (x *ResourceStorageUpdateReply) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetDeleteUrl() string {
	if x != nil {
		return x.DeleteUrl
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetHeight() string {
	if x != nil {
		return x.Height
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetWidth() string {
	if x != nil {
		return x.Width
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetMd5Code() string {
	if x != nil {
		return x.Md5Code
	}
	return ""
}

func (x *ResourceStorageUpdateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 删除ResourceStorage请求
type ResourceStorageDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ResourceStorageDeleteReq) Reset() {
	*x = ResourceStorageDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStorageDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStorageDeleteReq) ProtoMessage() {}

func (x *ResourceStorageDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStorageDeleteReq.ProtoReflect.Descriptor instead.
func (*ResourceStorageDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceStorageDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除ResourceStorage请求
type ResourceStorageBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ResourceStorageBatchDeleteReq) Reset() {
	*x = ResourceStorageBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStorageBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStorageBatchDeleteReq) ProtoMessage() {}

func (x *ResourceStorageBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStorageBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*ResourceStorageBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP(), []int{9}
}

func (x *ResourceStorageBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除ResourceStorage返回
type ResourceStorageDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ResourceStorageDeleteReply) Reset() {
	*x = ResourceStorageDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceStorageDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceStorageDeleteReply) ProtoMessage() {}

func (x *ResourceStorageDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceStorageDeleteReply.ProtoReflect.Descriptor instead.
func (*ResourceStorageDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP(), []int{10}
}

func (x *ResourceStorageDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_param_resourcestorage_v1_resource_storage_proto protoreflect.FileDescriptor

var file_api_param_resourcestorage_v1_resource_storage_proto_rawDesc = []byte{
	0x0a, 0x33, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7f, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x3c, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x83, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50, 0x61, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x3e,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x9e,
	0x05, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66,
	0x66, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69,
	0x78, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x64, 0x35, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x64, 0x35, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0xa0, 0x05, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75,
	0x66, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x64, 0x35, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x64, 0x35, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0xcc, 0x03, 0x0a, 0x18, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x64, 0x35, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x64, 0x35, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0xa6, 0x05, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x64, 0x35, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x64, 0x35, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xdc, 0x03, 0x0a, 0x18, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75, 0x66,
	0x66, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x64, 0x35, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x64, 0x35, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xde, 0x03, 0x0a, 0x1a, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x75,
	0x66, 0x66, 0x69, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x64, 0x35, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x64, 0x35, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x2a, 0x0a, 0x18, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x31, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x34, 0x0a, 0x1a, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32,
	0xa7, 0x07, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x12, 0x95, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2a,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b,
	0x12, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x73,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x26, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x76,
	0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9b, 0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x12, 0x2c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72,
	0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x2e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x1a, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x96, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x98,
	0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x2a, 0x19,
	0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9d, 0x01, 0x0a, 0x1a, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x31, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x2f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x42, 0x26, 0x5a, 0x24, 0x68, 0x6f, 0x70,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_param_resourcestorage_v1_resource_storage_proto_rawDescOnce sync.Once
	file_api_param_resourcestorage_v1_resource_storage_proto_rawDescData = file_api_param_resourcestorage_v1_resource_storage_proto_rawDesc
)

func file_api_param_resourcestorage_v1_resource_storage_proto_rawDescGZIP() []byte {
	file_api_param_resourcestorage_v1_resource_storage_proto_rawDescOnce.Do(func() {
		file_api_param_resourcestorage_v1_resource_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_param_resourcestorage_v1_resource_storage_proto_rawDescData)
	})
	return file_api_param_resourcestorage_v1_resource_storage_proto_rawDescData
}

var file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_param_resourcestorage_v1_resource_storage_proto_goTypes = []interface{}{
	(*ResourceStoragePageReq)(nil),        // 0: resourcestorage.v1.ResourceStoragePageReq
	(*ResourceStoragePageReply)(nil),      // 1: resourcestorage.v1.ResourceStoragePageReply
	(*ResourceStorageReq)(nil),            // 2: resourcestorage.v1.ResourceStorageReq
	(*ResourceStorageReply)(nil),          // 3: resourcestorage.v1.ResourceStorageReply
	(*ResourceStorageCreateReq)(nil),      // 4: resourcestorage.v1.ResourceStorageCreateReq
	(*ResourceStorageCreateReply)(nil),    // 5: resourcestorage.v1.ResourceStorageCreateReply
	(*ResourceStorageUpdateReq)(nil),      // 6: resourcestorage.v1.ResourceStorageUpdateReq
	(*ResourceStorageUpdateReply)(nil),    // 7: resourcestorage.v1.ResourceStorageUpdateReply
	(*ResourceStorageDeleteReq)(nil),      // 8: resourcestorage.v1.ResourceStorageDeleteReq
	(*ResourceStorageBatchDeleteReq)(nil), // 9: resourcestorage.v1.ResourceStorageBatchDeleteReq
	(*ResourceStorageDeleteReply)(nil),    // 10: resourcestorage.v1.ResourceStorageDeleteReply
	(*pagin.Pagination)(nil),              // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),         // 12: google.protobuf.Timestamp
}
var file_api_param_resourcestorage_v1_resource_storage_proto_depIdxs = []int32{
	11, // 0: resourcestorage.v1.ResourceStoragePageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: resourcestorage.v1.ResourceStoragePageReq.param:type_name -> resourcestorage.v1.ResourceStorageReq
	11, // 2: resourcestorage.v1.ResourceStoragePageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: resourcestorage.v1.ResourceStoragePageReply.items:type_name -> resourcestorage.v1.ResourceStorageReply
	12, // 4: resourcestorage.v1.ResourceStorageReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: resourcestorage.v1.ResourceStorageReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: resourcestorage.v1.ResourceStorageReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: resourcestorage.v1.ResourceStorageReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: resourcestorage.v1.ResourceStorageCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: resourcestorage.v1.ResourceStorageCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: resourcestorage.v1.ResourceStorage.GetPageResourceStorage:input_type -> resourcestorage.v1.ResourceStoragePageReq
	2,  // 11: resourcestorage.v1.ResourceStorage.GetResourceStorage:input_type -> resourcestorage.v1.ResourceStorageReq
	6,  // 12: resourcestorage.v1.ResourceStorage.UpdateResourceStorage:input_type -> resourcestorage.v1.ResourceStorageUpdateReq
	4,  // 13: resourcestorage.v1.ResourceStorage.CreateResourceStorage:input_type -> resourcestorage.v1.ResourceStorageCreateReq
	8,  // 14: resourcestorage.v1.ResourceStorage.DeleteResourceStorage:input_type -> resourcestorage.v1.ResourceStorageDeleteReq
	9,  // 15: resourcestorage.v1.ResourceStorage.BatchDeleteResourceStorage:input_type -> resourcestorage.v1.ResourceStorageBatchDeleteReq
	1,  // 16: resourcestorage.v1.ResourceStorage.GetPageResourceStorage:output_type -> resourcestorage.v1.ResourceStoragePageReply
	3,  // 17: resourcestorage.v1.ResourceStorage.GetResourceStorage:output_type -> resourcestorage.v1.ResourceStorageReply
	7,  // 18: resourcestorage.v1.ResourceStorage.UpdateResourceStorage:output_type -> resourcestorage.v1.ResourceStorageUpdateReply
	5,  // 19: resourcestorage.v1.ResourceStorage.CreateResourceStorage:output_type -> resourcestorage.v1.ResourceStorageCreateReply
	10, // 20: resourcestorage.v1.ResourceStorage.DeleteResourceStorage:output_type -> resourcestorage.v1.ResourceStorageDeleteReply
	10, // 21: resourcestorage.v1.ResourceStorage.BatchDeleteResourceStorage:output_type -> resourcestorage.v1.ResourceStorageDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_param_resourcestorage_v1_resource_storage_proto_init() }
func file_api_param_resourcestorage_v1_resource_storage_proto_init() {
	if File_api_param_resourcestorage_v1_resource_storage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStoragePageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStoragePageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStorageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStorageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStorageCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStorageCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStorageUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStorageUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStorageDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStorageBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceStorageDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_param_resourcestorage_v1_resource_storage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_param_resourcestorage_v1_resource_storage_proto_goTypes,
		DependencyIndexes: file_api_param_resourcestorage_v1_resource_storage_proto_depIdxs,
		MessageInfos:      file_api_param_resourcestorage_v1_resource_storage_proto_msgTypes,
	}.Build()
	File_api_param_resourcestorage_v1_resource_storage_proto = out.File
	file_api_param_resourcestorage_v1_resource_storage_proto_rawDesc = nil
	file_api_param_resourcestorage_v1_resource_storage_proto_goTypes = nil
	file_api_param_resourcestorage_v1_resource_storage_proto_depIdxs = nil
}
