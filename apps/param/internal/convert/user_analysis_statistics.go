// Code generated by Caisin. DO NOT EDIT.
// source: apps/param/internal/data/ent/schema/user_analysis_statistics.go

package convert

import (
	"google.golang.org/protobuf/types/known/timestamppb"
	v1 "hope/api/param/useranalysisstatistics/v1"
	"hope/apps/param/internal/data/ent"
)

func UserAnalysisStatisticsUpdateReq2Data(v *v1.UserAnalysisStatisticsUpdateReq) *ent.UserAnalysisStatistics {
	if v == nil {
		return nil
	}
	return &ent.UserAnalysisStatistics{
		ID:             v.Id,
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
	}
}

func UserAnalysisStatisticsData2UpdateReq(v *ent.UserAnalysisStatistics) *v1.UserAnalysisStatisticsUpdateReq {
	if v == nil {
		return nil
	}
	return &v1.UserAnalysisStatisticsUpdateReq{
		Id:             v.ID,
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
	}
}

func UserAnalysisStatisticsCreateReq2Data(v *v1.UserAnalysisStatisticsCreateReq) *ent.UserAnalysisStatistics {
	if v == nil {
		return nil
	}
	return &ent.UserAnalysisStatistics{
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
	}
}

func UserAnalysisStatisticsData2CreateReq(v *ent.UserAnalysisStatistics) *v1.UserAnalysisStatisticsCreateReq {
	if v == nil {
		return nil
	}
	return &v1.UserAnalysisStatisticsCreateReq{
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
	}
}

func UserAnalysisStatisticsReq2Data(v *v1.UserAnalysisStatisticsReq) *ent.UserAnalysisStatistics {
	if v == nil {
		return nil
	}
	return &ent.UserAnalysisStatistics{
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
	}
}

func UserAnalysisStatisticsData2Req(v *ent.UserAnalysisStatistics) *v1.UserAnalysisStatisticsReq {
	if v == nil {
		return nil
	}
	return &v1.UserAnalysisStatisticsReq{
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
	}
}

func UserAnalysisStatisticsReply2Data(v *v1.UserAnalysisStatisticsReply) *ent.UserAnalysisStatistics {
	if v == nil {
		return nil
	}
	return &ent.UserAnalysisStatistics{
		ID:             v.Id,
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
		DayOldArpu:     v.DayOldArpu,
		CreatedAt:      v.CreatedAt.AsTime(),
		UpdatedAt:      v.UpdatedAt.AsTime(),
		CreateBy:       v.CreateBy,
		UpdateBy:       v.UpdateBy,
		TenantId:       v.TenantId,
	}
}

func UserAnalysisStatisticsData2Reply(v *ent.UserAnalysisStatistics) *v1.UserAnalysisStatisticsReply {
	if v == nil {
		return nil
	}
	return &v1.UserAnalysisStatisticsReply{
		Id:             v.ID,
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
		DayOldArpu:     v.DayOldArpu,
		CreatedAt:      timestamppb.New(v.CreatedAt),
		UpdatedAt:      timestamppb.New(v.UpdatedAt),
		CreateBy:       v.CreateBy,
		UpdateBy:       v.UpdateBy,
		TenantId:       v.TenantId,
	}
}

func UserAnalysisStatisticsUpdateReply2Data(v *v1.UserAnalysisStatisticsUpdateReply) *ent.UserAnalysisStatistics {
	if v == nil {
		return nil
	}
	return &ent.UserAnalysisStatistics{
		ID:             v.Id,
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
	}
}

func UserAnalysisStatisticsData2UpdateReply(v *ent.UserAnalysisStatistics) *v1.UserAnalysisStatisticsUpdateReply {
	if v == nil {
		return nil
	}
	return &v1.UserAnalysisStatisticsUpdateReply{
		Id:             v.ID,
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
	}
}

func UserAnalysisStatisticsCreateReply2Data(v *v1.UserAnalysisStatisticsCreateReply) *ent.UserAnalysisStatistics {
	if v == nil {
		return nil
	}
	return &ent.UserAnalysisStatistics{
		ID:             v.Id,
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
		DayOldArpu:     v.DayOldArpu,
		CreatedAt:      v.CreatedAt.AsTime(),
		UpdatedAt:      v.UpdatedAt.AsTime(),
		CreateBy:       v.CreateBy,
		UpdateBy:       v.UpdateBy,
		TenantId:       v.TenantId,
	}
}

func UserAnalysisStatisticsData2CreateReply(v *ent.UserAnalysisStatistics) *v1.UserAnalysisStatisticsCreateReply {
	if v == nil {
		return nil
	}
	return &v1.UserAnalysisStatisticsCreateReply{
		Id:             v.ID,
		StatisticsDate: v.StatisticsDate,
		AllUserNum:     v.AllUserNum,
		AllPayment:     v.AllPayment,
		AllPayUser:     v.AllPayUser,
		AllOrderNum:    v.AllOrderNum,
		DayUserNum:     v.DayUserNum,
		DayPayment:     v.DayPayment,
		DayOrderNum:    v.DayOrderNum,
		DayPayUser:     v.DayPayUser,
		DayRegPayment:  v.DayRegPayment,
		DayRegUserNum:  v.DayRegUserNum,
		DayRegOrderNum: v.DayRegOrderNum,
		OldRegPayment:  v.OldRegPayment,
		OldRegUserNum:  v.OldRegUserNum,
		OldRegOrderNum: v.OldRegOrderNum,
		PayRate:        v.PayRate,
		Arpu:           v.Arpu,
		DayRegArpu:     v.DayRegArpu,
		DayArpu:        v.DayArpu,
		DayOldArpu:     v.DayOldArpu,
		CreatedAt:      timestamppb.New(v.CreatedAt),
		UpdatedAt:      timestamppb.New(v.UpdatedAt),
		CreateBy:       v.CreateBy,
		UpdateBy:       v.UpdateBy,
		TenantId:       v.TenantId,
	}
}
