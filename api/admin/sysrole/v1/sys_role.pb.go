// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/admin/sysrole/v1/sys_role.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type SysRoleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//角色名称
	RoleName string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
	//状态
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	//角色代码
	RoleKey string `protobuf:"bytes,4,opt,name=roleKey,proto3" json:"roleKey,omitempty"`
	//角色排序
	RoleSort int32 `protobuf:"varint,5,opt,name=roleSort,proto3" json:"roleSort,omitempty"`
	//标记
	Flag string `protobuf:"bytes,6,opt,name=flag,proto3" json:"flag,omitempty"`
	//备注
	Remark string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	//是否管理员
	Admin bool `protobuf:"varint,8,opt,name=admin,proto3" json:"admin,omitempty"`
	//1.全部数据权限 2.自定数据权限 3.本部门数据权限 4.本部门及以下数据权限 5.仅本人数据权限
	DataScope string `protobuf:"bytes,9,opt,name=dataScope,proto3" json:"dataScope,omitempty"`
	//
	SysDept string `protobuf:"bytes,10,opt,name=sysDept,proto3" json:"sysDept,omitempty"`
	//
	SysMenu string `protobuf:"bytes,11,opt,name=sysMenu,proto3" json:"sysMenu,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,14,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,15,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,16,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysRoleData) Reset() {
	*x = SysRoleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleData) ProtoMessage() {}

func (x *SysRoleData) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleData.ProtoReflect.Descriptor instead.
func (*SysRoleData) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{0}
}

func (x *SysRoleData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysRoleData) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *SysRoleData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysRoleData) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *SysRoleData) GetRoleSort() int32 {
	if x != nil {
		return x.RoleSort
	}
	return 0
}

func (x *SysRoleData) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *SysRoleData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysRoleData) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *SysRoleData) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *SysRoleData) GetSysDept() string {
	if x != nil {
		return x.SysDept
	}
	return ""
}

func (x *SysRoleData) GetSysMenu() string {
	if x != nil {
		return x.SysMenu
	}
	return ""
}

func (x *SysRoleData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysRoleData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysRoleData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysRoleData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysRoleData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type SysRolePageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *SysRoleReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *SysRolePageReq) Reset() {
	*x = SysRolePageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRolePageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRolePageReq) ProtoMessage() {}

func (x *SysRolePageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRolePageReq.ProtoReflect.Descriptor instead.
func (*SysRolePageReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{1}
}

func (x *SysRolePageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SysRolePageReq) GetParam() *SysRoleReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type SysRolePageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*SysRoleData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SysRolePageReply) Reset() {
	*x = SysRolePageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRolePageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRolePageReply) ProtoMessage() {}

func (x *SysRolePageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRolePageReply.ProtoReflect.Descriptor instead.
func (*SysRolePageReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{2}
}

func (x *SysRolePageReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysRolePageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysRolePageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SysRolePageReply) GetItems() []*SysRoleData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type SysRoleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//角色名称
	RoleName string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
	//状态
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	//角色代码
	RoleKey string `protobuf:"bytes,4,opt,name=roleKey,proto3" json:"roleKey,omitempty"`
	//角色排序
	RoleSort int32 `protobuf:"varint,5,opt,name=roleSort,proto3" json:"roleSort,omitempty"`
	//标记
	Flag string `protobuf:"bytes,6,opt,name=flag,proto3" json:"flag,omitempty"`
	//备注
	Remark string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	//是否管理员
	Admin bool `protobuf:"varint,8,opt,name=admin,proto3" json:"admin,omitempty"`
	//1.全部数据权限 2.自定数据权限 3.本部门数据权限 4.本部门及以下数据权限 5.仅本人数据权限
	DataScope string `protobuf:"bytes,9,opt,name=dataScope,proto3" json:"dataScope,omitempty"`
	//
	SysDept string `protobuf:"bytes,10,opt,name=sysDept,proto3" json:"sysDept,omitempty"`
	//
	SysMenu string `protobuf:"bytes,11,opt,name=sysMenu,proto3" json:"sysMenu,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,14,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,15,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,16,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysRoleReq) Reset() {
	*x = SysRoleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleReq) ProtoMessage() {}

func (x *SysRoleReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleReq.ProtoReflect.Descriptor instead.
func (*SysRoleReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{3}
}

func (x *SysRoleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysRoleReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *SysRoleReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysRoleReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *SysRoleReq) GetRoleSort() int32 {
	if x != nil {
		return x.RoleSort
	}
	return 0
}

func (x *SysRoleReq) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *SysRoleReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysRoleReq) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *SysRoleReq) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *SysRoleReq) GetSysDept() string {
	if x != nil {
		return x.SysDept
	}
	return ""
}

func (x *SysRoleReq) GetSysMenu() string {
	if x != nil {
		return x.SysMenu
	}
	return ""
}

func (x *SysRoleReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysRoleReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysRoleReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysRoleReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysRoleReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type SysRoleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysRoleData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysRoleReply) Reset() {
	*x = SysRoleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleReply) ProtoMessage() {}

func (x *SysRoleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleReply.ProtoReflect.Descriptor instead.
func (*SysRoleReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{4}
}

func (x *SysRoleReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysRoleReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysRoleReply) GetResult() *SysRoleData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建SysRole请求
type SysRoleCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//角色名称
	RoleName string `protobuf:"bytes,1,opt,name=roleName,proto3" json:"roleName,omitempty"`
	//状态
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	//角色代码
	RoleKey string `protobuf:"bytes,3,opt,name=roleKey,proto3" json:"roleKey,omitempty"`
	//角色排序
	RoleSort int32 `protobuf:"varint,4,opt,name=roleSort,proto3" json:"roleSort,omitempty"`
	//标记
	Flag string `protobuf:"bytes,5,opt,name=flag,proto3" json:"flag,omitempty"`
	//备注
	Remark string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark,omitempty"`
	//是否管理员
	Admin bool `protobuf:"varint,7,opt,name=admin,proto3" json:"admin,omitempty"`
	//1.全部数据权限 2.自定数据权限 3.本部门数据权限 4.本部门及以下数据权限 5.仅本人数据权限
	DataScope string `protobuf:"bytes,8,opt,name=dataScope,proto3" json:"dataScope,omitempty"`
	//
	SysDept string `protobuf:"bytes,9,opt,name=sysDept,proto3" json:"sysDept,omitempty"`
	//
	SysMenu string `protobuf:"bytes,10,opt,name=sysMenu,proto3" json:"sysMenu,omitempty"`
}

func (x *SysRoleCreateReq) Reset() {
	*x = SysRoleCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleCreateReq) ProtoMessage() {}

func (x *SysRoleCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleCreateReq.ProtoReflect.Descriptor instead.
func (*SysRoleCreateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{5}
}

func (x *SysRoleCreateReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *SysRoleCreateReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysRoleCreateReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *SysRoleCreateReq) GetRoleSort() int32 {
	if x != nil {
		return x.RoleSort
	}
	return 0
}

func (x *SysRoleCreateReq) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *SysRoleCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysRoleCreateReq) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *SysRoleCreateReq) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *SysRoleCreateReq) GetSysDept() string {
	if x != nil {
		return x.SysDept
	}
	return ""
}

func (x *SysRoleCreateReq) GetSysMenu() string {
	if x != nil {
		return x.SysMenu
	}
	return ""
}

// 创建SysRole返回
type SysRoleCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysRoleData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysRoleCreateReply) Reset() {
	*x = SysRoleCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleCreateReply) ProtoMessage() {}

func (x *SysRoleCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleCreateReply.ProtoReflect.Descriptor instead.
func (*SysRoleCreateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{6}
}

func (x *SysRoleCreateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysRoleCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysRoleCreateReply) GetResult() *SysRoleData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新SysRole请求
type SysRoleUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//角色名称
	RoleName string `protobuf:"bytes,2,opt,name=roleName,proto3" json:"roleName,omitempty"`
	//状态
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	//角色代码
	RoleKey string `protobuf:"bytes,4,opt,name=roleKey,proto3" json:"roleKey,omitempty"`
	//角色排序
	RoleSort int32 `protobuf:"varint,5,opt,name=roleSort,proto3" json:"roleSort,omitempty"`
	//标记
	Flag string `protobuf:"bytes,6,opt,name=flag,proto3" json:"flag,omitempty"`
	//备注
	Remark string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	//是否管理员
	Admin bool `protobuf:"varint,8,opt,name=admin,proto3" json:"admin,omitempty"`
	//1.全部数据权限 2.自定数据权限 3.本部门数据权限 4.本部门及以下数据权限 5.仅本人数据权限
	DataScope string `protobuf:"bytes,9,opt,name=dataScope,proto3" json:"dataScope,omitempty"`
	//
	SysDept string `protobuf:"bytes,10,opt,name=sysDept,proto3" json:"sysDept,omitempty"`
	//
	SysMenu string `protobuf:"bytes,11,opt,name=sysMenu,proto3" json:"sysMenu,omitempty"`
}

func (x *SysRoleUpdateReq) Reset() {
	*x = SysRoleUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleUpdateReq) ProtoMessage() {}

func (x *SysRoleUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleUpdateReq.ProtoReflect.Descriptor instead.
func (*SysRoleUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{7}
}

func (x *SysRoleUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysRoleUpdateReq) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

func (x *SysRoleUpdateReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysRoleUpdateReq) GetRoleKey() string {
	if x != nil {
		return x.RoleKey
	}
	return ""
}

func (x *SysRoleUpdateReq) GetRoleSort() int32 {
	if x != nil {
		return x.RoleSort
	}
	return 0
}

func (x *SysRoleUpdateReq) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *SysRoleUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysRoleUpdateReq) GetAdmin() bool {
	if x != nil {
		return x.Admin
	}
	return false
}

func (x *SysRoleUpdateReq) GetDataScope() string {
	if x != nil {
		return x.DataScope
	}
	return ""
}

func (x *SysRoleUpdateReq) GetSysDept() string {
	if x != nil {
		return x.SysDept
	}
	return ""
}

func (x *SysRoleUpdateReq) GetSysMenu() string {
	if x != nil {
		return x.SysMenu
	}
	return ""
}

// 更新SysRole返回
type SysRoleUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysRoleData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysRoleUpdateReply) Reset() {
	*x = SysRoleUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleUpdateReply) ProtoMessage() {}

func (x *SysRoleUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleUpdateReply.ProtoReflect.Descriptor instead.
func (*SysRoleUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{8}
}

func (x *SysRoleUpdateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysRoleUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysRoleUpdateReply) GetResult() *SysRoleData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除SysRole请求
type SysRoleDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SysRoleDeleteReq) Reset() {
	*x = SysRoleDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleDeleteReq) ProtoMessage() {}

func (x *SysRoleDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleDeleteReq.ProtoReflect.Descriptor instead.
func (*SysRoleDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{9}
}

func (x *SysRoleDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除SysRole请求
type SysRoleBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SysRoleBatchDeleteReq) Reset() {
	*x = SysRoleBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleBatchDeleteReq) ProtoMessage() {}

func (x *SysRoleBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*SysRoleBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{10}
}

func (x *SysRoleBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除SysRole返回
type SysRoleDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysRoleDeleteReply) Reset() {
	*x = SysRoleDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysRoleDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysRoleDeleteReply) ProtoMessage() {}

func (x *SysRoleDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysrole_v1_sys_role_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysRoleDeleteReply.ProtoReflect.Descriptor instead.
func (*SysRoleDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP(), []int{11}
}

func (x *SysRoleDeleteReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysRoleDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysRoleDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_admin_sysrole_v1_sys_role_proto protoreflect.FileDescriptor

var file_api_admin_sysrole_v1_sys_role_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x72,
	0x6f, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xe3, 0x03, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x73,
	0x44, 0x65, 0x70, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x73, 0x44,
	0x65, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x67, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x12, 0x2c, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x85,
	0x01, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe2, 0x03, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c,
	0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x73,
	0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x73, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6d, 0x0a, 0x0c, 0x53,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x72,
	0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x90, 0x02, 0x0a, 0x10, 0x53,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x73,
	0x44, 0x65, 0x70, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x73, 0x44,
	0x65, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x22, 0x73, 0x0a,
	0x12, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xa0, 0x02, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x6f, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f,
	0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x53, 0x6f, 0x72,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a,
	0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x53, 0x63, 0x6f, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x79, 0x73, 0x44, 0x65, 0x70, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x79,
	0x73, 0x4d, 0x65, 0x6e, 0x75, 0x22, 0x73, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x79, 0x73, 0x72,
	0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x22, 0x0a, 0x10, 0x53, 0x79,
	0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x29,
	0x0a, 0x15, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x5a, 0x0a, 0x12, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xf9, 0x04, 0x0a, 0x07, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1c, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x72,
	0x6f, 0x6c, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x59, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x6b, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a,
	0x12, 0x66, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73,
	0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x68, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x72,
	0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a,
	0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x6d, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x73, 0x79, 0x73, 0x72, 0x6f,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x79,
	0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0e, 0x2a, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x72, 0x6f, 0x6c,
	0x65, 0x42, 0x1e, 0x5a, 0x1c, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x72, 0x6f, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_admin_sysrole_v1_sys_role_proto_rawDescOnce sync.Once
	file_api_admin_sysrole_v1_sys_role_proto_rawDescData = file_api_admin_sysrole_v1_sys_role_proto_rawDesc
)

func file_api_admin_sysrole_v1_sys_role_proto_rawDescGZIP() []byte {
	file_api_admin_sysrole_v1_sys_role_proto_rawDescOnce.Do(func() {
		file_api_admin_sysrole_v1_sys_role_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_admin_sysrole_v1_sys_role_proto_rawDescData)
	})
	return file_api_admin_sysrole_v1_sys_role_proto_rawDescData
}

var file_api_admin_sysrole_v1_sys_role_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_admin_sysrole_v1_sys_role_proto_goTypes = []interface{}{
	(*SysRoleData)(nil),           // 0: sysrole.v1.SysRoleData
	(*SysRolePageReq)(nil),        // 1: sysrole.v1.SysRolePageReq
	(*SysRolePageReply)(nil),      // 2: sysrole.v1.SysRolePageReply
	(*SysRoleReq)(nil),            // 3: sysrole.v1.SysRoleReq
	(*SysRoleReply)(nil),          // 4: sysrole.v1.SysRoleReply
	(*SysRoleCreateReq)(nil),      // 5: sysrole.v1.SysRoleCreateReq
	(*SysRoleCreateReply)(nil),    // 6: sysrole.v1.SysRoleCreateReply
	(*SysRoleUpdateReq)(nil),      // 7: sysrole.v1.SysRoleUpdateReq
	(*SysRoleUpdateReply)(nil),    // 8: sysrole.v1.SysRoleUpdateReply
	(*SysRoleDeleteReq)(nil),      // 9: sysrole.v1.SysRoleDeleteReq
	(*SysRoleBatchDeleteReq)(nil), // 10: sysrole.v1.SysRoleBatchDeleteReq
	(*SysRoleDeleteReply)(nil),    // 11: sysrole.v1.SysRoleDeleteReply
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),      // 13: pagin.Pagination
}
var file_api_admin_sysrole_v1_sys_role_proto_depIdxs = []int32{
	12, // 0: sysrole.v1.SysRoleData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 1: sysrole.v1.SysRoleData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 2: sysrole.v1.SysRolePageReq.pagin:type_name -> pagin.Pagination
	3,  // 3: sysrole.v1.SysRolePageReq.param:type_name -> sysrole.v1.SysRoleReq
	0,  // 4: sysrole.v1.SysRolePageReply.items:type_name -> sysrole.v1.SysRoleData
	12, // 5: sysrole.v1.SysRoleReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 6: sysrole.v1.SysRoleReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 7: sysrole.v1.SysRoleReply.result:type_name -> sysrole.v1.SysRoleData
	0,  // 8: sysrole.v1.SysRoleCreateReply.result:type_name -> sysrole.v1.SysRoleData
	0,  // 9: sysrole.v1.SysRoleUpdateReply.result:type_name -> sysrole.v1.SysRoleData
	1,  // 10: sysrole.v1.SysRole.GetSysRolePage:input_type -> sysrole.v1.SysRolePageReq
	3,  // 11: sysrole.v1.SysRole.GetSysRole:input_type -> sysrole.v1.SysRoleReq
	7,  // 12: sysrole.v1.SysRole.UpdateSysRole:input_type -> sysrole.v1.SysRoleUpdateReq
	5,  // 13: sysrole.v1.SysRole.CreateSysRole:input_type -> sysrole.v1.SysRoleCreateReq
	9,  // 14: sysrole.v1.SysRole.DeleteSysRole:input_type -> sysrole.v1.SysRoleDeleteReq
	10, // 15: sysrole.v1.SysRole.BatchDeleteSysRole:input_type -> sysrole.v1.SysRoleBatchDeleteReq
	2,  // 16: sysrole.v1.SysRole.GetSysRolePage:output_type -> sysrole.v1.SysRolePageReply
	4,  // 17: sysrole.v1.SysRole.GetSysRole:output_type -> sysrole.v1.SysRoleReply
	8,  // 18: sysrole.v1.SysRole.UpdateSysRole:output_type -> sysrole.v1.SysRoleUpdateReply
	6,  // 19: sysrole.v1.SysRole.CreateSysRole:output_type -> sysrole.v1.SysRoleCreateReply
	11, // 20: sysrole.v1.SysRole.DeleteSysRole:output_type -> sysrole.v1.SysRoleDeleteReply
	11, // 21: sysrole.v1.SysRole.BatchDeleteSysRole:output_type -> sysrole.v1.SysRoleDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_admin_sysrole_v1_sys_role_proto_init() }
func file_api_admin_sysrole_v1_sys_role_proto_init() {
	if File_api_admin_sysrole_v1_sys_role_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRolePageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRolePageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysrole_v1_sys_role_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysRoleDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_admin_sysrole_v1_sys_role_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_admin_sysrole_v1_sys_role_proto_goTypes,
		DependencyIndexes: file_api_admin_sysrole_v1_sys_role_proto_depIdxs,
		MessageInfos:      file_api_admin_sysrole_v1_sys_role_proto_msgTypes,
	}.Build()
	File_api_admin_sysrole_v1_sys_role_proto = out.File
	file_api_admin_sysrole_v1_sys_role_proto_rawDesc = nil
	file_api_admin_sysrole_v1_sys_role_proto_goTypes = nil
	file_api_admin_sysrole_v1_sys_role_proto_depIdxs = nil
}
