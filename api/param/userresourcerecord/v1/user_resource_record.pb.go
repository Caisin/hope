// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/param/userresourcerecord/v1/user_resource_record.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type UserResourceRecordData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	//资源ID
	ResId int64 `protobuf:"varint,3,opt,name=resId,proto3" json:"resId,omitempty"`
	//是否默认
	Def bool `protobuf:"varint,4,opt,name=def,proto3" json:"def,omitempty"`
	//头像名称
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	//资源地址
	Url string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	//资源类型,avatar
	ResType string `protobuf:"bytes,7,opt,name=resType,proto3" json:"resType,omitempty"`
	//备注
	Remark string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	//使用状态,1
	State int32 `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,14,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,15,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,16,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *UserResourceRecordData) Reset() {
	*x = UserResourceRecordData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordData) ProtoMessage() {}

func (x *UserResourceRecordData) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordData.ProtoReflect.Descriptor instead.
func (*UserResourceRecordData) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{0}
}

func (x *UserResourceRecordData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserResourceRecordData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserResourceRecordData) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *UserResourceRecordData) GetDef() bool {
	if x != nil {
		return x.Def
	}
	return false
}

func (x *UserResourceRecordData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserResourceRecordData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UserResourceRecordData) GetResType() string {
	if x != nil {
		return x.ResType
	}
	return ""
}

func (x *UserResourceRecordData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserResourceRecordData) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UserResourceRecordData) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *UserResourceRecordData) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

func (x *UserResourceRecordData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserResourceRecordData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserResourceRecordData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *UserResourceRecordData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *UserResourceRecordData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type UserResourceRecordPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *UserResourceRecordReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *UserResourceRecordPageReq) Reset() {
	*x = UserResourceRecordPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordPageReq) ProtoMessage() {}

func (x *UserResourceRecordPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordPageReq.ProtoReflect.Descriptor instead.
func (*UserResourceRecordPageReq) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{1}
}

func (x *UserResourceRecordPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *UserResourceRecordPageReq) GetParam() *UserResourceRecordReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type UserResourceRecordPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*UserResourceRecordData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *UserResourceRecordPageReply) Reset() {
	*x = UserResourceRecordPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordPageReply) ProtoMessage() {}

func (x *UserResourceRecordPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordPageReply.ProtoReflect.Descriptor instead.
func (*UserResourceRecordPageReply) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{2}
}

func (x *UserResourceRecordPageReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserResourceRecordPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserResourceRecordPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *UserResourceRecordPageReply) GetItems() []*UserResourceRecordData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type UserResourceRecordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	//资源ID
	ResId int64 `protobuf:"varint,3,opt,name=resId,proto3" json:"resId,omitempty"`
	//是否默认
	Def bool `protobuf:"varint,4,opt,name=def,proto3" json:"def,omitempty"`
	//头像名称
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	//资源地址
	Url string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	//资源类型,avatar
	ResType string `protobuf:"bytes,7,opt,name=resType,proto3" json:"resType,omitempty"`
	//备注
	Remark string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	//使用状态,1
	State int32 `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,14,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,15,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,16,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *UserResourceRecordReq) Reset() {
	*x = UserResourceRecordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordReq) ProtoMessage() {}

func (x *UserResourceRecordReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordReq.ProtoReflect.Descriptor instead.
func (*UserResourceRecordReq) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{3}
}

func (x *UserResourceRecordReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserResourceRecordReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserResourceRecordReq) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *UserResourceRecordReq) GetDef() bool {
	if x != nil {
		return x.Def
	}
	return false
}

func (x *UserResourceRecordReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserResourceRecordReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UserResourceRecordReq) GetResType() string {
	if x != nil {
		return x.ResType
	}
	return ""
}

func (x *UserResourceRecordReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserResourceRecordReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UserResourceRecordReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *UserResourceRecordReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

func (x *UserResourceRecordReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *UserResourceRecordReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *UserResourceRecordReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *UserResourceRecordReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *UserResourceRecordReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type UserResourceRecordReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *UserResourceRecordData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UserResourceRecordReply) Reset() {
	*x = UserResourceRecordReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordReply) ProtoMessage() {}

func (x *UserResourceRecordReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordReply.ProtoReflect.Descriptor instead.
func (*UserResourceRecordReply) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{4}
}

func (x *UserResourceRecordReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserResourceRecordReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserResourceRecordReply) GetResult() *UserResourceRecordData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建UserResourceRecord请求
type UserResourceRecordCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户ID
	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	//资源ID
	ResId int64 `protobuf:"varint,2,opt,name=resId,proto3" json:"resId,omitempty"`
	//是否默认
	Def bool `protobuf:"varint,3,opt,name=def,proto3" json:"def,omitempty"`
	//头像名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	//资源地址
	Url string `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	//资源类型,avatar
	ResType string `protobuf:"bytes,6,opt,name=resType,proto3" json:"resType,omitempty"`
	//备注
	Remark string `protobuf:"bytes,7,opt,name=remark,proto3" json:"remark,omitempty"`
	//使用状态,1
	State int32 `protobuf:"varint,8,opt,name=state,proto3" json:"state,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
}

func (x *UserResourceRecordCreateReq) Reset() {
	*x = UserResourceRecordCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordCreateReq) ProtoMessage() {}

func (x *UserResourceRecordCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordCreateReq.ProtoReflect.Descriptor instead.
func (*UserResourceRecordCreateReq) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{5}
}

func (x *UserResourceRecordCreateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserResourceRecordCreateReq) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *UserResourceRecordCreateReq) GetDef() bool {
	if x != nil {
		return x.Def
	}
	return false
}

func (x *UserResourceRecordCreateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserResourceRecordCreateReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UserResourceRecordCreateReq) GetResType() string {
	if x != nil {
		return x.ResType
	}
	return ""
}

func (x *UserResourceRecordCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserResourceRecordCreateReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UserResourceRecordCreateReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *UserResourceRecordCreateReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

// 创建UserResourceRecord返回
type UserResourceRecordCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *UserResourceRecordData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UserResourceRecordCreateReply) Reset() {
	*x = UserResourceRecordCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordCreateReply) ProtoMessage() {}

func (x *UserResourceRecordCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordCreateReply.ProtoReflect.Descriptor instead.
func (*UserResourceRecordCreateReply) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{6}
}

func (x *UserResourceRecordCreateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserResourceRecordCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserResourceRecordCreateReply) GetResult() *UserResourceRecordData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新UserResourceRecord请求
type UserResourceRecordUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	//资源ID
	ResId int64 `protobuf:"varint,3,opt,name=resId,proto3" json:"resId,omitempty"`
	//是否默认
	Def bool `protobuf:"varint,4,opt,name=def,proto3" json:"def,omitempty"`
	//头像名称
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	//资源地址
	Url string `protobuf:"bytes,6,opt,name=url,proto3" json:"url,omitempty"`
	//资源类型,avatar
	ResType string `protobuf:"bytes,7,opt,name=resType,proto3" json:"resType,omitempty"`
	//备注
	Remark string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	//使用状态,1
	State int32 `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
}

func (x *UserResourceRecordUpdateReq) Reset() {
	*x = UserResourceRecordUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordUpdateReq) ProtoMessage() {}

func (x *UserResourceRecordUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordUpdateReq.ProtoReflect.Descriptor instead.
func (*UserResourceRecordUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{7}
}

func (x *UserResourceRecordUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserResourceRecordUpdateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserResourceRecordUpdateReq) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *UserResourceRecordUpdateReq) GetDef() bool {
	if x != nil {
		return x.Def
	}
	return false
}

func (x *UserResourceRecordUpdateReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserResourceRecordUpdateReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UserResourceRecordUpdateReq) GetResType() string {
	if x != nil {
		return x.ResType
	}
	return ""
}

func (x *UserResourceRecordUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *UserResourceRecordUpdateReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *UserResourceRecordUpdateReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *UserResourceRecordUpdateReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

// 更新UserResourceRecord返回
type UserResourceRecordUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *UserResourceRecordData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UserResourceRecordUpdateReply) Reset() {
	*x = UserResourceRecordUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordUpdateReply) ProtoMessage() {}

func (x *UserResourceRecordUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordUpdateReply.ProtoReflect.Descriptor instead.
func (*UserResourceRecordUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{8}
}

func (x *UserResourceRecordUpdateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserResourceRecordUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserResourceRecordUpdateReply) GetResult() *UserResourceRecordData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除UserResourceRecord请求
type UserResourceRecordDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserResourceRecordDeleteReq) Reset() {
	*x = UserResourceRecordDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordDeleteReq) ProtoMessage() {}

func (x *UserResourceRecordDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordDeleteReq.ProtoReflect.Descriptor instead.
func (*UserResourceRecordDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{9}
}

func (x *UserResourceRecordDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除UserResourceRecord请求
type UserResourceRecordBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *UserResourceRecordBatchDeleteReq) Reset() {
	*x = UserResourceRecordBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordBatchDeleteReq) ProtoMessage() {}

func (x *UserResourceRecordBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*UserResourceRecordBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{10}
}

func (x *UserResourceRecordBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除UserResourceRecord返回
type UserResourceRecordDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *UserResourceRecordDeleteReply) Reset() {
	*x = UserResourceRecordDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResourceRecordDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResourceRecordDeleteReply) ProtoMessage() {}

func (x *UserResourceRecordDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResourceRecordDeleteReply.ProtoReflect.Descriptor instead.
func (*UserResourceRecordDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP(), []int{11}
}

func (x *UserResourceRecordDeleteReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UserResourceRecordDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserResourceRecordDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_param_userresourcerecord_v1_user_resource_record_proto protoreflect.FileDescriptor

var file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDesc = []byte{
	0x0a, 0x3a, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x76,
	0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x15, 0x75, 0x73,
	0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x98, 0x04, 0x0a, 0x16, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65,
	0x66, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a,
	0x19, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x12, 0x42, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0xa6, 0x01, 0x0a, 0x1b, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x43, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x97, 0x04, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x66, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8e, 0x01, 0x0a, 0x17, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc5, 0x02, 0x0a, 0x1b,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x66,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd5, 0x02, 0x0a, 0x1b, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x65, 0x66, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x64, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x94, 0x01, 0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x45, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2d, 0x0a, 0x1b, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x20, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x65,
	0x0a, 0x1d, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x9c, 0x08, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0xa8, 0x01, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x12, 0x30, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x9c, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x12, 0x2c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a,
	0x2e, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65,
	0x72, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xae, 0x01, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x32, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x22, 0x1a, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0xa9, 0x01, 0x0a, 0x18, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x12, 0x32, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x3a, 0x01, 0x2a, 0x12, 0xab, 0x01, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64,
	0x12, 0x32, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1f, 0x2a, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0xb0, 0x01, 0x0a, 0x1d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x12, 0x37, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a, 0x18, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x42, 0x29, 0x5a, 0x27, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescOnce sync.Once
	file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescData = file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDesc
)

func file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescGZIP() []byte {
	file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescOnce.Do(func() {
		file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescData)
	})
	return file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDescData
}

var file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_param_userresourcerecord_v1_user_resource_record_proto_goTypes = []interface{}{
	(*UserResourceRecordData)(nil),           // 0: userresourcerecord.v1.UserResourceRecordData
	(*UserResourceRecordPageReq)(nil),        // 1: userresourcerecord.v1.UserResourceRecordPageReq
	(*UserResourceRecordPageReply)(nil),      // 2: userresourcerecord.v1.UserResourceRecordPageReply
	(*UserResourceRecordReq)(nil),            // 3: userresourcerecord.v1.UserResourceRecordReq
	(*UserResourceRecordReply)(nil),          // 4: userresourcerecord.v1.UserResourceRecordReply
	(*UserResourceRecordCreateReq)(nil),      // 5: userresourcerecord.v1.UserResourceRecordCreateReq
	(*UserResourceRecordCreateReply)(nil),    // 6: userresourcerecord.v1.UserResourceRecordCreateReply
	(*UserResourceRecordUpdateReq)(nil),      // 7: userresourcerecord.v1.UserResourceRecordUpdateReq
	(*UserResourceRecordUpdateReply)(nil),    // 8: userresourcerecord.v1.UserResourceRecordUpdateReply
	(*UserResourceRecordDeleteReq)(nil),      // 9: userresourcerecord.v1.UserResourceRecordDeleteReq
	(*UserResourceRecordBatchDeleteReq)(nil), // 10: userresourcerecord.v1.UserResourceRecordBatchDeleteReq
	(*UserResourceRecordDeleteReply)(nil),    // 11: userresourcerecord.v1.UserResourceRecordDeleteReply
	(*timestamppb.Timestamp)(nil),            // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),                 // 13: pagin.Pagination
}
var file_api_param_userresourcerecord_v1_user_resource_record_proto_depIdxs = []int32{
	12, // 0: userresourcerecord.v1.UserResourceRecordData.effectTime:type_name -> google.protobuf.Timestamp
	12, // 1: userresourcerecord.v1.UserResourceRecordData.expiredTime:type_name -> google.protobuf.Timestamp
	12, // 2: userresourcerecord.v1.UserResourceRecordData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 3: userresourcerecord.v1.UserResourceRecordData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 4: userresourcerecord.v1.UserResourceRecordPageReq.pagin:type_name -> pagin.Pagination
	3,  // 5: userresourcerecord.v1.UserResourceRecordPageReq.param:type_name -> userresourcerecord.v1.UserResourceRecordReq
	0,  // 6: userresourcerecord.v1.UserResourceRecordPageReply.items:type_name -> userresourcerecord.v1.UserResourceRecordData
	12, // 7: userresourcerecord.v1.UserResourceRecordReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 8: userresourcerecord.v1.UserResourceRecordReq.expiredTime:type_name -> google.protobuf.Timestamp
	12, // 9: userresourcerecord.v1.UserResourceRecordReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 10: userresourcerecord.v1.UserResourceRecordReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 11: userresourcerecord.v1.UserResourceRecordReply.result:type_name -> userresourcerecord.v1.UserResourceRecordData
	12, // 12: userresourcerecord.v1.UserResourceRecordCreateReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 13: userresourcerecord.v1.UserResourceRecordCreateReq.expiredTime:type_name -> google.protobuf.Timestamp
	0,  // 14: userresourcerecord.v1.UserResourceRecordCreateReply.result:type_name -> userresourcerecord.v1.UserResourceRecordData
	12, // 15: userresourcerecord.v1.UserResourceRecordUpdateReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 16: userresourcerecord.v1.UserResourceRecordUpdateReq.expiredTime:type_name -> google.protobuf.Timestamp
	0,  // 17: userresourcerecord.v1.UserResourceRecordUpdateReply.result:type_name -> userresourcerecord.v1.UserResourceRecordData
	1,  // 18: userresourcerecord.v1.UserResourceRecord.GetUserResourceRecordPage:input_type -> userresourcerecord.v1.UserResourceRecordPageReq
	3,  // 19: userresourcerecord.v1.UserResourceRecord.GetUserResourceRecord:input_type -> userresourcerecord.v1.UserResourceRecordReq
	7,  // 20: userresourcerecord.v1.UserResourceRecord.UpdateUserResourceRecord:input_type -> userresourcerecord.v1.UserResourceRecordUpdateReq
	5,  // 21: userresourcerecord.v1.UserResourceRecord.CreateUserResourceRecord:input_type -> userresourcerecord.v1.UserResourceRecordCreateReq
	9,  // 22: userresourcerecord.v1.UserResourceRecord.DeleteUserResourceRecord:input_type -> userresourcerecord.v1.UserResourceRecordDeleteReq
	10, // 23: userresourcerecord.v1.UserResourceRecord.BatchDeleteUserResourceRecord:input_type -> userresourcerecord.v1.UserResourceRecordBatchDeleteReq
	2,  // 24: userresourcerecord.v1.UserResourceRecord.GetUserResourceRecordPage:output_type -> userresourcerecord.v1.UserResourceRecordPageReply
	4,  // 25: userresourcerecord.v1.UserResourceRecord.GetUserResourceRecord:output_type -> userresourcerecord.v1.UserResourceRecordReply
	8,  // 26: userresourcerecord.v1.UserResourceRecord.UpdateUserResourceRecord:output_type -> userresourcerecord.v1.UserResourceRecordUpdateReply
	6,  // 27: userresourcerecord.v1.UserResourceRecord.CreateUserResourceRecord:output_type -> userresourcerecord.v1.UserResourceRecordCreateReply
	11, // 28: userresourcerecord.v1.UserResourceRecord.DeleteUserResourceRecord:output_type -> userresourcerecord.v1.UserResourceRecordDeleteReply
	11, // 29: userresourcerecord.v1.UserResourceRecord.BatchDeleteUserResourceRecord:output_type -> userresourcerecord.v1.UserResourceRecordDeleteReply
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_param_userresourcerecord_v1_user_resource_record_proto_init() }
func file_api_param_userresourcerecord_v1_user_resource_record_proto_init() {
	if File_api_param_userresourcerecord_v1_user_resource_record_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResourceRecordDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_param_userresourcerecord_v1_user_resource_record_proto_goTypes,
		DependencyIndexes: file_api_param_userresourcerecord_v1_user_resource_record_proto_depIdxs,
		MessageInfos:      file_api_param_userresourcerecord_v1_user_resource_record_proto_msgTypes,
	}.Build()
	File_api_param_userresourcerecord_v1_user_resource_record_proto = out.File
	file_api_param_userresourcerecord_v1_user_resource_record_proto_rawDesc = nil
	file_api_param_userresourcerecord_v1_user_resource_record_proto_goTypes = nil
	file_api_param_userresourcerecord_v1_user_resource_record_proto_depIdxs = nil
}
