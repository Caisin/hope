// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/novel/activitycomponent/v1/activity_component.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type ActivityComponentPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *ActivityComponentReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *ActivityComponentPageReq) Reset() {
	*x = ActivityComponentPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityComponentPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityComponentPageReq) ProtoMessage() {}

func (x *ActivityComponentPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityComponentPageReq.ProtoReflect.Descriptor instead.
func (*ActivityComponentPageReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP(), []int{0}
}

func (x *ActivityComponentPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *ActivityComponentPageReq) GetParam() *ActivityComponentReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type ActivityComponentPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*ActivityComponentReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ActivityComponentPageReply) Reset() {
	*x = ActivityComponentPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityComponentPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityComponentPageReply) ProtoMessage() {}

func (x *ActivityComponentPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityComponentPageReply.ProtoReflect.Descriptor instead.
func (*ActivityComponentPageReply) Descriptor() ([]byte, []int) {
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP(), []int{1}
}

func (x *ActivityComponentPageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *ActivityComponentPageReply) GetItems() []*ActivityComponentReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type ActivityComponentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//活动编码
	ActivityCode string `protobuf:"bytes,2,opt,name=activityCode,proto3" json:"activityCode,omitempty"`
	//活动组成类型,reg
	ComponentType string `protobuf:"bytes,3,opt,name=componentType,proto3" json:"componentType,omitempty"`
	//策略,all
	Policy string `protobuf:"bytes,4,opt,name=policy,proto3" json:"policy,omitempty"`
	//vip拓展天数,当用户为vip时生效
	VipDays bool `protobuf:"varint,5,opt,name=vipDays,proto3" json:"vipDays,omitempty"`
	//最小消耗金额
	MinConsume int64 `protobuf:"varint,6,opt,name=minConsume,proto3" json:"minConsume,omitempty"`
	//最大消耗金额
	MaxConsume int64 `protobuf:"varint,7,opt,name=maxConsume,proto3" json:"maxConsume,omitempty"`
	//充值次数
	MinPayNum int64 `protobuf:"varint,8,opt,name=minPayNum,proto3" json:"minPayNum,omitempty"`
	//第几次充值
	PayTimes int64 `protobuf:"varint,9,opt,name=payTimes,proto3" json:"payTimes,omitempty"`
	//充值金额
	PayAmount int64 `protobuf:"varint,10,opt,name=payAmount,proto3" json:"payAmount,omitempty"`
	//注册天数
	RegDays int64 `protobuf:"varint,11,opt,name=regDays,proto3" json:"regDays,omitempty"`
	//活动描述
	Summary string `protobuf:"bytes,12,opt,name=summary,proto3" json:"summary,omitempty"`
	//活动期间赠送资金科目
	AssetItemId int32 `protobuf:"varint,13,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//活动期间赠送金额,-1为赠送等额消耗书券
	Amount int64 `protobuf:"varint,14,opt,name=amount,proto3" json:"amount,omitempty"`
	//获得资产编号
	ResId int64 `protobuf:"varint,15,opt,name=resId,proto3" json:"resId,omitempty"`
	//获得资产有效时间
	ResDays int32 `protobuf:"varint,16,opt,name=resDays,proto3" json:"resDays,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,19,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,20,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,21,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *ActivityComponentReq) Reset() {
	*x = ActivityComponentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityComponentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityComponentReq) ProtoMessage() {}

func (x *ActivityComponentReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityComponentReq.ProtoReflect.Descriptor instead.
func (*ActivityComponentReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP(), []int{2}
}

func (x *ActivityComponentReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityComponentReq) GetActivityCode() string {
	if x != nil {
		return x.ActivityCode
	}
	return ""
}

func (x *ActivityComponentReq) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *ActivityComponentReq) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *ActivityComponentReq) GetVipDays() bool {
	if x != nil {
		return x.VipDays
	}
	return false
}

func (x *ActivityComponentReq) GetMinConsume() int64 {
	if x != nil {
		return x.MinConsume
	}
	return 0
}

func (x *ActivityComponentReq) GetMaxConsume() int64 {
	if x != nil {
		return x.MaxConsume
	}
	return 0
}

func (x *ActivityComponentReq) GetMinPayNum() int64 {
	if x != nil {
		return x.MinPayNum
	}
	return 0
}

func (x *ActivityComponentReq) GetPayTimes() int64 {
	if x != nil {
		return x.PayTimes
	}
	return 0
}

func (x *ActivityComponentReq) GetPayAmount() int64 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *ActivityComponentReq) GetRegDays() int64 {
	if x != nil {
		return x.RegDays
	}
	return 0
}

func (x *ActivityComponentReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ActivityComponentReq) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *ActivityComponentReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ActivityComponentReq) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *ActivityComponentReq) GetResDays() int32 {
	if x != nil {
		return x.ResDays
	}
	return 0
}

func (x *ActivityComponentReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ActivityComponentReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ActivityComponentReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ActivityComponentReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ActivityComponentReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type ActivityComponentReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//活动编码
	ActivityCode string `protobuf:"bytes,2,opt,name=activityCode,proto3" json:"activityCode,omitempty"`
	//活动组成类型,reg
	ComponentType string `protobuf:"bytes,3,opt,name=componentType,proto3" json:"componentType,omitempty"`
	//策略,all
	Policy string `protobuf:"bytes,4,opt,name=policy,proto3" json:"policy,omitempty"`
	//vip拓展天数,当用户为vip时生效
	VipDays bool `protobuf:"varint,5,opt,name=vipDays,proto3" json:"vipDays,omitempty"`
	//最小消耗金额
	MinConsume int64 `protobuf:"varint,6,opt,name=minConsume,proto3" json:"minConsume,omitempty"`
	//最大消耗金额
	MaxConsume int64 `protobuf:"varint,7,opt,name=maxConsume,proto3" json:"maxConsume,omitempty"`
	//充值次数
	MinPayNum int64 `protobuf:"varint,8,opt,name=minPayNum,proto3" json:"minPayNum,omitempty"`
	//第几次充值
	PayTimes int64 `protobuf:"varint,9,opt,name=payTimes,proto3" json:"payTimes,omitempty"`
	//充值金额
	PayAmount int64 `protobuf:"varint,10,opt,name=payAmount,proto3" json:"payAmount,omitempty"`
	//注册天数
	RegDays int64 `protobuf:"varint,11,opt,name=regDays,proto3" json:"regDays,omitempty"`
	//活动描述
	Summary string `protobuf:"bytes,12,opt,name=summary,proto3" json:"summary,omitempty"`
	//活动期间赠送资金科目
	AssetItemId int32 `protobuf:"varint,13,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//活动期间赠送金额,-1为赠送等额消耗书券
	Amount int64 `protobuf:"varint,14,opt,name=amount,proto3" json:"amount,omitempty"`
	//获得资产编号
	ResId int64 `protobuf:"varint,15,opt,name=resId,proto3" json:"resId,omitempty"`
	//获得资产有效时间
	ResDays int32 `protobuf:"varint,16,opt,name=resDays,proto3" json:"resDays,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,19,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,20,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,21,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *ActivityComponentReply) Reset() {
	*x = ActivityComponentReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityComponentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityComponentReply) ProtoMessage() {}

func (x *ActivityComponentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityComponentReply.ProtoReflect.Descriptor instead.
func (*ActivityComponentReply) Descriptor() ([]byte, []int) {
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP(), []int{3}
}

func (x *ActivityComponentReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityComponentReply) GetActivityCode() string {
	if x != nil {
		return x.ActivityCode
	}
	return ""
}

func (x *ActivityComponentReply) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *ActivityComponentReply) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *ActivityComponentReply) GetVipDays() bool {
	if x != nil {
		return x.VipDays
	}
	return false
}

func (x *ActivityComponentReply) GetMinConsume() int64 {
	if x != nil {
		return x.MinConsume
	}
	return 0
}

func (x *ActivityComponentReply) GetMaxConsume() int64 {
	if x != nil {
		return x.MaxConsume
	}
	return 0
}

func (x *ActivityComponentReply) GetMinPayNum() int64 {
	if x != nil {
		return x.MinPayNum
	}
	return 0
}

func (x *ActivityComponentReply) GetPayTimes() int64 {
	if x != nil {
		return x.PayTimes
	}
	return 0
}

func (x *ActivityComponentReply) GetPayAmount() int64 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *ActivityComponentReply) GetRegDays() int64 {
	if x != nil {
		return x.RegDays
	}
	return 0
}

func (x *ActivityComponentReply) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ActivityComponentReply) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *ActivityComponentReply) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ActivityComponentReply) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *ActivityComponentReply) GetResDays() int32 {
	if x != nil {
		return x.ResDays
	}
	return 0
}

func (x *ActivityComponentReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ActivityComponentReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ActivityComponentReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ActivityComponentReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ActivityComponentReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建ActivityComponent请求
type ActivityComponentCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//活动编码
	ActivityCode string `protobuf:"bytes,1,opt,name=activityCode,proto3" json:"activityCode,omitempty"`
	//活动组成类型,reg
	ComponentType string `protobuf:"bytes,2,opt,name=componentType,proto3" json:"componentType,omitempty"`
	//策略,all
	Policy string `protobuf:"bytes,3,opt,name=policy,proto3" json:"policy,omitempty"`
	//vip拓展天数,当用户为vip时生效
	VipDays bool `protobuf:"varint,4,opt,name=vipDays,proto3" json:"vipDays,omitempty"`
	//最小消耗金额
	MinConsume int64 `protobuf:"varint,5,opt,name=minConsume,proto3" json:"minConsume,omitempty"`
	//最大消耗金额
	MaxConsume int64 `protobuf:"varint,6,opt,name=maxConsume,proto3" json:"maxConsume,omitempty"`
	//充值次数
	MinPayNum int64 `protobuf:"varint,7,opt,name=minPayNum,proto3" json:"minPayNum,omitempty"`
	//第几次充值
	PayTimes int64 `protobuf:"varint,8,opt,name=payTimes,proto3" json:"payTimes,omitempty"`
	//充值金额
	PayAmount int64 `protobuf:"varint,9,opt,name=payAmount,proto3" json:"payAmount,omitempty"`
	//注册天数
	RegDays int64 `protobuf:"varint,10,opt,name=regDays,proto3" json:"regDays,omitempty"`
	//活动描述
	Summary string `protobuf:"bytes,11,opt,name=summary,proto3" json:"summary,omitempty"`
	//活动期间赠送资金科目
	AssetItemId int32 `protobuf:"varint,12,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//活动期间赠送金额,-1为赠送等额消耗书券
	Amount int64 `protobuf:"varint,13,opt,name=amount,proto3" json:"amount,omitempty"`
	//获得资产编号
	ResId int64 `protobuf:"varint,14,opt,name=resId,proto3" json:"resId,omitempty"`
	//获得资产有效时间
	ResDays int32 `protobuf:"varint,15,opt,name=resDays,proto3" json:"resDays,omitempty"`
}

func (x *ActivityComponentCreateReq) Reset() {
	*x = ActivityComponentCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityComponentCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityComponentCreateReq) ProtoMessage() {}

func (x *ActivityComponentCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityComponentCreateReq.ProtoReflect.Descriptor instead.
func (*ActivityComponentCreateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP(), []int{4}
}

func (x *ActivityComponentCreateReq) GetActivityCode() string {
	if x != nil {
		return x.ActivityCode
	}
	return ""
}

func (x *ActivityComponentCreateReq) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *ActivityComponentCreateReq) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *ActivityComponentCreateReq) GetVipDays() bool {
	if x != nil {
		return x.VipDays
	}
	return false
}

func (x *ActivityComponentCreateReq) GetMinConsume() int64 {
	if x != nil {
		return x.MinConsume
	}
	return 0
}

func (x *ActivityComponentCreateReq) GetMaxConsume() int64 {
	if x != nil {
		return x.MaxConsume
	}
	return 0
}

func (x *ActivityComponentCreateReq) GetMinPayNum() int64 {
	if x != nil {
		return x.MinPayNum
	}
	return 0
}

func (x *ActivityComponentCreateReq) GetPayTimes() int64 {
	if x != nil {
		return x.PayTimes
	}
	return 0
}

func (x *ActivityComponentCreateReq) GetPayAmount() int64 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *ActivityComponentCreateReq) GetRegDays() int64 {
	if x != nil {
		return x.RegDays
	}
	return 0
}

func (x *ActivityComponentCreateReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ActivityComponentCreateReq) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *ActivityComponentCreateReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ActivityComponentCreateReq) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *ActivityComponentCreateReq) GetResDays() int32 {
	if x != nil {
		return x.ResDays
	}
	return 0
}

// 创建ActivityComponent返回
type ActivityComponentCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//活动编码
	ActivityCode string `protobuf:"bytes,2,opt,name=activityCode,proto3" json:"activityCode,omitempty"`
	//活动组成类型,reg
	ComponentType string `protobuf:"bytes,3,opt,name=componentType,proto3" json:"componentType,omitempty"`
	//策略,all
	Policy string `protobuf:"bytes,4,opt,name=policy,proto3" json:"policy,omitempty"`
	//vip拓展天数,当用户为vip时生效
	VipDays bool `protobuf:"varint,5,opt,name=vipDays,proto3" json:"vipDays,omitempty"`
	//最小消耗金额
	MinConsume int64 `protobuf:"varint,6,opt,name=minConsume,proto3" json:"minConsume,omitempty"`
	//最大消耗金额
	MaxConsume int64 `protobuf:"varint,7,opt,name=maxConsume,proto3" json:"maxConsume,omitempty"`
	//充值次数
	MinPayNum int64 `protobuf:"varint,8,opt,name=minPayNum,proto3" json:"minPayNum,omitempty"`
	//第几次充值
	PayTimes int64 `protobuf:"varint,9,opt,name=payTimes,proto3" json:"payTimes,omitempty"`
	//充值金额
	PayAmount int64 `protobuf:"varint,10,opt,name=payAmount,proto3" json:"payAmount,omitempty"`
	//注册天数
	RegDays int64 `protobuf:"varint,11,opt,name=regDays,proto3" json:"regDays,omitempty"`
	//活动描述
	Summary string `protobuf:"bytes,12,opt,name=summary,proto3" json:"summary,omitempty"`
	//活动期间赠送资金科目
	AssetItemId int32 `protobuf:"varint,13,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//活动期间赠送金额,-1为赠送等额消耗书券
	Amount int64 `protobuf:"varint,14,opt,name=amount,proto3" json:"amount,omitempty"`
	//获得资产编号
	ResId int64 `protobuf:"varint,15,opt,name=resId,proto3" json:"resId,omitempty"`
	//获得资产有效时间
	ResDays int32 `protobuf:"varint,16,opt,name=resDays,proto3" json:"resDays,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,19,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,20,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,21,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *ActivityComponentCreateReply) Reset() {
	*x = ActivityComponentCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityComponentCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityComponentCreateReply) ProtoMessage() {}

func (x *ActivityComponentCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityComponentCreateReply.ProtoReflect.Descriptor instead.
func (*ActivityComponentCreateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP(), []int{5}
}

func (x *ActivityComponentCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetActivityCode() string {
	if x != nil {
		return x.ActivityCode
	}
	return ""
}

func (x *ActivityComponentCreateReply) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *ActivityComponentCreateReply) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *ActivityComponentCreateReply) GetVipDays() bool {
	if x != nil {
		return x.VipDays
	}
	return false
}

func (x *ActivityComponentCreateReply) GetMinConsume() int64 {
	if x != nil {
		return x.MinConsume
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetMaxConsume() int64 {
	if x != nil {
		return x.MaxConsume
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetMinPayNum() int64 {
	if x != nil {
		return x.MinPayNum
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetPayTimes() int64 {
	if x != nil {
		return x.PayTimes
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetPayAmount() int64 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetRegDays() int64 {
	if x != nil {
		return x.RegDays
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ActivityComponentCreateReply) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetResDays() int32 {
	if x != nil {
		return x.ResDays
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ActivityComponentCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *ActivityComponentCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *ActivityComponentCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新ActivityComponent请求
type ActivityComponentUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//活动编码
	ActivityCode string `protobuf:"bytes,2,opt,name=activityCode,proto3" json:"activityCode,omitempty"`
	//活动组成类型,reg
	ComponentType string `protobuf:"bytes,3,opt,name=componentType,proto3" json:"componentType,omitempty"`
	//策略,all
	Policy string `protobuf:"bytes,4,opt,name=policy,proto3" json:"policy,omitempty"`
	//vip拓展天数,当用户为vip时生效
	VipDays bool `protobuf:"varint,5,opt,name=vipDays,proto3" json:"vipDays,omitempty"`
	//最小消耗金额
	MinConsume int64 `protobuf:"varint,6,opt,name=minConsume,proto3" json:"minConsume,omitempty"`
	//最大消耗金额
	MaxConsume int64 `protobuf:"varint,7,opt,name=maxConsume,proto3" json:"maxConsume,omitempty"`
	//充值次数
	MinPayNum int64 `protobuf:"varint,8,opt,name=minPayNum,proto3" json:"minPayNum,omitempty"`
	//第几次充值
	PayTimes int64 `protobuf:"varint,9,opt,name=payTimes,proto3" json:"payTimes,omitempty"`
	//充值金额
	PayAmount int64 `protobuf:"varint,10,opt,name=payAmount,proto3" json:"payAmount,omitempty"`
	//注册天数
	RegDays int64 `protobuf:"varint,11,opt,name=regDays,proto3" json:"regDays,omitempty"`
	//活动描述
	Summary string `protobuf:"bytes,12,opt,name=summary,proto3" json:"summary,omitempty"`
	//活动期间赠送资金科目
	AssetItemId int32 `protobuf:"varint,13,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//活动期间赠送金额,-1为赠送等额消耗书券
	Amount int64 `protobuf:"varint,14,opt,name=amount,proto3" json:"amount,omitempty"`
	//获得资产编号
	ResId int64 `protobuf:"varint,15,opt,name=resId,proto3" json:"resId,omitempty"`
	//获得资产有效时间
	ResDays int32 `protobuf:"varint,16,opt,name=resDays,proto3" json:"resDays,omitempty"`
}

func (x *ActivityComponentUpdateReq) Reset() {
	*x = ActivityComponentUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityComponentUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityComponentUpdateReq) ProtoMessage() {}

func (x *ActivityComponentUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityComponentUpdateReq.ProtoReflect.Descriptor instead.
func (*ActivityComponentUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP(), []int{6}
}

func (x *ActivityComponentUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityComponentUpdateReq) GetActivityCode() string {
	if x != nil {
		return x.ActivityCode
	}
	return ""
}

func (x *ActivityComponentUpdateReq) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *ActivityComponentUpdateReq) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *ActivityComponentUpdateReq) GetVipDays() bool {
	if x != nil {
		return x.VipDays
	}
	return false
}

func (x *ActivityComponentUpdateReq) GetMinConsume() int64 {
	if x != nil {
		return x.MinConsume
	}
	return 0
}

func (x *ActivityComponentUpdateReq) GetMaxConsume() int64 {
	if x != nil {
		return x.MaxConsume
	}
	return 0
}

func (x *ActivityComponentUpdateReq) GetMinPayNum() int64 {
	if x != nil {
		return x.MinPayNum
	}
	return 0
}

func (x *ActivityComponentUpdateReq) GetPayTimes() int64 {
	if x != nil {
		return x.PayTimes
	}
	return 0
}

func (x *ActivityComponentUpdateReq) GetPayAmount() int64 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *ActivityComponentUpdateReq) GetRegDays() int64 {
	if x != nil {
		return x.RegDays
	}
	return 0
}

func (x *ActivityComponentUpdateReq) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ActivityComponentUpdateReq) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *ActivityComponentUpdateReq) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ActivityComponentUpdateReq) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *ActivityComponentUpdateReq) GetResDays() int32 {
	if x != nil {
		return x.ResDays
	}
	return 0
}

// 更新ActivityComponent返回
type ActivityComponentUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//活动编码
	ActivityCode string `protobuf:"bytes,2,opt,name=activityCode,proto3" json:"activityCode,omitempty"`
	//活动组成类型,reg
	ComponentType string `protobuf:"bytes,3,opt,name=componentType,proto3" json:"componentType,omitempty"`
	//策略,all
	Policy string `protobuf:"bytes,4,opt,name=policy,proto3" json:"policy,omitempty"`
	//vip拓展天数,当用户为vip时生效
	VipDays bool `protobuf:"varint,5,opt,name=vipDays,proto3" json:"vipDays,omitempty"`
	//最小消耗金额
	MinConsume int64 `protobuf:"varint,6,opt,name=minConsume,proto3" json:"minConsume,omitempty"`
	//最大消耗金额
	MaxConsume int64 `protobuf:"varint,7,opt,name=maxConsume,proto3" json:"maxConsume,omitempty"`
	//充值次数
	MinPayNum int64 `protobuf:"varint,8,opt,name=minPayNum,proto3" json:"minPayNum,omitempty"`
	//第几次充值
	PayTimes int64 `protobuf:"varint,9,opt,name=payTimes,proto3" json:"payTimes,omitempty"`
	//充值金额
	PayAmount int64 `protobuf:"varint,10,opt,name=payAmount,proto3" json:"payAmount,omitempty"`
	//注册天数
	RegDays int64 `protobuf:"varint,11,opt,name=regDays,proto3" json:"regDays,omitempty"`
	//活动描述
	Summary string `protobuf:"bytes,12,opt,name=summary,proto3" json:"summary,omitempty"`
	//活动期间赠送资金科目
	AssetItemId int32 `protobuf:"varint,13,opt,name=assetItemId,proto3" json:"assetItemId,omitempty"`
	//活动期间赠送金额,-1为赠送等额消耗书券
	Amount int64 `protobuf:"varint,14,opt,name=amount,proto3" json:"amount,omitempty"`
	//获得资产编号
	ResId int64 `protobuf:"varint,15,opt,name=resId,proto3" json:"resId,omitempty"`
	//获得资产有效时间
	ResDays int32 `protobuf:"varint,16,opt,name=resDays,proto3" json:"resDays,omitempty"`
}

func (x *ActivityComponentUpdateReply) Reset() {
	*x = ActivityComponentUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityComponentUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityComponentUpdateReply) ProtoMessage() {}

func (x *ActivityComponentUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityComponentUpdateReply.ProtoReflect.Descriptor instead.
func (*ActivityComponentUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP(), []int{7}
}

func (x *ActivityComponentUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ActivityComponentUpdateReply) GetActivityCode() string {
	if x != nil {
		return x.ActivityCode
	}
	return ""
}

func (x *ActivityComponentUpdateReply) GetComponentType() string {
	if x != nil {
		return x.ComponentType
	}
	return ""
}

func (x *ActivityComponentUpdateReply) GetPolicy() string {
	if x != nil {
		return x.Policy
	}
	return ""
}

func (x *ActivityComponentUpdateReply) GetVipDays() bool {
	if x != nil {
		return x.VipDays
	}
	return false
}

func (x *ActivityComponentUpdateReply) GetMinConsume() int64 {
	if x != nil {
		return x.MinConsume
	}
	return 0
}

func (x *ActivityComponentUpdateReply) GetMaxConsume() int64 {
	if x != nil {
		return x.MaxConsume
	}
	return 0
}

func (x *ActivityComponentUpdateReply) GetMinPayNum() int64 {
	if x != nil {
		return x.MinPayNum
	}
	return 0
}

func (x *ActivityComponentUpdateReply) GetPayTimes() int64 {
	if x != nil {
		return x.PayTimes
	}
	return 0
}

func (x *ActivityComponentUpdateReply) GetPayAmount() int64 {
	if x != nil {
		return x.PayAmount
	}
	return 0
}

func (x *ActivityComponentUpdateReply) GetRegDays() int64 {
	if x != nil {
		return x.RegDays
	}
	return 0
}

func (x *ActivityComponentUpdateReply) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ActivityComponentUpdateReply) GetAssetItemId() int32 {
	if x != nil {
		return x.AssetItemId
	}
	return 0
}

func (x *ActivityComponentUpdateReply) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *ActivityComponentUpdateReply) GetResId() int64 {
	if x != nil {
		return x.ResId
	}
	return 0
}

func (x *ActivityComponentUpdateReply) GetResDays() int32 {
	if x != nil {
		return x.ResDays
	}
	return 0
}

// 删除ActivityComponent请求
type ActivityComponentDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ActivityComponentDeleteReq) Reset() {
	*x = ActivityComponentDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityComponentDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityComponentDeleteReq) ProtoMessage() {}

func (x *ActivityComponentDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityComponentDeleteReq.ProtoReflect.Descriptor instead.
func (*ActivityComponentDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP(), []int{8}
}

func (x *ActivityComponentDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除ActivityComponent请求
type ActivityComponentBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *ActivityComponentBatchDeleteReq) Reset() {
	*x = ActivityComponentBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityComponentBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityComponentBatchDeleteReq) ProtoMessage() {}

func (x *ActivityComponentBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityComponentBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*ActivityComponentBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP(), []int{9}
}

func (x *ActivityComponentBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除ActivityComponent返回
type ActivityComponentDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ActivityComponentDeleteReply) Reset() {
	*x = ActivityComponentDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivityComponentDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivityComponentDeleteReply) ProtoMessage() {}

func (x *ActivityComponentDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivityComponentDeleteReply.ProtoReflect.Descriptor instead.
func (*ActivityComponentDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP(), []int{10}
}

func (x *ActivityComponentDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_novel_activitycomponent_v1_activity_component_proto protoreflect.FileDescriptor

var file_api_novel_activitycomponent_v1_activity_component_proto_rawDesc = []byte{
	0x0a, 0x37, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31,
	0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x14, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x01,
	0x0a, 0x18, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x12, 0x40, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x89, 0x01, 0x0a, 0x1a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x42, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x22, 0xa0, 0x05, 0x0a, 0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x69, 0x70, 0x44, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76,
	0x69, 0x70, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x79,
	0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x61,
	0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x72, 0x65, 0x73, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x73,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x44, 0x61, 0x79, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x44, 0x61, 0x79, 0x73, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0xa2, 0x05, 0x0a, 0x16, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x44, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x70, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d,
	0x61, 0x78, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x69, 0x6e, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x44, 0x61,
	0x79, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x44, 0x61, 0x79,
	0x73, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xce, 0x03, 0x0a, 0x1a, 0x41, 0x63,
	0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69,
	0x70, 0x44, 0x61, 0x79, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x70,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x73, 0x75,
	0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x4e, 0x75,
	0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x4e,
	0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72,
	0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65,
	0x73, 0x49, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x44, 0x61, 0x79, 0x73, 0x22, 0xa8, 0x05, 0x0a, 0x1c, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x69, 0x70, 0x44, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x76, 0x69, 0x70, 0x44, 0x61, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x69, 0x6e,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x43, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x61,
	0x79, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x50,
	0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x72, 0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65,
	0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x44, 0x61, 0x79, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x73, 0x44, 0x61, 0x79, 0x73, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xde, 0x03, 0x0a, 0x1a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x44, 0x61, 0x79,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x70, 0x44, 0x61, 0x79, 0x73,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61,
	0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x44,
	0x61, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65, 0x67, 0x44, 0x61,
	0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x44, 0x61, 0x79, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x73, 0x44, 0x61, 0x79, 0x73, 0x22, 0xe0, 0x03, 0x0a, 0x1c, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70,
	0x44, 0x61, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x70, 0x44,
	0x61, 0x79, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x43, 0x6f, 0x6e, 0x73,
	0x75, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x4e, 0x75, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x4e, 0x75,
	0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x67, 0x44, 0x61, 0x79, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x72, 0x65,
	0x67, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x20, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x73,
	0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x72, 0x65, 0x73, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x44, 0x61, 0x79, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x44, 0x61, 0x79, 0x73, 0x22, 0x2c, 0x0a, 0x1a, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x1f, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x36, 0x0a, 0x1c,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x32, 0xf1, 0x07, 0x0a, 0x11, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0xa1, 0x01, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x30, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x95,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2a, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa7, 0x01, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x12, 0x30, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20,
	0x1a, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a,
	0x12, 0xa2, 0x01, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x32,
	0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0xa4, 0x01, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x12, 0x30, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a,
	0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xa9, 0x01, 0x0a,
	0x1c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x35, 0x2e,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x32, 0x2e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18,
	0x2a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2f, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x42, 0x28, 0x5a, 0x26, 0x68, 0x6f, 0x70, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x3b,
	0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_novel_activitycomponent_v1_activity_component_proto_rawDescOnce sync.Once
	file_api_novel_activitycomponent_v1_activity_component_proto_rawDescData = file_api_novel_activitycomponent_v1_activity_component_proto_rawDesc
)

func file_api_novel_activitycomponent_v1_activity_component_proto_rawDescGZIP() []byte {
	file_api_novel_activitycomponent_v1_activity_component_proto_rawDescOnce.Do(func() {
		file_api_novel_activitycomponent_v1_activity_component_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_novel_activitycomponent_v1_activity_component_proto_rawDescData)
	})
	return file_api_novel_activitycomponent_v1_activity_component_proto_rawDescData
}

var file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_novel_activitycomponent_v1_activity_component_proto_goTypes = []interface{}{
	(*ActivityComponentPageReq)(nil),        // 0: activitycomponent.v1.ActivityComponentPageReq
	(*ActivityComponentPageReply)(nil),      // 1: activitycomponent.v1.ActivityComponentPageReply
	(*ActivityComponentReq)(nil),            // 2: activitycomponent.v1.ActivityComponentReq
	(*ActivityComponentReply)(nil),          // 3: activitycomponent.v1.ActivityComponentReply
	(*ActivityComponentCreateReq)(nil),      // 4: activitycomponent.v1.ActivityComponentCreateReq
	(*ActivityComponentCreateReply)(nil),    // 5: activitycomponent.v1.ActivityComponentCreateReply
	(*ActivityComponentUpdateReq)(nil),      // 6: activitycomponent.v1.ActivityComponentUpdateReq
	(*ActivityComponentUpdateReply)(nil),    // 7: activitycomponent.v1.ActivityComponentUpdateReply
	(*ActivityComponentDeleteReq)(nil),      // 8: activitycomponent.v1.ActivityComponentDeleteReq
	(*ActivityComponentBatchDeleteReq)(nil), // 9: activitycomponent.v1.ActivityComponentBatchDeleteReq
	(*ActivityComponentDeleteReply)(nil),    // 10: activitycomponent.v1.ActivityComponentDeleteReply
	(*pagin.Pagination)(nil),                // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),           // 12: google.protobuf.Timestamp
}
var file_api_novel_activitycomponent_v1_activity_component_proto_depIdxs = []int32{
	11, // 0: activitycomponent.v1.ActivityComponentPageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: activitycomponent.v1.ActivityComponentPageReq.param:type_name -> activitycomponent.v1.ActivityComponentReq
	11, // 2: activitycomponent.v1.ActivityComponentPageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: activitycomponent.v1.ActivityComponentPageReply.items:type_name -> activitycomponent.v1.ActivityComponentReply
	12, // 4: activitycomponent.v1.ActivityComponentReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: activitycomponent.v1.ActivityComponentReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: activitycomponent.v1.ActivityComponentReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: activitycomponent.v1.ActivityComponentReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: activitycomponent.v1.ActivityComponentCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: activitycomponent.v1.ActivityComponentCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: activitycomponent.v1.ActivityComponent.GetPageActivityComponent:input_type -> activitycomponent.v1.ActivityComponentPageReq
	2,  // 11: activitycomponent.v1.ActivityComponent.GetActivityComponent:input_type -> activitycomponent.v1.ActivityComponentReq
	6,  // 12: activitycomponent.v1.ActivityComponent.UpdateActivityComponent:input_type -> activitycomponent.v1.ActivityComponentUpdateReq
	4,  // 13: activitycomponent.v1.ActivityComponent.CreateActivityComponent:input_type -> activitycomponent.v1.ActivityComponentCreateReq
	8,  // 14: activitycomponent.v1.ActivityComponent.DeleteActivityComponent:input_type -> activitycomponent.v1.ActivityComponentDeleteReq
	9,  // 15: activitycomponent.v1.ActivityComponent.BatchDeleteActivityComponent:input_type -> activitycomponent.v1.ActivityComponentBatchDeleteReq
	1,  // 16: activitycomponent.v1.ActivityComponent.GetPageActivityComponent:output_type -> activitycomponent.v1.ActivityComponentPageReply
	3,  // 17: activitycomponent.v1.ActivityComponent.GetActivityComponent:output_type -> activitycomponent.v1.ActivityComponentReply
	7,  // 18: activitycomponent.v1.ActivityComponent.UpdateActivityComponent:output_type -> activitycomponent.v1.ActivityComponentUpdateReply
	5,  // 19: activitycomponent.v1.ActivityComponent.CreateActivityComponent:output_type -> activitycomponent.v1.ActivityComponentCreateReply
	10, // 20: activitycomponent.v1.ActivityComponent.DeleteActivityComponent:output_type -> activitycomponent.v1.ActivityComponentDeleteReply
	10, // 21: activitycomponent.v1.ActivityComponent.BatchDeleteActivityComponent:output_type -> activitycomponent.v1.ActivityComponentDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_novel_activitycomponent_v1_activity_component_proto_init() }
func file_api_novel_activitycomponent_v1_activity_component_proto_init() {
	if File_api_novel_activitycomponent_v1_activity_component_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityComponentPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityComponentPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityComponentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityComponentReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityComponentCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityComponentCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityComponentUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityComponentUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityComponentDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityComponentBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivityComponentDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_novel_activitycomponent_v1_activity_component_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_novel_activitycomponent_v1_activity_component_proto_goTypes,
		DependencyIndexes: file_api_novel_activitycomponent_v1_activity_component_proto_depIdxs,
		MessageInfos:      file_api_novel_activitycomponent_v1_activity_component_proto_msgTypes,
	}.Build()
	File_api_novel_activitycomponent_v1_activity_component_proto = out.File
	file_api_novel_activitycomponent_v1_activity_component_proto_rawDesc = nil
	file_api_novel_activitycomponent_v1_activity_component_proto_goTypes = nil
	file_api_novel_activitycomponent_v1_activity_component_proto_depIdxs = nil
}
