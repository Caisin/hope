// Code generated by Caisin. DO NOT EDIT.
// source: apps/admin/internal/data/ent/schema/sys_post.go

package convert

import (
	"google.golang.org/protobuf/types/known/timestamppb"
	v1 "hope/api/admin/syspost/v1"
	"hope/apps/admin/internal/data/ent"
)

func SysPostUpdateReq2Data(v *v1.SysPostUpdateReq) *ent.SysPost {
	if v == nil {
		return nil
	}
	return &ent.SysPost{
		ID:       v.Id,
		PostName: v.PostName,
		PostCode: v.PostCode,
		Sort:     v.Sort,
		Status:   v.Status,
	}
}

func SysPostData2UpdateReq(v *ent.SysPost) *v1.SysPostUpdateReq {
	if v == nil {
		return nil
	}
	return &v1.SysPostUpdateReq{
		Id:       v.ID,
		PostName: v.PostName,
		PostCode: v.PostCode,
		Sort:     v.Sort,
		Status:   v.Status,
	}
}

func SysPostCreateReq2Data(v *v1.SysPostCreateReq) *ent.SysPost {
	if v == nil {
		return nil
	}
	return &ent.SysPost{
		PostName: v.PostName,
		PostCode: v.PostCode,
		Sort:     v.Sort,
		Status:   v.Status,
	}
}

func SysPostData2CreateReq(v *ent.SysPost) *v1.SysPostCreateReq {
	if v == nil {
		return nil
	}
	return &v1.SysPostCreateReq{
		PostName: v.PostName,
		PostCode: v.PostCode,
		Sort:     v.Sort,
		Status:   v.Status,
	}
}

func SysPostReq2Data(v *v1.SysPostReq) *ent.SysPost {
	if v == nil {
		return nil
	}
	return &ent.SysPost{
		PostName: v.PostName,
		PostCode: v.PostCode,
		Sort:     v.Sort,
		Status:   v.Status,
	}
}

func SysPostData2Req(v *ent.SysPost) *v1.SysPostReq {
	if v == nil {
		return nil
	}
	return &v1.SysPostReq{
		PostName: v.PostName,
		PostCode: v.PostCode,
		Sort:     v.Sort,
		Status:   v.Status,
	}
}

func SysPostReply2Data(v *v1.SysPostReply) *ent.SysPost {
	if v == nil {
		return nil
	}
	return &ent.SysPost{
		ID:        v.Id,
		PostName:  v.PostName,
		PostCode:  v.PostCode,
		Sort:      v.Sort,
		Status:    v.Status,
		Remark:    v.Remark,
		CreatedAt: v.CreatedAt.AsTime(),
		UpdatedAt: v.UpdatedAt.AsTime(),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func SysPostData2Reply(v *ent.SysPost) *v1.SysPostReply {
	if v == nil {
		return nil
	}
	return &v1.SysPostReply{
		Id:        v.ID,
		PostName:  v.PostName,
		PostCode:  v.PostCode,
		Sort:      v.Sort,
		Status:    v.Status,
		Remark:    v.Remark,
		CreatedAt: timestamppb.New(v.CreatedAt),
		UpdatedAt: timestamppb.New(v.UpdatedAt),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func SysPostUpdateReply2Data(v *v1.SysPostUpdateReply) *ent.SysPost {
	if v == nil {
		return nil
	}
	return &ent.SysPost{
		ID:       v.Id,
		PostName: v.PostName,
		PostCode: v.PostCode,
		Sort:     v.Sort,
		Status:   v.Status,
	}
}

func SysPostData2UpdateReply(v *ent.SysPost) *v1.SysPostUpdateReply {
	if v == nil {
		return nil
	}
	return &v1.SysPostUpdateReply{
		Id:       v.ID,
		PostName: v.PostName,
		PostCode: v.PostCode,
		Sort:     v.Sort,
		Status:   v.Status,
	}
}

func SysPostCreateReply2Data(v *v1.SysPostCreateReply) *ent.SysPost {
	if v == nil {
		return nil
	}
	return &ent.SysPost{
		ID:        v.Id,
		PostName:  v.PostName,
		PostCode:  v.PostCode,
		Sort:      v.Sort,
		Status:    v.Status,
		Remark:    v.Remark,
		CreatedAt: v.CreatedAt.AsTime(),
		UpdatedAt: v.UpdatedAt.AsTime(),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}

func SysPostData2CreateReply(v *ent.SysPost) *v1.SysPostCreateReply {
	if v == nil {
		return nil
	}
	return &v1.SysPostCreateReply{
		Id:        v.ID,
		PostName:  v.PostName,
		PostCode:  v.PostCode,
		Sort:      v.Sort,
		Status:    v.Status,
		Remark:    v.Remark,
		CreatedAt: timestamppb.New(v.CreatedAt),
		UpdatedAt: timestamppb.New(v.UpdatedAt),
		CreateBy:  v.CreateBy,
		UpdateBy:  v.UpdateBy,
		TenantId:  v.TenantId,
	}
}
