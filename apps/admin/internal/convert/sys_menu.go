// Code generated by Caisin. DO NOT EDIT.
// source: apps/admin/internal/data/ent/schema/sys_menu.go

package convert

import (
	"google.golang.org/protobuf/types/known/timestamppb"
	v1 "hope/api/admin/sysmenu/v1"
	"hope/apps/admin/internal/data/ent"
)

func SysMenuUpdateReq2Data(v *v1.SysMenuUpdateReq) *ent.SysMenu {
	if v == nil {
		return nil
	}
	return &ent.SysMenu{
		ID:         v.Id,
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
	}
}

func SysMenuData2UpdateReq(v *ent.SysMenu) *v1.SysMenuUpdateReq {
	if v == nil {
		return nil
	}
	return &v1.SysMenuUpdateReq{
		Id:         v.ID,
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
	}
}

func SysMenuCreateReq2Data(v *v1.SysMenuCreateReq) *ent.SysMenu {
	if v == nil {
		return nil
	}
	return &ent.SysMenu{
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
	}
}

func SysMenuData2CreateReq(v *ent.SysMenu) *v1.SysMenuCreateReq {
	if v == nil {
		return nil
	}
	return &v1.SysMenuCreateReq{
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
	}
}

func SysMenuReq2Data(v *v1.SysMenuReq) *ent.SysMenu {
	if v == nil {
		return nil
	}
	return &ent.SysMenu{
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
	}
}

func SysMenuData2Req(v *ent.SysMenu) *v1.SysMenuReq {
	if v == nil {
		return nil
	}
	return &v1.SysMenuReq{
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
	}
}

func SysMenuReply2Data(v *v1.SysMenuReply) *ent.SysMenu {
	if v == nil {
		return nil
	}
	return &ent.SysMenu{
		ID:         v.Id,
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
		SysApi:     v.SysApi,
		CreatedAt:  v.CreatedAt.AsTime(),
		UpdatedAt:  v.UpdatedAt.AsTime(),
		CreateBy:   v.CreateBy,
		UpdateBy:   v.UpdateBy,
		TenantId:   v.TenantId,
	}
}

func SysMenuData2Reply(v *ent.SysMenu) *v1.SysMenuReply {
	if v == nil {
		return nil
	}
	return &v1.SysMenuReply{
		Id:         v.ID,
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
		SysApi:     v.SysApi,
		CreatedAt:  timestamppb.New(v.CreatedAt),
		UpdatedAt:  timestamppb.New(v.UpdatedAt),
		CreateBy:   v.CreateBy,
		UpdateBy:   v.UpdateBy,
		TenantId:   v.TenantId,
	}
}

func SysMenuUpdateReply2Data(v *v1.SysMenuUpdateReply) *ent.SysMenu {
	if v == nil {
		return nil
	}
	return &ent.SysMenu{
		ID:         v.Id,
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
	}
}

func SysMenuData2UpdateReply(v *ent.SysMenu) *v1.SysMenuUpdateReply {
	if v == nil {
		return nil
	}
	return &v1.SysMenuUpdateReply{
		Id:         v.ID,
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
	}
}

func SysMenuCreateReply2Data(v *v1.SysMenuCreateReply) *ent.SysMenu {
	if v == nil {
		return nil
	}
	return &ent.SysMenu{
		ID:         v.Id,
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
		SysApi:     v.SysApi,
		CreatedAt:  v.CreatedAt.AsTime(),
		UpdatedAt:  v.UpdatedAt.AsTime(),
		CreateBy:   v.CreateBy,
		UpdateBy:   v.UpdateBy,
		TenantId:   v.TenantId,
	}
}

func SysMenuData2CreateReply(v *ent.SysMenu) *v1.SysMenuCreateReply {
	if v == nil {
		return nil
	}
	return &v1.SysMenuCreateReply{
		Id:         v.ID,
		MenuName:   v.MenuName,
		Title:      v.Title,
		Icon:       v.Icon,
		Path:       v.Path,
		Paths:      v.Paths,
		MenuType:   v.MenuType,
		Action:     v.Action,
		Permission: v.Permission,
		NoCache:    v.NoCache,
		Breadcrumb: v.Breadcrumb,
		Component:  v.Component,
		Sort:       v.Sort,
		Visible:    v.Visible,
		IsFrame:    v.IsFrame,
		SysApi:     v.SysApi,
		CreatedAt:  timestamppb.New(v.CreatedAt),
		UpdatedAt:  timestamppb.New(v.UpdatedAt),
		CreateBy:   v.CreateBy,
		UpdateBy:   v.UpdateBy,
		TenantId:   v.TenantId,
	}
}
