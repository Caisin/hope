// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/param/noveltag/v1/novel_tag.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type NovelTagPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *NovelTagReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *NovelTagPageReq) Reset() {
	*x = NovelTagPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelTagPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelTagPageReq) ProtoMessage() {}

func (x *NovelTagPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelTagPageReq.ProtoReflect.Descriptor instead.
func (*NovelTagPageReq) Descriptor() ([]byte, []int) {
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP(), []int{0}
}

func (x *NovelTagPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *NovelTagPageReq) GetParam() *NovelTagReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type NovelTagPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*NovelTagReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NovelTagPageReply) Reset() {
	*x = NovelTagPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelTagPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelTagPageReply) ProtoMessage() {}

func (x *NovelTagPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelTagPageReply.ProtoReflect.Descriptor instead.
func (*NovelTagPageReply) Descriptor() ([]byte, []int) {
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP(), []int{1}
}

func (x *NovelTagPageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *NovelTagPageReply) GetItems() []*NovelTagReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type NovelTagReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//主键
	TagId int64 `protobuf:"varint,2,opt,name=tagId,proto3" json:"tagId,omitempty"`
	//标签名称
	TagName string `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
	//备注
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,8,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,9,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelTagReq) Reset() {
	*x = NovelTagReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelTagReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelTagReq) ProtoMessage() {}

func (x *NovelTagReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelTagReq.ProtoReflect.Descriptor instead.
func (*NovelTagReq) Descriptor() ([]byte, []int) {
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP(), []int{2}
}

func (x *NovelTagReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelTagReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *NovelTagReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *NovelTagReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *NovelTagReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelTagReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelTagReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelTagReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelTagReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type NovelTagReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//主键
	TagId int64 `protobuf:"varint,2,opt,name=tagId,proto3" json:"tagId,omitempty"`
	//标签名称
	TagName string `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
	//备注
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,8,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,9,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelTagReply) Reset() {
	*x = NovelTagReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelTagReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelTagReply) ProtoMessage() {}

func (x *NovelTagReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelTagReply.ProtoReflect.Descriptor instead.
func (*NovelTagReply) Descriptor() ([]byte, []int) {
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP(), []int{3}
}

func (x *NovelTagReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelTagReply) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *NovelTagReply) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *NovelTagReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *NovelTagReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelTagReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelTagReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelTagReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelTagReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建NovelTag请求
type NovelTagCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//主键
	TagId int64 `protobuf:"varint,1,opt,name=tagId,proto3" json:"tagId,omitempty"`
	//标签名称
	TagName string `protobuf:"bytes,2,opt,name=tagName,proto3" json:"tagName,omitempty"`
	//备注
	Remark string `protobuf:"bytes,3,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *NovelTagCreateReq) Reset() {
	*x = NovelTagCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelTagCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelTagCreateReq) ProtoMessage() {}

func (x *NovelTagCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelTagCreateReq.ProtoReflect.Descriptor instead.
func (*NovelTagCreateReq) Descriptor() ([]byte, []int) {
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP(), []int{4}
}

func (x *NovelTagCreateReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *NovelTagCreateReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *NovelTagCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建NovelTag返回
type NovelTagCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//主键
	TagId int64 `protobuf:"varint,2,opt,name=tagId,proto3" json:"tagId,omitempty"`
	//标签名称
	TagName string `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
	//备注
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,7,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,8,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,9,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *NovelTagCreateReply) Reset() {
	*x = NovelTagCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelTagCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelTagCreateReply) ProtoMessage() {}

func (x *NovelTagCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelTagCreateReply.ProtoReflect.Descriptor instead.
func (*NovelTagCreateReply) Descriptor() ([]byte, []int) {
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP(), []int{5}
}

func (x *NovelTagCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelTagCreateReply) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *NovelTagCreateReply) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *NovelTagCreateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *NovelTagCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *NovelTagCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *NovelTagCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *NovelTagCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *NovelTagCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新NovelTag请求
type NovelTagUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//主键
	TagId int64 `protobuf:"varint,2,opt,name=tagId,proto3" json:"tagId,omitempty"`
	//标签名称
	TagName string `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
	//备注
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *NovelTagUpdateReq) Reset() {
	*x = NovelTagUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelTagUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelTagUpdateReq) ProtoMessage() {}

func (x *NovelTagUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelTagUpdateReq.ProtoReflect.Descriptor instead.
func (*NovelTagUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP(), []int{6}
}

func (x *NovelTagUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelTagUpdateReq) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *NovelTagUpdateReq) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *NovelTagUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新NovelTag返回
type NovelTagUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//主键
	TagId int64 `protobuf:"varint,2,opt,name=tagId,proto3" json:"tagId,omitempty"`
	//标签名称
	TagName string `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
	//备注
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *NovelTagUpdateReply) Reset() {
	*x = NovelTagUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelTagUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelTagUpdateReply) ProtoMessage() {}

func (x *NovelTagUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelTagUpdateReply.ProtoReflect.Descriptor instead.
func (*NovelTagUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP(), []int{7}
}

func (x *NovelTagUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NovelTagUpdateReply) GetTagId() int64 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *NovelTagUpdateReply) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *NovelTagUpdateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 删除NovelTag请求
type NovelTagDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *NovelTagDeleteReq) Reset() {
	*x = NovelTagDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelTagDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelTagDeleteReq) ProtoMessage() {}

func (x *NovelTagDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelTagDeleteReq.ProtoReflect.Descriptor instead.
func (*NovelTagDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP(), []int{8}
}

func (x *NovelTagDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除NovelTag请求
type NovelTagBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *NovelTagBatchDeleteReq) Reset() {
	*x = NovelTagBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelTagBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelTagBatchDeleteReq) ProtoMessage() {}

func (x *NovelTagBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelTagBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*NovelTagBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP(), []int{9}
}

func (x *NovelTagBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除NovelTag返回
type NovelTagDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *NovelTagDeleteReply) Reset() {
	*x = NovelTagDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NovelTagDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NovelTagDeleteReply) ProtoMessage() {}

func (x *NovelTagDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_param_noveltag_v1_novel_tag_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NovelTagDeleteReply.ProtoReflect.Descriptor instead.
func (*NovelTagDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP(), []int{10}
}

func (x *NovelTagDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_param_noveltag_v1_novel_tag_proto protoreflect.FileDescriptor

var file_api_param_noveltag_v1_novel_tag_proto_rawDesc = []byte{
	0x0a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x2f, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x74, 0x61, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x61,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61,
	0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x0f, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x2e,
	0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x6e,
	0x0a, 0x11, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x30, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54,
	0x61, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xad,
	0x02, 0x0a, 0x0b, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x61, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xaf,
	0x02, 0x0a, 0x0d, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x5b, 0x0a, 0x11, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xb5, 0x02,
	0x0a, 0x13, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x74,
	0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e,
	0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x11, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61,
	0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x22, 0x6d, 0x0a, 0x13, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x61, 0x67,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0x23, 0x0a, 0x11, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a, 0x16, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54,
	0x61, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x2d, 0x0a, 0x13, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x32, 0x9e, 0x05, 0x0a, 0x08, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x12, 0x6b,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61,
	0x67, 0x12, 0x1c, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x1e, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x2f, 0x74, 0x61, 0x67, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x5f, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x12, 0x18, 0x2e, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x2f, 0x74, 0x61, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x71, 0x0a, 0x0e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x12, 0x1e,
	0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x54, 0x61, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x54, 0x61, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x1a, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x2f, 0x74, 0x61, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12,
	0x6c, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61,
	0x67, 0x12, 0x1e, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x20, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31,
	0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x74, 0x61, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x6e, 0x0a,
	0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x12,
	0x1e, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x20, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x74, 0x61, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x73, 0x0a,
	0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x54, 0x61, 0x67, 0x12, 0x23, 0x2e, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x74, 0x61, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x54, 0x61, 0x67,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x0f, 0x2a, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x74,
	0x61, 0x67, 0x42, 0x1f, 0x5a, 0x1d, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x74, 0x61, 0x67, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_param_noveltag_v1_novel_tag_proto_rawDescOnce sync.Once
	file_api_param_noveltag_v1_novel_tag_proto_rawDescData = file_api_param_noveltag_v1_novel_tag_proto_rawDesc
)

func file_api_param_noveltag_v1_novel_tag_proto_rawDescGZIP() []byte {
	file_api_param_noveltag_v1_novel_tag_proto_rawDescOnce.Do(func() {
		file_api_param_noveltag_v1_novel_tag_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_param_noveltag_v1_novel_tag_proto_rawDescData)
	})
	return file_api_param_noveltag_v1_novel_tag_proto_rawDescData
}

var file_api_param_noveltag_v1_novel_tag_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_param_noveltag_v1_novel_tag_proto_goTypes = []interface{}{
	(*NovelTagPageReq)(nil),        // 0: noveltag.v1.NovelTagPageReq
	(*NovelTagPageReply)(nil),      // 1: noveltag.v1.NovelTagPageReply
	(*NovelTagReq)(nil),            // 2: noveltag.v1.NovelTagReq
	(*NovelTagReply)(nil),          // 3: noveltag.v1.NovelTagReply
	(*NovelTagCreateReq)(nil),      // 4: noveltag.v1.NovelTagCreateReq
	(*NovelTagCreateReply)(nil),    // 5: noveltag.v1.NovelTagCreateReply
	(*NovelTagUpdateReq)(nil),      // 6: noveltag.v1.NovelTagUpdateReq
	(*NovelTagUpdateReply)(nil),    // 7: noveltag.v1.NovelTagUpdateReply
	(*NovelTagDeleteReq)(nil),      // 8: noveltag.v1.NovelTagDeleteReq
	(*NovelTagBatchDeleteReq)(nil), // 9: noveltag.v1.NovelTagBatchDeleteReq
	(*NovelTagDeleteReply)(nil),    // 10: noveltag.v1.NovelTagDeleteReply
	(*pagin.Pagination)(nil),       // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),  // 12: google.protobuf.Timestamp
}
var file_api_param_noveltag_v1_novel_tag_proto_depIdxs = []int32{
	11, // 0: noveltag.v1.NovelTagPageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: noveltag.v1.NovelTagPageReq.param:type_name -> noveltag.v1.NovelTagReq
	11, // 2: noveltag.v1.NovelTagPageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: noveltag.v1.NovelTagPageReply.items:type_name -> noveltag.v1.NovelTagReply
	12, // 4: noveltag.v1.NovelTagReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: noveltag.v1.NovelTagReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: noveltag.v1.NovelTagReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: noveltag.v1.NovelTagReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: noveltag.v1.NovelTagCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: noveltag.v1.NovelTagCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: noveltag.v1.NovelTag.GetPageNovelTag:input_type -> noveltag.v1.NovelTagPageReq
	2,  // 11: noveltag.v1.NovelTag.GetNovelTag:input_type -> noveltag.v1.NovelTagReq
	6,  // 12: noveltag.v1.NovelTag.UpdateNovelTag:input_type -> noveltag.v1.NovelTagUpdateReq
	4,  // 13: noveltag.v1.NovelTag.CreateNovelTag:input_type -> noveltag.v1.NovelTagCreateReq
	8,  // 14: noveltag.v1.NovelTag.DeleteNovelTag:input_type -> noveltag.v1.NovelTagDeleteReq
	9,  // 15: noveltag.v1.NovelTag.BatchDeleteNovelTag:input_type -> noveltag.v1.NovelTagBatchDeleteReq
	1,  // 16: noveltag.v1.NovelTag.GetPageNovelTag:output_type -> noveltag.v1.NovelTagPageReply
	3,  // 17: noveltag.v1.NovelTag.GetNovelTag:output_type -> noveltag.v1.NovelTagReply
	7,  // 18: noveltag.v1.NovelTag.UpdateNovelTag:output_type -> noveltag.v1.NovelTagUpdateReply
	5,  // 19: noveltag.v1.NovelTag.CreateNovelTag:output_type -> noveltag.v1.NovelTagCreateReply
	10, // 20: noveltag.v1.NovelTag.DeleteNovelTag:output_type -> noveltag.v1.NovelTagDeleteReply
	10, // 21: noveltag.v1.NovelTag.BatchDeleteNovelTag:output_type -> noveltag.v1.NovelTagDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_param_noveltag_v1_novel_tag_proto_init() }
func file_api_param_noveltag_v1_novel_tag_proto_init() {
	if File_api_param_noveltag_v1_novel_tag_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_param_noveltag_v1_novel_tag_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelTagPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_noveltag_v1_novel_tag_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelTagPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_noveltag_v1_novel_tag_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelTagReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_noveltag_v1_novel_tag_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelTagReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_noveltag_v1_novel_tag_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelTagCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_noveltag_v1_novel_tag_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelTagCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_noveltag_v1_novel_tag_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelTagUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_noveltag_v1_novel_tag_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelTagUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_noveltag_v1_novel_tag_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelTagDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_noveltag_v1_novel_tag_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelTagBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_param_noveltag_v1_novel_tag_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NovelTagDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_param_noveltag_v1_novel_tag_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_param_noveltag_v1_novel_tag_proto_goTypes,
		DependencyIndexes: file_api_param_noveltag_v1_novel_tag_proto_depIdxs,
		MessageInfos:      file_api_param_noveltag_v1_novel_tag_proto_msgTypes,
	}.Build()
	File_api_param_noveltag_v1_novel_tag_proto = out.File
	file_api_param_noveltag_v1_novel_tag_proto_rawDesc = nil
	file_api_param_noveltag_v1_novel_tag_proto_goTypes = nil
	file_api_param_noveltag_v1_novel_tag_proto_depIdxs = nil
}
