// Code generated by entc, DO NOT EDIT.

package task

import (
	"time"
)

const (
	// Label holds the string label denoting the task type in the database.
	Label = "task"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTaskName holds the string denoting the taskname field in the database.
	FieldTaskName = "task_name"
	// FieldTaskGroup holds the string denoting the taskgroup field in the database.
	FieldTaskGroup = "task_group"
	// FieldUnit holds the string denoting the unit field in the database.
	FieldUnit = "unit"
	// FieldTopic holds the string denoting the topic field in the database.
	FieldTopic = "topic"
	// FieldFunction holds the string denoting the function field in the database.
	FieldFunction = "function"
	// FieldTaskCode holds the string denoting the taskcode field in the database.
	FieldTaskCode = "task_code"
	// FieldPreTask holds the string denoting the pretask field in the database.
	FieldPreTask = "pre_task"
	// FieldNovelId holds the string denoting the novelid field in the database.
	FieldNovelId = "novel_id"
	// FieldCycleType holds the string denoting the cycletype field in the database.
	FieldCycleType = "cycle_type"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"
	// FieldReward holds the string denoting the reward field in the database.
	FieldReward = "reward"
	// FieldAmountItem holds the string denoting the amountitem field in the database.
	FieldAmountItem = "amount_item"
	// FieldRewardItem holds the string denoting the rewarditem field in the database.
	FieldRewardItem = "reward_item"
	// FieldTargetNames holds the string denoting the targetnames field in the database.
	FieldTargetNames = "target_names"
	// FieldTargetAmounts holds the string denoting the targetamounts field in the database.
	FieldTargetAmounts = "target_amounts"
	// FieldStatus holds the string denoting the status field in the database.
	FieldStatus = "status"
	// FieldSortNum holds the string denoting the sortnum field in the database.
	FieldSortNum = "sort_num"
	// FieldActionType holds the string denoting the actiontype field in the database.
	FieldActionType = "action_type"
	// FieldEffectTime holds the string denoting the effecttime field in the database.
	FieldEffectTime = "effect_time"
	// FieldExpiredTime holds the string denoting the expiredtime field in the database.
	FieldExpiredTime = "expired_time"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreateBy holds the string denoting the createby field in the database.
	FieldCreateBy = "create_by"
	// FieldUpdateBy holds the string denoting the updateby field in the database.
	FieldUpdateBy = "update_by"
	// FieldTenantId holds the string denoting the tenantid field in the database.
	FieldTenantId = "tenant_id"
	// Table holds the table name of the task in the database.
	Table = "tasks"
)

// Columns holds all SQL columns for task fields.
var Columns = []string{
	FieldID,
	FieldTaskName,
	FieldTaskGroup,
	FieldUnit,
	FieldTopic,
	FieldFunction,
	FieldTaskCode,
	FieldPreTask,
	FieldNovelId,
	FieldCycleType,
	FieldRemark,
	FieldAmount,
	FieldReward,
	FieldAmountItem,
	FieldRewardItem,
	FieldTargetNames,
	FieldTargetAmounts,
	FieldStatus,
	FieldSortNum,
	FieldActionType,
	FieldEffectTime,
	FieldExpiredTime,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreateBy,
	FieldUpdateBy,
	FieldTenantId,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEffectTime holds the default value on creation for the "effectTime" field.
	DefaultEffectTime func() time.Time
	// DefaultExpiredTime holds the default value on creation for the "expiredTime" field.
	DefaultExpiredTime func() time.Time
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updatedAt" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updatedAt" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCreateBy holds the default value on creation for the "createBy" field.
	DefaultCreateBy int64
	// DefaultUpdateBy holds the default value on creation for the "updateBy" field.
	DefaultUpdateBy int64
	// DefaultTenantId holds the default value on creation for the "tenantId" field.
	DefaultTenantId int64
)
