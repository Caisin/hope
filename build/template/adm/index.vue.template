<template>
  <div>
    <BasicTable
      @register="registerTable"
      :rowSelection="{ type: 'checkbox', selectedRowKeys: checkedKeys, onChange: onSelectChange }"
    >
      <template #headerTop>
        <a-alert type="info" show-icon>
          <template #message>
            <template v-if="checkedKeys.length > 0">
              <span>已选中{{"{{ checkedKeys.length }}"}}条记录(可跨页)</span>
              <a-button type="link" @click="checkedKeys = []" size="small">清空</a-button>
            </template>
            <template v-else>
              <span>未选中任何项目</span>
            </template>
          </template>
        </a-alert>
      </template>
      <template #toolbar>
        <a-button type="primary" @click="handleCreate"> 新增 </a-button>
        <a-button
          type="primary"
          @click="handleBatchDelete(checkedKeys)"
          :disabled="checkedKeys.length === 0"
        >
          删除
        </a-button>
      </template>
      <template #action="{ record }">
        <TableAction
          :actions="[
            {
              icon: 'clarity:note-edit-line',
              onClick: handleEdit.bind(null, record),
            },
            {
              icon: 'ant-design:delete-outlined',
              color: 'error',
              popConfirm: {
                title: '是否确认删除',
                confirm: handleDelete.bind(null, record),
              },
            },
          ]"
        />
      </template>
    </BasicTable>
    <{{.name}}Modal @register="registerModal" @success="handleSuccess" />
  </div>
</template>
<script lang="ts">
  import { defineComponent, ref } from 'vue';

  import { BasicTable, TableAction, useTable } from '/@/components/Table';
  import { Alert } from 'ant-design-vue';
  import { batchDel{{.name}}, del{{.name}}, get{{.name}}Page } from '/@/api/{{.model}}/{{.pkg}}';

  import { useModal } from '/@/components/Modal';
  import {{.name}}Modal from './{{.name}}Modal.vue';

  import { columns, searchFormSchema } from './{{.pkg}}.data';
  import { DelReq } from '/@/api/model/baseModel';
  import { beforeFetch, transformDateFunc } from '/@/utils/hope';

  export default defineComponent({
    name: '{{.name}}Management',
    components: { AAlert: Alert, BasicTable, {{.name}}Modal, TableAction },
    setup() {
      const checkedKeys = ref<Array<string | number>>([]);
      const [registerModal, { openModal }] = useModal();
      const [registerTable, { reload }] = useTable({
        title: '列表',
        api: get{{.name}}Page,
        columns,
        formConfig: {
          labelWidth: 120,
          schemas: searchFormSchema,
          transformDateFunc: transformDateFunc,
        },
        useSearchForm: true,
        showTableSetting: true,
        bordered: true,
        showIndexColumn: false,
        actionColumn: {
          width: 80,
          title: '操作',
          dataIndex: 'action',
          slots: { customRender: 'action' },
          fixed: 'right',
        },
        beforeFetch: beforeFetch,
        rowKey: '{{.pk}}',
      });

      function handleCreate() {
        openModal(true, {
          isUpdate: false,
        });
      }

      function handleEdit(record: Recordable) {
        openModal(true, {
          record,
          isUpdate: true,
        });
      }

      function handleDelete(record: Recordable) {
        del{{.name}}(record.id).then(() => reload());
      }

      function handleBatchDelete(ids: Array<number | string>) {
        batchDel{{.name}}({ ids } as DelReq).then(() => reload());
      }

      function handleSuccess() {
        reload();
      }

      function onSelectChange(selectedRowKeys: (string | number)[]) {
        console.log(selectedRowKeys);
        checkedKeys.value = selectedRowKeys;
      }

      return {
        checkedKeys,
        registerTable,
        registerModal,
        handleCreate,
        handleEdit,
        handleDelete,
        handleBatchDelete,
        handleSuccess,
        onSelectChange,
      };
    },
  });
</script>
