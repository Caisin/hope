// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/admin/sysloginlog/v1/sys_login_log.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type SysLoginLogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	//状态
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	//ip地址
	Ipaddr string `protobuf:"bytes,4,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	//归属地
	LoginLocation string `protobuf:"bytes,5,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"`
	//浏览器
	Browser string `protobuf:"bytes,6,opt,name=browser,proto3" json:"browser,omitempty"`
	//系统
	Os string `protobuf:"bytes,7,opt,name=os,proto3" json:"os,omitempty"`
	//固件
	Platform string `protobuf:"bytes,8,opt,name=platform,proto3" json:"platform,omitempty"`
	//登录时间
	LoginTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=loginTime,proto3" json:"loginTime,omitempty"`
	//备注
	Remark string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	//信息
	Msg string `protobuf:"bytes,11,opt,name=msg,proto3" json:"msg,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,14,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,15,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,16,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysLoginLogData) Reset() {
	*x = SysLoginLogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogData) ProtoMessage() {}

func (x *SysLoginLogData) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogData.ProtoReflect.Descriptor instead.
func (*SysLoginLogData) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{0}
}

func (x *SysLoginLogData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysLoginLogData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SysLoginLogData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysLoginLogData) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *SysLoginLogData) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *SysLoginLogData) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *SysLoginLogData) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *SysLoginLogData) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SysLoginLogData) GetLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LoginTime
	}
	return nil
}

func (x *SysLoginLogData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysLoginLogData) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SysLoginLogData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysLoginLogData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysLoginLogData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysLoginLogData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysLoginLogData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type SysLoginLogPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *SysLoginLogReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *SysLoginLogPageReq) Reset() {
	*x = SysLoginLogPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogPageReq) ProtoMessage() {}

func (x *SysLoginLogPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogPageReq.ProtoReflect.Descriptor instead.
func (*SysLoginLogPageReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{1}
}

func (x *SysLoginLogPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SysLoginLogPageReq) GetParam() *SysLoginLogReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type SysLoginLogPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*SysLoginLogData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SysLoginLogPageReply) Reset() {
	*x = SysLoginLogPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogPageReply) ProtoMessage() {}

func (x *SysLoginLogPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogPageReply.ProtoReflect.Descriptor instead.
func (*SysLoginLogPageReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{2}
}

func (x *SysLoginLogPageReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysLoginLogPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysLoginLogPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *SysLoginLogPageReply) GetItems() []*SysLoginLogData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type SysLoginLogReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	//状态
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	//ip地址
	Ipaddr string `protobuf:"bytes,4,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	//归属地
	LoginLocation string `protobuf:"bytes,5,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"`
	//浏览器
	Browser string `protobuf:"bytes,6,opt,name=browser,proto3" json:"browser,omitempty"`
	//系统
	Os string `protobuf:"bytes,7,opt,name=os,proto3" json:"os,omitempty"`
	//固件
	Platform string `protobuf:"bytes,8,opt,name=platform,proto3" json:"platform,omitempty"`
	//登录时间
	LoginTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=loginTime,proto3" json:"loginTime,omitempty"`
	//备注
	Remark string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	//信息
	Msg string `protobuf:"bytes,11,opt,name=msg,proto3" json:"msg,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,14,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,15,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,16,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysLoginLogReq) Reset() {
	*x = SysLoginLogReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogReq) ProtoMessage() {}

func (x *SysLoginLogReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogReq.ProtoReflect.Descriptor instead.
func (*SysLoginLogReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{3}
}

func (x *SysLoginLogReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysLoginLogReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SysLoginLogReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysLoginLogReq) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *SysLoginLogReq) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *SysLoginLogReq) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *SysLoginLogReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *SysLoginLogReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SysLoginLogReq) GetLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LoginTime
	}
	return nil
}

func (x *SysLoginLogReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysLoginLogReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SysLoginLogReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysLoginLogReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysLoginLogReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysLoginLogReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysLoginLogReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type SysLoginLogReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysLoginLogData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysLoginLogReply) Reset() {
	*x = SysLoginLogReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogReply) ProtoMessage() {}

func (x *SysLoginLogReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogReply.ProtoReflect.Descriptor instead.
func (*SysLoginLogReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{4}
}

func (x *SysLoginLogReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysLoginLogReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysLoginLogReply) GetResult() *SysLoginLogData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建SysLoginLog请求
type SysLoginLogCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户ID
	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	//状态
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	//ip地址
	Ipaddr string `protobuf:"bytes,3,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	//归属地
	LoginLocation string `protobuf:"bytes,4,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"`
	//浏览器
	Browser string `protobuf:"bytes,5,opt,name=browser,proto3" json:"browser,omitempty"`
	//系统
	Os string `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`
	//固件
	Platform string `protobuf:"bytes,7,opt,name=platform,proto3" json:"platform,omitempty"`
	//登录时间
	LoginTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=loginTime,proto3" json:"loginTime,omitempty"`
	//备注
	Remark string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	//信息
	Msg string `protobuf:"bytes,10,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SysLoginLogCreateReq) Reset() {
	*x = SysLoginLogCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogCreateReq) ProtoMessage() {}

func (x *SysLoginLogCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogCreateReq.ProtoReflect.Descriptor instead.
func (*SysLoginLogCreateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{5}
}

func (x *SysLoginLogCreateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SysLoginLogCreateReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysLoginLogCreateReq) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *SysLoginLogCreateReq) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *SysLoginLogCreateReq) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *SysLoginLogCreateReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *SysLoginLogCreateReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SysLoginLogCreateReq) GetLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LoginTime
	}
	return nil
}

func (x *SysLoginLogCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysLoginLogCreateReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 创建SysLoginLog返回
type SysLoginLogCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysLoginLogData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysLoginLogCreateReply) Reset() {
	*x = SysLoginLogCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogCreateReply) ProtoMessage() {}

func (x *SysLoginLogCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogCreateReply.ProtoReflect.Descriptor instead.
func (*SysLoginLogCreateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{6}
}

func (x *SysLoginLogCreateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysLoginLogCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysLoginLogCreateReply) GetResult() *SysLoginLogData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新SysLoginLog请求
type SysLoginLogUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	//状态
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	//ip地址
	Ipaddr string `protobuf:"bytes,4,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	//归属地
	LoginLocation string `protobuf:"bytes,5,opt,name=loginLocation,proto3" json:"loginLocation,omitempty"`
	//浏览器
	Browser string `protobuf:"bytes,6,opt,name=browser,proto3" json:"browser,omitempty"`
	//系统
	Os string `protobuf:"bytes,7,opt,name=os,proto3" json:"os,omitempty"`
	//固件
	Platform string `protobuf:"bytes,8,opt,name=platform,proto3" json:"platform,omitempty"`
	//登录时间
	LoginTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=loginTime,proto3" json:"loginTime,omitempty"`
	//备注
	Remark string `protobuf:"bytes,10,opt,name=remark,proto3" json:"remark,omitempty"`
	//信息
	Msg string `protobuf:"bytes,11,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *SysLoginLogUpdateReq) Reset() {
	*x = SysLoginLogUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogUpdateReq) ProtoMessage() {}

func (x *SysLoginLogUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogUpdateReq.ProtoReflect.Descriptor instead.
func (*SysLoginLogUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{7}
}

func (x *SysLoginLogUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysLoginLogUpdateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SysLoginLogUpdateReq) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SysLoginLogUpdateReq) GetIpaddr() string {
	if x != nil {
		return x.Ipaddr
	}
	return ""
}

func (x *SysLoginLogUpdateReq) GetLoginLocation() string {
	if x != nil {
		return x.LoginLocation
	}
	return ""
}

func (x *SysLoginLogUpdateReq) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *SysLoginLogUpdateReq) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *SysLoginLogUpdateReq) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *SysLoginLogUpdateReq) GetLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LoginTime
	}
	return nil
}

func (x *SysLoginLogUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysLoginLogUpdateReq) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

// 更新SysLoginLog返回
type SysLoginLogUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *SysLoginLogData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysLoginLogUpdateReply) Reset() {
	*x = SysLoginLogUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogUpdateReply) ProtoMessage() {}

func (x *SysLoginLogUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogUpdateReply.ProtoReflect.Descriptor instead.
func (*SysLoginLogUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{8}
}

func (x *SysLoginLogUpdateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysLoginLogUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysLoginLogUpdateReply) GetResult() *SysLoginLogData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除SysLoginLog请求
type SysLoginLogDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SysLoginLogDeleteReq) Reset() {
	*x = SysLoginLogDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogDeleteReq) ProtoMessage() {}

func (x *SysLoginLogDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogDeleteReq.ProtoReflect.Descriptor instead.
func (*SysLoginLogDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{9}
}

func (x *SysLoginLogDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除SysLoginLog请求
type SysLoginLogBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SysLoginLogBatchDeleteReq) Reset() {
	*x = SysLoginLogBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogBatchDeleteReq) ProtoMessage() {}

func (x *SysLoginLogBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*SysLoginLogBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{10}
}

func (x *SysLoginLogBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除SysLoginLog返回
type SysLoginLogDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysLoginLogDeleteReply) Reset() {
	*x = SysLoginLogDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysLoginLogDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysLoginLogDeleteReply) ProtoMessage() {}

func (x *SysLoginLogDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysLoginLogDeleteReply.ProtoReflect.Descriptor instead.
func (*SysLoginLogDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP(), []int{11}
}

func (x *SysLoginLogDeleteReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SysLoginLogDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SysLoginLogDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_admin_sysloginlog_v1_sys_login_log_proto protoreflect.FileDescriptor

var file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x81, 0x04, 0x0a,
	0x0f, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x38, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x73, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x50,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12,
	0x34, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x52, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x91, 0x01, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x80, 0x04, 0x0a, 0x0e, 0x53, 0x79,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x70,
	0x61, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72,
	0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f,
	0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x12, 0x38, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x10,
	0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xae, 0x02, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x38, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x7f, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x37, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbe, 0x02, 0x0a, 0x14, 0x53, 0x79,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x70, 0x61, 0x64, 0x64, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x38, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x7f, 0x0a, 0x16, 0x53, 0x79,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x53,
	0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x19, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x5e, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x32, 0x96, 0x06, 0x0a, 0x0b, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x12, 0x7e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73,
	0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x72, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16,
	0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x6c, 0x6f,
	0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x84, 0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x24, 0x2e, 0x73,
	0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x7f, 0x0a,
	0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x12, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79,
	0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x6c, 0x6f, 0x67, 0x3a, 0x01, 0x2a, 0x12, 0x81,
	0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c,
	0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73,
	0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x2a, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x6c, 0x6f, 0x67, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x86, 0x01, 0x0a, 0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x12, 0x29, 0x2e,
	0x73, 0x79, 0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x79, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79,
	0x73, 0x2f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x2f, 0x6c, 0x6f, 0x67, 0x42, 0x22, 0x5a, 0x20, 0x68,
	0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79,
	0x73, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x6c, 0x6f, 0x67, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescOnce sync.Once
	file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescData = file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDesc
)

func file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescGZIP() []byte {
	file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescOnce.Do(func() {
		file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescData)
	})
	return file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDescData
}

var file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_admin_sysloginlog_v1_sys_login_log_proto_goTypes = []interface{}{
	(*SysLoginLogData)(nil),           // 0: sysloginlog.v1.SysLoginLogData
	(*SysLoginLogPageReq)(nil),        // 1: sysloginlog.v1.SysLoginLogPageReq
	(*SysLoginLogPageReply)(nil),      // 2: sysloginlog.v1.SysLoginLogPageReply
	(*SysLoginLogReq)(nil),            // 3: sysloginlog.v1.SysLoginLogReq
	(*SysLoginLogReply)(nil),          // 4: sysloginlog.v1.SysLoginLogReply
	(*SysLoginLogCreateReq)(nil),      // 5: sysloginlog.v1.SysLoginLogCreateReq
	(*SysLoginLogCreateReply)(nil),    // 6: sysloginlog.v1.SysLoginLogCreateReply
	(*SysLoginLogUpdateReq)(nil),      // 7: sysloginlog.v1.SysLoginLogUpdateReq
	(*SysLoginLogUpdateReply)(nil),    // 8: sysloginlog.v1.SysLoginLogUpdateReply
	(*SysLoginLogDeleteReq)(nil),      // 9: sysloginlog.v1.SysLoginLogDeleteReq
	(*SysLoginLogBatchDeleteReq)(nil), // 10: sysloginlog.v1.SysLoginLogBatchDeleteReq
	(*SysLoginLogDeleteReply)(nil),    // 11: sysloginlog.v1.SysLoginLogDeleteReply
	(*timestamppb.Timestamp)(nil),     // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),          // 13: pagin.Pagination
}
var file_api_admin_sysloginlog_v1_sys_login_log_proto_depIdxs = []int32{
	12, // 0: sysloginlog.v1.SysLoginLogData.loginTime:type_name -> google.protobuf.Timestamp
	12, // 1: sysloginlog.v1.SysLoginLogData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 2: sysloginlog.v1.SysLoginLogData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 3: sysloginlog.v1.SysLoginLogPageReq.pagin:type_name -> pagin.Pagination
	3,  // 4: sysloginlog.v1.SysLoginLogPageReq.param:type_name -> sysloginlog.v1.SysLoginLogReq
	0,  // 5: sysloginlog.v1.SysLoginLogPageReply.items:type_name -> sysloginlog.v1.SysLoginLogData
	12, // 6: sysloginlog.v1.SysLoginLogReq.loginTime:type_name -> google.protobuf.Timestamp
	12, // 7: sysloginlog.v1.SysLoginLogReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 8: sysloginlog.v1.SysLoginLogReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 9: sysloginlog.v1.SysLoginLogReply.result:type_name -> sysloginlog.v1.SysLoginLogData
	12, // 10: sysloginlog.v1.SysLoginLogCreateReq.loginTime:type_name -> google.protobuf.Timestamp
	0,  // 11: sysloginlog.v1.SysLoginLogCreateReply.result:type_name -> sysloginlog.v1.SysLoginLogData
	12, // 12: sysloginlog.v1.SysLoginLogUpdateReq.loginTime:type_name -> google.protobuf.Timestamp
	0,  // 13: sysloginlog.v1.SysLoginLogUpdateReply.result:type_name -> sysloginlog.v1.SysLoginLogData
	1,  // 14: sysloginlog.v1.SysLoginLog.GetPageSysLoginLog:input_type -> sysloginlog.v1.SysLoginLogPageReq
	3,  // 15: sysloginlog.v1.SysLoginLog.GetSysLoginLog:input_type -> sysloginlog.v1.SysLoginLogReq
	7,  // 16: sysloginlog.v1.SysLoginLog.UpdateSysLoginLog:input_type -> sysloginlog.v1.SysLoginLogUpdateReq
	5,  // 17: sysloginlog.v1.SysLoginLog.CreateSysLoginLog:input_type -> sysloginlog.v1.SysLoginLogCreateReq
	9,  // 18: sysloginlog.v1.SysLoginLog.DeleteSysLoginLog:input_type -> sysloginlog.v1.SysLoginLogDeleteReq
	10, // 19: sysloginlog.v1.SysLoginLog.BatchDeleteSysLoginLog:input_type -> sysloginlog.v1.SysLoginLogBatchDeleteReq
	2,  // 20: sysloginlog.v1.SysLoginLog.GetPageSysLoginLog:output_type -> sysloginlog.v1.SysLoginLogPageReply
	4,  // 21: sysloginlog.v1.SysLoginLog.GetSysLoginLog:output_type -> sysloginlog.v1.SysLoginLogReply
	8,  // 22: sysloginlog.v1.SysLoginLog.UpdateSysLoginLog:output_type -> sysloginlog.v1.SysLoginLogUpdateReply
	6,  // 23: sysloginlog.v1.SysLoginLog.CreateSysLoginLog:output_type -> sysloginlog.v1.SysLoginLogCreateReply
	11, // 24: sysloginlog.v1.SysLoginLog.DeleteSysLoginLog:output_type -> sysloginlog.v1.SysLoginLogDeleteReply
	11, // 25: sysloginlog.v1.SysLoginLog.BatchDeleteSysLoginLog:output_type -> sysloginlog.v1.SysLoginLogDeleteReply
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_admin_sysloginlog_v1_sys_login_log_proto_init() }
func file_api_admin_sysloginlog_v1_sys_login_log_proto_init() {
	if File_api_admin_sysloginlog_v1_sys_login_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysLoginLogDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_admin_sysloginlog_v1_sys_login_log_proto_goTypes,
		DependencyIndexes: file_api_admin_sysloginlog_v1_sys_login_log_proto_depIdxs,
		MessageInfos:      file_api_admin_sysloginlog_v1_sys_login_log_proto_msgTypes,
	}.Build()
	File_api_admin_sysloginlog_v1_sys_login_log_proto = out.File
	file_api_admin_sysloginlog_v1_sys_login_log_proto_rawDesc = nil
	file_api_admin_sysloginlog_v1_sys_login_log_proto_goTypes = nil
	file_api_admin_sysloginlog_v1_sys_login_log_proto_depIdxs = nil
}
