// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/novel/customernovels/v1/customer_novels.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type CustomerNovelsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//小说编码
	NovelId int64 `protobuf:"varint,2,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//类型编号,见参数表sys_dic_data,dicType=customer_type,dic_sort值
	TypeId int32 `protobuf:"varint,3,opt,name=typeId,proto3" json:"typeId,omitempty"`
	//类型编码,见参数表sys_dic_data,dicType=customer_type,dic_type值
	TypeCode string `protobuf:"bytes,4,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//分组编码
	GroupCode string `protobuf:"bytes,5,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	//字段
	FieldName string `protobuf:"bytes,6,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	//封面,无值使用小说封面
	Cover string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	//排序字段,值越大,越靠前
	OrderNum int32 `protobuf:"varint,8,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	//备注
	Remark string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,14,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,15,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,16,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *CustomerNovelsData) Reset() {
	*x = CustomerNovelsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsData) ProtoMessage() {}

func (x *CustomerNovelsData) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsData.ProtoReflect.Descriptor instead.
func (*CustomerNovelsData) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{0}
}

func (x *CustomerNovelsData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomerNovelsData) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *CustomerNovelsData) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *CustomerNovelsData) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *CustomerNovelsData) GetGroupCode() string {
	if x != nil {
		return x.GroupCode
	}
	return ""
}

func (x *CustomerNovelsData) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *CustomerNovelsData) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CustomerNovelsData) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *CustomerNovelsData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CustomerNovelsData) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *CustomerNovelsData) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

func (x *CustomerNovelsData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CustomerNovelsData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CustomerNovelsData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *CustomerNovelsData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *CustomerNovelsData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type CustomerNovelsPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *CustomerNovelsReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *CustomerNovelsPageReq) Reset() {
	*x = CustomerNovelsPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsPageReq) ProtoMessage() {}

func (x *CustomerNovelsPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsPageReq.ProtoReflect.Descriptor instead.
func (*CustomerNovelsPageReq) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{1}
}

func (x *CustomerNovelsPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *CustomerNovelsPageReq) GetParam() *CustomerNovelsReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type CustomerNovelsPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*CustomerNovelsData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CustomerNovelsPageReply) Reset() {
	*x = CustomerNovelsPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsPageReply) ProtoMessage() {}

func (x *CustomerNovelsPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsPageReply.ProtoReflect.Descriptor instead.
func (*CustomerNovelsPageReply) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{2}
}

func (x *CustomerNovelsPageReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CustomerNovelsPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CustomerNovelsPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *CustomerNovelsPageReply) GetItems() []*CustomerNovelsData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type CustomerNovelsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//小说编码
	NovelId int64 `protobuf:"varint,2,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//类型编号,见参数表sys_dic_data,dicType=customer_type,dic_sort值
	TypeId int32 `protobuf:"varint,3,opt,name=typeId,proto3" json:"typeId,omitempty"`
	//类型编码,见参数表sys_dic_data,dicType=customer_type,dic_type值
	TypeCode string `protobuf:"bytes,4,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//分组编码
	GroupCode string `protobuf:"bytes,5,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	//字段
	FieldName string `protobuf:"bytes,6,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	//封面,无值使用小说封面
	Cover string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	//排序字段,值越大,越靠前
	OrderNum int32 `protobuf:"varint,8,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	//备注
	Remark string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,14,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,15,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,16,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *CustomerNovelsReq) Reset() {
	*x = CustomerNovelsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsReq) ProtoMessage() {}

func (x *CustomerNovelsReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsReq.ProtoReflect.Descriptor instead.
func (*CustomerNovelsReq) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{3}
}

func (x *CustomerNovelsReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomerNovelsReq) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *CustomerNovelsReq) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *CustomerNovelsReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *CustomerNovelsReq) GetGroupCode() string {
	if x != nil {
		return x.GroupCode
	}
	return ""
}

func (x *CustomerNovelsReq) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *CustomerNovelsReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CustomerNovelsReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *CustomerNovelsReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CustomerNovelsReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *CustomerNovelsReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

func (x *CustomerNovelsReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CustomerNovelsReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CustomerNovelsReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *CustomerNovelsReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *CustomerNovelsReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type CustomerNovelsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *CustomerNovelsData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CustomerNovelsReply) Reset() {
	*x = CustomerNovelsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsReply) ProtoMessage() {}

func (x *CustomerNovelsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsReply.ProtoReflect.Descriptor instead.
func (*CustomerNovelsReply) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{4}
}

func (x *CustomerNovelsReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CustomerNovelsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CustomerNovelsReply) GetResult() *CustomerNovelsData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建CustomerNovels请求
type CustomerNovelsCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//小说编码
	NovelId int64 `protobuf:"varint,1,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//类型编号,见参数表sys_dic_data,dicType=customer_type,dic_sort值
	TypeId int32 `protobuf:"varint,2,opt,name=typeId,proto3" json:"typeId,omitempty"`
	//类型编码,见参数表sys_dic_data,dicType=customer_type,dic_type值
	TypeCode string `protobuf:"bytes,3,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//分组编码
	GroupCode string `protobuf:"bytes,4,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	//字段
	FieldName string `protobuf:"bytes,5,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	//封面,无值使用小说封面
	Cover string `protobuf:"bytes,6,opt,name=cover,proto3" json:"cover,omitempty"`
	//排序字段,值越大,越靠前
	OrderNum int32 `protobuf:"varint,7,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	//备注
	Remark string `protobuf:"bytes,8,opt,name=remark,proto3" json:"remark,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
}

func (x *CustomerNovelsCreateReq) Reset() {
	*x = CustomerNovelsCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsCreateReq) ProtoMessage() {}

func (x *CustomerNovelsCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsCreateReq.ProtoReflect.Descriptor instead.
func (*CustomerNovelsCreateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{5}
}

func (x *CustomerNovelsCreateReq) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *CustomerNovelsCreateReq) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *CustomerNovelsCreateReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *CustomerNovelsCreateReq) GetGroupCode() string {
	if x != nil {
		return x.GroupCode
	}
	return ""
}

func (x *CustomerNovelsCreateReq) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *CustomerNovelsCreateReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CustomerNovelsCreateReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *CustomerNovelsCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CustomerNovelsCreateReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *CustomerNovelsCreateReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

// 创建CustomerNovels返回
type CustomerNovelsCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *CustomerNovelsData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CustomerNovelsCreateReply) Reset() {
	*x = CustomerNovelsCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsCreateReply) ProtoMessage() {}

func (x *CustomerNovelsCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsCreateReply.ProtoReflect.Descriptor instead.
func (*CustomerNovelsCreateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{6}
}

func (x *CustomerNovelsCreateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CustomerNovelsCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CustomerNovelsCreateReply) GetResult() *CustomerNovelsData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新CustomerNovels请求
type CustomerNovelsUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//小说编码
	NovelId int64 `protobuf:"varint,2,opt,name=novelId,proto3" json:"novelId,omitempty"`
	//类型编号,见参数表sys_dic_data,dicType=customer_type,dic_sort值
	TypeId int32 `protobuf:"varint,3,opt,name=typeId,proto3" json:"typeId,omitempty"`
	//类型编码,见参数表sys_dic_data,dicType=customer_type,dic_type值
	TypeCode string `protobuf:"bytes,4,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//分组编码
	GroupCode string `protobuf:"bytes,5,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	//字段
	FieldName string `protobuf:"bytes,6,opt,name=fieldName,proto3" json:"fieldName,omitempty"`
	//封面,无值使用小说封面
	Cover string `protobuf:"bytes,7,opt,name=cover,proto3" json:"cover,omitempty"`
	//排序字段,值越大,越靠前
	OrderNum int32 `protobuf:"varint,8,opt,name=orderNum,proto3" json:"orderNum,omitempty"`
	//备注
	Remark string `protobuf:"bytes,9,opt,name=remark,proto3" json:"remark,omitempty"`
	//生效时间
	EffectTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=effectTime,proto3" json:"effectTime,omitempty"`
	//失效时间
	ExpiredTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
}

func (x *CustomerNovelsUpdateReq) Reset() {
	*x = CustomerNovelsUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsUpdateReq) ProtoMessage() {}

func (x *CustomerNovelsUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsUpdateReq.ProtoReflect.Descriptor instead.
func (*CustomerNovelsUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{7}
}

func (x *CustomerNovelsUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CustomerNovelsUpdateReq) GetNovelId() int64 {
	if x != nil {
		return x.NovelId
	}
	return 0
}

func (x *CustomerNovelsUpdateReq) GetTypeId() int32 {
	if x != nil {
		return x.TypeId
	}
	return 0
}

func (x *CustomerNovelsUpdateReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *CustomerNovelsUpdateReq) GetGroupCode() string {
	if x != nil {
		return x.GroupCode
	}
	return ""
}

func (x *CustomerNovelsUpdateReq) GetFieldName() string {
	if x != nil {
		return x.FieldName
	}
	return ""
}

func (x *CustomerNovelsUpdateReq) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CustomerNovelsUpdateReq) GetOrderNum() int32 {
	if x != nil {
		return x.OrderNum
	}
	return 0
}

func (x *CustomerNovelsUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *CustomerNovelsUpdateReq) GetEffectTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EffectTime
	}
	return nil
}

func (x *CustomerNovelsUpdateReq) GetExpiredTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiredTime
	}
	return nil
}

// 更新CustomerNovels返回
type CustomerNovelsUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *CustomerNovelsData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CustomerNovelsUpdateReply) Reset() {
	*x = CustomerNovelsUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsUpdateReply) ProtoMessage() {}

func (x *CustomerNovelsUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsUpdateReply.ProtoReflect.Descriptor instead.
func (*CustomerNovelsUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{8}
}

func (x *CustomerNovelsUpdateReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CustomerNovelsUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CustomerNovelsUpdateReply) GetResult() *CustomerNovelsData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除CustomerNovels请求
type CustomerNovelsDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CustomerNovelsDeleteReq) Reset() {
	*x = CustomerNovelsDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsDeleteReq) ProtoMessage() {}

func (x *CustomerNovelsDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsDeleteReq.ProtoReflect.Descriptor instead.
func (*CustomerNovelsDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{9}
}

func (x *CustomerNovelsDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除CustomerNovels请求
type CustomerNovelsBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CustomerNovelsBatchDeleteReq) Reset() {
	*x = CustomerNovelsBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsBatchDeleteReq) ProtoMessage() {}

func (x *CustomerNovelsBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*CustomerNovelsBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{10}
}

func (x *CustomerNovelsBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除CustomerNovels返回
type CustomerNovelsDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CustomerNovelsDeleteReply) Reset() {
	*x = CustomerNovelsDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomerNovelsDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomerNovelsDeleteReply) ProtoMessage() {}

func (x *CustomerNovelsDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomerNovelsDeleteReply.ProtoReflect.Descriptor instead.
func (*CustomerNovelsDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP(), []int{11}
}

func (x *CustomerNovelsDeleteReply) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CustomerNovelsDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CustomerNovelsDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_novel_customernovels_v1_customer_novels_proto protoreflect.FileDescriptor

var file_api_novel_customernovels_v1_customer_novels_proto_rawDesc = []byte{
	0x0a, 0x31, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x04, 0x0a, 0x12, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x7c, 0x0a, 0x15, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x12, 0x3a, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22,
	0x9a, 0x01, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x3b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xb9, 0x04, 0x0a,
	0x11, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x82, 0x01, 0x0a, 0x13, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c,
	0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe7, 0x02,
	0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x3a, 0x0a,
	0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65,
	0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x88, 0x01, 0x0a, 0x19, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0xf7, 0x02, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x79, 0x70, 0x65,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x65, 0x66, 0x66, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c,
	0x0a, 0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x88, 0x01, 0x0a,
	0x19, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x29, 0x0a, 0x17, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x30, 0x0a, 0x1c, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0x61, 0x0a, 0x19, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x82, 0x07, 0x0a, 0x0e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x8f, 0x01, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73,
	0x50, 0x61, 0x67, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e,
	0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2a,
	0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c,
	0x73, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x83, 0x01, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x73, 0x12, 0x24, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x95, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x1a, 0x18, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x90, 0x01, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f,
	0x76, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x2c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65,
	0x6c, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x18, 0x22, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x92, 0x01,
	0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x2a, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65,
	0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x2c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76,
	0x65, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e,
	0x6f, 0x76, 0x65, 0x6c, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x2a, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x97, 0x01, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76, 0x65, 0x6c, 0x73,
	0x12, 0x2f, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f, 0x76,
	0x65, 0x6c, 0x73, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x1a, 0x2c, 0x2e, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65,
	0x6c, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x6f,
	0x76, 0x65, 0x6c, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x2a, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x65, 0x72, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x42, 0x25, 0x5a, 0x23,
	0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_novel_customernovels_v1_customer_novels_proto_rawDescOnce sync.Once
	file_api_novel_customernovels_v1_customer_novels_proto_rawDescData = file_api_novel_customernovels_v1_customer_novels_proto_rawDesc
)

func file_api_novel_customernovels_v1_customer_novels_proto_rawDescGZIP() []byte {
	file_api_novel_customernovels_v1_customer_novels_proto_rawDescOnce.Do(func() {
		file_api_novel_customernovels_v1_customer_novels_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_novel_customernovels_v1_customer_novels_proto_rawDescData)
	})
	return file_api_novel_customernovels_v1_customer_novels_proto_rawDescData
}

var file_api_novel_customernovels_v1_customer_novels_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_novel_customernovels_v1_customer_novels_proto_goTypes = []interface{}{
	(*CustomerNovelsData)(nil),           // 0: customernovels.v1.CustomerNovelsData
	(*CustomerNovelsPageReq)(nil),        // 1: customernovels.v1.CustomerNovelsPageReq
	(*CustomerNovelsPageReply)(nil),      // 2: customernovels.v1.CustomerNovelsPageReply
	(*CustomerNovelsReq)(nil),            // 3: customernovels.v1.CustomerNovelsReq
	(*CustomerNovelsReply)(nil),          // 4: customernovels.v1.CustomerNovelsReply
	(*CustomerNovelsCreateReq)(nil),      // 5: customernovels.v1.CustomerNovelsCreateReq
	(*CustomerNovelsCreateReply)(nil),    // 6: customernovels.v1.CustomerNovelsCreateReply
	(*CustomerNovelsUpdateReq)(nil),      // 7: customernovels.v1.CustomerNovelsUpdateReq
	(*CustomerNovelsUpdateReply)(nil),    // 8: customernovels.v1.CustomerNovelsUpdateReply
	(*CustomerNovelsDeleteReq)(nil),      // 9: customernovels.v1.CustomerNovelsDeleteReq
	(*CustomerNovelsBatchDeleteReq)(nil), // 10: customernovels.v1.CustomerNovelsBatchDeleteReq
	(*CustomerNovelsDeleteReply)(nil),    // 11: customernovels.v1.CustomerNovelsDeleteReply
	(*timestamppb.Timestamp)(nil),        // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),             // 13: pagin.Pagination
}
var file_api_novel_customernovels_v1_customer_novels_proto_depIdxs = []int32{
	12, // 0: customernovels.v1.CustomerNovelsData.effectTime:type_name -> google.protobuf.Timestamp
	12, // 1: customernovels.v1.CustomerNovelsData.expiredTime:type_name -> google.protobuf.Timestamp
	12, // 2: customernovels.v1.CustomerNovelsData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 3: customernovels.v1.CustomerNovelsData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 4: customernovels.v1.CustomerNovelsPageReq.pagin:type_name -> pagin.Pagination
	3,  // 5: customernovels.v1.CustomerNovelsPageReq.param:type_name -> customernovels.v1.CustomerNovelsReq
	0,  // 6: customernovels.v1.CustomerNovelsPageReply.items:type_name -> customernovels.v1.CustomerNovelsData
	12, // 7: customernovels.v1.CustomerNovelsReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 8: customernovels.v1.CustomerNovelsReq.expiredTime:type_name -> google.protobuf.Timestamp
	12, // 9: customernovels.v1.CustomerNovelsReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 10: customernovels.v1.CustomerNovelsReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 11: customernovels.v1.CustomerNovelsReply.result:type_name -> customernovels.v1.CustomerNovelsData
	12, // 12: customernovels.v1.CustomerNovelsCreateReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 13: customernovels.v1.CustomerNovelsCreateReq.expiredTime:type_name -> google.protobuf.Timestamp
	0,  // 14: customernovels.v1.CustomerNovelsCreateReply.result:type_name -> customernovels.v1.CustomerNovelsData
	12, // 15: customernovels.v1.CustomerNovelsUpdateReq.effectTime:type_name -> google.protobuf.Timestamp
	12, // 16: customernovels.v1.CustomerNovelsUpdateReq.expiredTime:type_name -> google.protobuf.Timestamp
	0,  // 17: customernovels.v1.CustomerNovelsUpdateReply.result:type_name -> customernovels.v1.CustomerNovelsData
	1,  // 18: customernovels.v1.CustomerNovels.GetCustomerNovelsPage:input_type -> customernovels.v1.CustomerNovelsPageReq
	3,  // 19: customernovels.v1.CustomerNovels.GetCustomerNovels:input_type -> customernovels.v1.CustomerNovelsReq
	7,  // 20: customernovels.v1.CustomerNovels.UpdateCustomerNovels:input_type -> customernovels.v1.CustomerNovelsUpdateReq
	5,  // 21: customernovels.v1.CustomerNovels.CreateCustomerNovels:input_type -> customernovels.v1.CustomerNovelsCreateReq
	9,  // 22: customernovels.v1.CustomerNovels.DeleteCustomerNovels:input_type -> customernovels.v1.CustomerNovelsDeleteReq
	10, // 23: customernovels.v1.CustomerNovels.BatchDeleteCustomerNovels:input_type -> customernovels.v1.CustomerNovelsBatchDeleteReq
	2,  // 24: customernovels.v1.CustomerNovels.GetCustomerNovelsPage:output_type -> customernovels.v1.CustomerNovelsPageReply
	4,  // 25: customernovels.v1.CustomerNovels.GetCustomerNovels:output_type -> customernovels.v1.CustomerNovelsReply
	8,  // 26: customernovels.v1.CustomerNovels.UpdateCustomerNovels:output_type -> customernovels.v1.CustomerNovelsUpdateReply
	6,  // 27: customernovels.v1.CustomerNovels.CreateCustomerNovels:output_type -> customernovels.v1.CustomerNovelsCreateReply
	11, // 28: customernovels.v1.CustomerNovels.DeleteCustomerNovels:output_type -> customernovels.v1.CustomerNovelsDeleteReply
	11, // 29: customernovels.v1.CustomerNovels.BatchDeleteCustomerNovels:output_type -> customernovels.v1.CustomerNovelsDeleteReply
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_novel_customernovels_v1_customer_novels_proto_init() }
func file_api_novel_customernovels_v1_customer_novels_proto_init() {
	if File_api_novel_customernovels_v1_customer_novels_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_customernovels_v1_customer_novels_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomerNovelsDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_novel_customernovels_v1_customer_novels_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_novel_customernovels_v1_customer_novels_proto_goTypes,
		DependencyIndexes: file_api_novel_customernovels_v1_customer_novels_proto_depIdxs,
		MessageInfos:      file_api_novel_customernovels_v1_customer_novels_proto_msgTypes,
	}.Build()
	File_api_novel_customernovels_v1_customer_novels_proto = out.File
	file_api_novel_customernovels_v1_customer_novels_proto_rawDesc = nil
	file_api_novel_customernovels_v1_customer_novels_proto_goTypes = nil
	file_api_novel_customernovels_v1_customer_novels_proto_depIdxs = nil
}
