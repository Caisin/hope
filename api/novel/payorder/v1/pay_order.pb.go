// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/novel/payorder/v1/pay_order.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 实体数据
type PayOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	//渠道ID
	ChId int64 `protobuf:"varint,4,opt,name=chId,proto3" json:"chId,omitempty"`
	//签约协议号
	AgreementId int64 `protobuf:"varint,5,opt,name=agreementId,proto3" json:"agreementId,omitempty"`
	//最后阅读书籍
	LastRead string `protobuf:"bytes,6,opt,name=lastRead,proto3" json:"lastRead,omitempty"`
	//最后阅读章节
	LastChapter string `protobuf:"bytes,7,opt,name=lastChapter,proto3" json:"lastChapter,omitempty"`
	//充值配置名称
	PaymentName string `protobuf:"bytes,8,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//充值配置ID
	PaymentId string `protobuf:"bytes,9,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	//订单状态:1、待付款，2、已付款，3、取消，4、退款
	State int32 `protobuf:"varint,10,opt,name=state,proto3" json:"state,omitempty"`
	//充值金额
	Payment int64 `protobuf:"varint,11,opt,name=payment,proto3" json:"payment,omitempty"`
	//支付时间
	PaymentTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=paymentTime,proto3" json:"paymentTime,omitempty"`
	//订单关闭时间
	CloseTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=closeTime,proto3" json:"closeTime,omitempty"`
	//支付类型
	PayType string `protobuf:"bytes,14,opt,name=payType,proto3" json:"payType,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,15,opt,name=coin,proto3" json:"coin,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,16,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//vip天数
	VipDays string `protobuf:"bytes,17,opt,name=vipDays,proto3" json:"vipDays,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,18,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//vip名称
	VipName string `protobuf:"bytes,19,opt,name=vipName,proto3" json:"vipName,omitempty"`
	//充值次数
	Times int32 `protobuf:"varint,20,opt,name=times,proto3" json:"times,omitempty"`
	//第三方订单
	OtherOrderId string `protobuf:"bytes,21,opt,name=otherOrderId,proto3" json:"otherOrderId,omitempty"`
	//备注
	Remark string `protobuf:"bytes,22,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,24,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,25,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,26,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,27,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *PayOrderData) Reset() {
	*x = PayOrderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderData) ProtoMessage() {}

func (x *PayOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderData.ProtoReflect.Descriptor instead.
func (*PayOrderData) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{0}
}

func (x *PayOrderData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayOrderData) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PayOrderData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PayOrderData) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *PayOrderData) GetAgreementId() int64 {
	if x != nil {
		return x.AgreementId
	}
	return 0
}

func (x *PayOrderData) GetLastRead() string {
	if x != nil {
		return x.LastRead
	}
	return ""
}

func (x *PayOrderData) GetLastChapter() string {
	if x != nil {
		return x.LastChapter
	}
	return ""
}

func (x *PayOrderData) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *PayOrderData) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *PayOrderData) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PayOrderData) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *PayOrderData) GetPaymentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentTime
	}
	return nil
}

func (x *PayOrderData) GetCloseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *PayOrderData) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *PayOrderData) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *PayOrderData) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *PayOrderData) GetVipDays() string {
	if x != nil {
		return x.VipDays
	}
	return ""
}

func (x *PayOrderData) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *PayOrderData) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *PayOrderData) GetTimes() int32 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *PayOrderData) GetOtherOrderId() string {
	if x != nil {
		return x.OtherOrderId
	}
	return ""
}

func (x *PayOrderData) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PayOrderData) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PayOrderData) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PayOrderData) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *PayOrderData) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *PayOrderData) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索请求
type PayOrderPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *PayOrderReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *PayOrderPageReq) Reset() {
	*x = PayOrderPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderPageReq) ProtoMessage() {}

func (x *PayOrderPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderPageReq.ProtoReflect.Descriptor instead.
func (*PayOrderPageReq) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{1}
}

func (x *PayOrderPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *PayOrderPageReq) GetParam() *PayOrderReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type PayOrderPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 总条数
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	// 查询数据
	Items []*PayOrderData `protobuf:"bytes,4,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *PayOrderPageReply) Reset() {
	*x = PayOrderPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderPageReply) ProtoMessage() {}

func (x *PayOrderPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderPageReply.ProtoReflect.Descriptor instead.
func (*PayOrderPageReply) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{2}
}

func (x *PayOrderPageReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayOrderPageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PayOrderPageReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PayOrderPageReply) GetItems() []*PayOrderData {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type PayOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	//渠道ID
	ChId int64 `protobuf:"varint,4,opt,name=chId,proto3" json:"chId,omitempty"`
	//签约协议号
	AgreementId int64 `protobuf:"varint,5,opt,name=agreementId,proto3" json:"agreementId,omitempty"`
	//最后阅读书籍
	LastRead string `protobuf:"bytes,6,opt,name=lastRead,proto3" json:"lastRead,omitempty"`
	//最后阅读章节
	LastChapter string `protobuf:"bytes,7,opt,name=lastChapter,proto3" json:"lastChapter,omitempty"`
	//充值配置名称
	PaymentName string `protobuf:"bytes,8,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//充值配置ID
	PaymentId string `protobuf:"bytes,9,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	//订单状态:1、待付款，2、已付款，3、取消，4、退款
	State int32 `protobuf:"varint,10,opt,name=state,proto3" json:"state,omitempty"`
	//充值金额
	Payment int64 `protobuf:"varint,11,opt,name=payment,proto3" json:"payment,omitempty"`
	//支付时间
	PaymentTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=paymentTime,proto3" json:"paymentTime,omitempty"`
	//订单关闭时间
	CloseTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=closeTime,proto3" json:"closeTime,omitempty"`
	//支付类型
	PayType string `protobuf:"bytes,14,opt,name=payType,proto3" json:"payType,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,15,opt,name=coin,proto3" json:"coin,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,16,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//vip天数
	VipDays string `protobuf:"bytes,17,opt,name=vipDays,proto3" json:"vipDays,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,18,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//vip名称
	VipName string `protobuf:"bytes,19,opt,name=vipName,proto3" json:"vipName,omitempty"`
	//充值次数
	Times int32 `protobuf:"varint,20,opt,name=times,proto3" json:"times,omitempty"`
	//第三方订单
	OtherOrderId string `protobuf:"bytes,21,opt,name=otherOrderId,proto3" json:"otherOrderId,omitempty"`
	//备注
	Remark string `protobuf:"bytes,22,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,23,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,24,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,25,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,26,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,27,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *PayOrderReq) Reset() {
	*x = PayOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderReq) ProtoMessage() {}

func (x *PayOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderReq.ProtoReflect.Descriptor instead.
func (*PayOrderReq) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{3}
}

func (x *PayOrderReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayOrderReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PayOrderReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PayOrderReq) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *PayOrderReq) GetAgreementId() int64 {
	if x != nil {
		return x.AgreementId
	}
	return 0
}

func (x *PayOrderReq) GetLastRead() string {
	if x != nil {
		return x.LastRead
	}
	return ""
}

func (x *PayOrderReq) GetLastChapter() string {
	if x != nil {
		return x.LastChapter
	}
	return ""
}

func (x *PayOrderReq) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *PayOrderReq) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *PayOrderReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PayOrderReq) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *PayOrderReq) GetPaymentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentTime
	}
	return nil
}

func (x *PayOrderReq) GetCloseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *PayOrderReq) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *PayOrderReq) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *PayOrderReq) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *PayOrderReq) GetVipDays() string {
	if x != nil {
		return x.VipDays
	}
	return ""
}

func (x *PayOrderReq) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *PayOrderReq) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *PayOrderReq) GetTimes() int32 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *PayOrderReq) GetOtherOrderId() string {
	if x != nil {
		return x.OtherOrderId
	}
	return ""
}

func (x *PayOrderReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *PayOrderReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PayOrderReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *PayOrderReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *PayOrderReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *PayOrderReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询返回
type PayOrderReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *PayOrderData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PayOrderReply) Reset() {
	*x = PayOrderReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderReply) ProtoMessage() {}

func (x *PayOrderReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderReply.ProtoReflect.Descriptor instead.
func (*PayOrderReply) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{4}
}

func (x *PayOrderReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayOrderReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PayOrderReply) GetResult() *PayOrderData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 创建PayOrder请求
type PayOrderCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//订单号
	OrderId string `protobuf:"bytes,1,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
	//渠道ID
	ChId int64 `protobuf:"varint,3,opt,name=chId,proto3" json:"chId,omitempty"`
	//签约协议号
	AgreementId int64 `protobuf:"varint,4,opt,name=agreementId,proto3" json:"agreementId,omitempty"`
	//最后阅读书籍
	LastRead string `protobuf:"bytes,5,opt,name=lastRead,proto3" json:"lastRead,omitempty"`
	//最后阅读章节
	LastChapter string `protobuf:"bytes,6,opt,name=lastChapter,proto3" json:"lastChapter,omitempty"`
	//充值配置名称
	PaymentName string `protobuf:"bytes,7,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//充值配置ID
	PaymentId string `protobuf:"bytes,8,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	//订单状态:1、待付款，2、已付款，3、取消，4、退款
	State int32 `protobuf:"varint,9,opt,name=state,proto3" json:"state,omitempty"`
	//充值金额
	Payment int64 `protobuf:"varint,10,opt,name=payment,proto3" json:"payment,omitempty"`
	//支付时间
	PaymentTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=paymentTime,proto3" json:"paymentTime,omitempty"`
	//订单关闭时间
	CloseTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=closeTime,proto3" json:"closeTime,omitempty"`
	//支付类型
	PayType string `protobuf:"bytes,13,opt,name=payType,proto3" json:"payType,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,14,opt,name=coin,proto3" json:"coin,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,15,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//vip天数
	VipDays string `protobuf:"bytes,16,opt,name=vipDays,proto3" json:"vipDays,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,17,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//vip名称
	VipName string `protobuf:"bytes,18,opt,name=vipName,proto3" json:"vipName,omitempty"`
	//充值次数
	Times int32 `protobuf:"varint,19,opt,name=times,proto3" json:"times,omitempty"`
	//第三方订单
	OtherOrderId string `protobuf:"bytes,20,opt,name=otherOrderId,proto3" json:"otherOrderId,omitempty"`
	//备注
	Remark string `protobuf:"bytes,21,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *PayOrderCreateReq) Reset() {
	*x = PayOrderCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderCreateReq) ProtoMessage() {}

func (x *PayOrderCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderCreateReq.ProtoReflect.Descriptor instead.
func (*PayOrderCreateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{5}
}

func (x *PayOrderCreateReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PayOrderCreateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PayOrderCreateReq) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *PayOrderCreateReq) GetAgreementId() int64 {
	if x != nil {
		return x.AgreementId
	}
	return 0
}

func (x *PayOrderCreateReq) GetLastRead() string {
	if x != nil {
		return x.LastRead
	}
	return ""
}

func (x *PayOrderCreateReq) GetLastChapter() string {
	if x != nil {
		return x.LastChapter
	}
	return ""
}

func (x *PayOrderCreateReq) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *PayOrderCreateReq) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *PayOrderCreateReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PayOrderCreateReq) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *PayOrderCreateReq) GetPaymentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentTime
	}
	return nil
}

func (x *PayOrderCreateReq) GetCloseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *PayOrderCreateReq) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *PayOrderCreateReq) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *PayOrderCreateReq) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *PayOrderCreateReq) GetVipDays() string {
	if x != nil {
		return x.VipDays
	}
	return ""
}

func (x *PayOrderCreateReq) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *PayOrderCreateReq) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *PayOrderCreateReq) GetTimes() int32 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *PayOrderCreateReq) GetOtherOrderId() string {
	if x != nil {
		return x.OtherOrderId
	}
	return ""
}

func (x *PayOrderCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建PayOrder返回
type PayOrderCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *PayOrderData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PayOrderCreateReply) Reset() {
	*x = PayOrderCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderCreateReply) ProtoMessage() {}

func (x *PayOrderCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderCreateReply.ProtoReflect.Descriptor instead.
func (*PayOrderCreateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{6}
}

func (x *PayOrderCreateReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayOrderCreateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PayOrderCreateReply) GetResult() *PayOrderData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 更新PayOrder请求
type PayOrderUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//订单号
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId,omitempty"`
	//用户ID
	UserId int64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	//渠道ID
	ChId int64 `protobuf:"varint,4,opt,name=chId,proto3" json:"chId,omitempty"`
	//签约协议号
	AgreementId int64 `protobuf:"varint,5,opt,name=agreementId,proto3" json:"agreementId,omitempty"`
	//最后阅读书籍
	LastRead string `protobuf:"bytes,6,opt,name=lastRead,proto3" json:"lastRead,omitempty"`
	//最后阅读章节
	LastChapter string `protobuf:"bytes,7,opt,name=lastChapter,proto3" json:"lastChapter,omitempty"`
	//充值配置名称
	PaymentName string `protobuf:"bytes,8,opt,name=paymentName,proto3" json:"paymentName,omitempty"`
	//充值配置ID
	PaymentId string `protobuf:"bytes,9,opt,name=paymentId,proto3" json:"paymentId,omitempty"`
	//订单状态:1、待付款，2、已付款，3、取消，4、退款
	State int32 `protobuf:"varint,10,opt,name=state,proto3" json:"state,omitempty"`
	//充值金额
	Payment int64 `protobuf:"varint,11,opt,name=payment,proto3" json:"payment,omitempty"`
	//支付时间
	PaymentTime *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=paymentTime,proto3" json:"paymentTime,omitempty"`
	//订单关闭时间
	CloseTime *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=closeTime,proto3" json:"closeTime,omitempty"`
	//支付类型
	PayType string `protobuf:"bytes,14,opt,name=payType,proto3" json:"payType,omitempty"`
	//书币
	Coin int64 `protobuf:"varint,15,opt,name=coin,proto3" json:"coin,omitempty"`
	//书券
	Coupon int64 `protobuf:"varint,16,opt,name=coupon,proto3" json:"coupon,omitempty"`
	//vip天数
	VipDays string `protobuf:"bytes,17,opt,name=vipDays,proto3" json:"vipDays,omitempty"`
	//vip类型
	VipType int64 `protobuf:"varint,18,opt,name=vipType,proto3" json:"vipType,omitempty"`
	//vip名称
	VipName string `protobuf:"bytes,19,opt,name=vipName,proto3" json:"vipName,omitempty"`
	//充值次数
	Times int32 `protobuf:"varint,20,opt,name=times,proto3" json:"times,omitempty"`
	//第三方订单
	OtherOrderId string `protobuf:"bytes,21,opt,name=otherOrderId,proto3" json:"otherOrderId,omitempty"`
	//备注
	Remark string `protobuf:"bytes,22,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *PayOrderUpdateReq) Reset() {
	*x = PayOrderUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderUpdateReq) ProtoMessage() {}

func (x *PayOrderUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderUpdateReq.ProtoReflect.Descriptor instead.
func (*PayOrderUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{7}
}

func (x *PayOrderUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayOrderUpdateReq) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

func (x *PayOrderUpdateReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *PayOrderUpdateReq) GetChId() int64 {
	if x != nil {
		return x.ChId
	}
	return 0
}

func (x *PayOrderUpdateReq) GetAgreementId() int64 {
	if x != nil {
		return x.AgreementId
	}
	return 0
}

func (x *PayOrderUpdateReq) GetLastRead() string {
	if x != nil {
		return x.LastRead
	}
	return ""
}

func (x *PayOrderUpdateReq) GetLastChapter() string {
	if x != nil {
		return x.LastChapter
	}
	return ""
}

func (x *PayOrderUpdateReq) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *PayOrderUpdateReq) GetPaymentId() string {
	if x != nil {
		return x.PaymentId
	}
	return ""
}

func (x *PayOrderUpdateReq) GetState() int32 {
	if x != nil {
		return x.State
	}
	return 0
}

func (x *PayOrderUpdateReq) GetPayment() int64 {
	if x != nil {
		return x.Payment
	}
	return 0
}

func (x *PayOrderUpdateReq) GetPaymentTime() *timestamppb.Timestamp {
	if x != nil {
		return x.PaymentTime
	}
	return nil
}

func (x *PayOrderUpdateReq) GetCloseTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CloseTime
	}
	return nil
}

func (x *PayOrderUpdateReq) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *PayOrderUpdateReq) GetCoin() int64 {
	if x != nil {
		return x.Coin
	}
	return 0
}

func (x *PayOrderUpdateReq) GetCoupon() int64 {
	if x != nil {
		return x.Coupon
	}
	return 0
}

func (x *PayOrderUpdateReq) GetVipDays() string {
	if x != nil {
		return x.VipDays
	}
	return ""
}

func (x *PayOrderUpdateReq) GetVipType() int64 {
	if x != nil {
		return x.VipType
	}
	return 0
}

func (x *PayOrderUpdateReq) GetVipName() string {
	if x != nil {
		return x.VipName
	}
	return ""
}

func (x *PayOrderUpdateReq) GetTimes() int32 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *PayOrderUpdateReq) GetOtherOrderId() string {
	if x != nil {
		return x.OtherOrderId
	}
	return ""
}

func (x *PayOrderUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新PayOrder返回
type PayOrderUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果数据
	Result *PayOrderData `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PayOrderUpdateReply) Reset() {
	*x = PayOrderUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderUpdateReply) ProtoMessage() {}

func (x *PayOrderUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderUpdateReply.ProtoReflect.Descriptor instead.
func (*PayOrderUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{8}
}

func (x *PayOrderUpdateReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayOrderUpdateReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PayOrderUpdateReply) GetResult() *PayOrderData {
	if x != nil {
		return x.Result
	}
	return nil
}

// 删除PayOrder请求
type PayOrderDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PayOrderDeleteReq) Reset() {
	*x = PayOrderDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderDeleteReq) ProtoMessage() {}

func (x *PayOrderDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderDeleteReq.ProtoReflect.Descriptor instead.
func (*PayOrderDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{9}
}

func (x *PayOrderDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除PayOrder请求
type PayOrderBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *PayOrderBatchDeleteReq) Reset() {
	*x = PayOrderBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderBatchDeleteReq) ProtoMessage() {}

func (x *PayOrderBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*PayOrderBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{10}
}

func (x *PayOrderBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除PayOrder返回
type PayOrderDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 返回码
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// 结果
	Result bool `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *PayOrderDeleteReply) Reset() {
	*x = PayOrderDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayOrderDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayOrderDeleteReply) ProtoMessage() {}

func (x *PayOrderDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_novel_payorder_v1_pay_order_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayOrderDeleteReply.ProtoReflect.Descriptor instead.
func (*PayOrderDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP(), []int{11}
}

func (x *PayOrderDeleteReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PayOrderDeleteReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PayOrderDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_novel_payorder_v1_pay_order_proto protoreflect.FileDescriptor

var file_api_novel_payorder_v1_pay_order_proto_rawDesc = []byte{
	0x0a, 0x25, 0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x70, 0x61, 0x79, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xda, 0x06, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x67, 0x72,
	0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x43,
	0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x44, 0x61,
	0x79, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x70, 0x44, 0x61, 0x79,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6f,
	0x74, 0x68, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22,
	0x6a, 0x0a, 0x0f, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x61, 0x79,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x88, 0x01, 0x0a, 0x11,
	0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd9, 0x06, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x49, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f,
	0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69,
	0x70, 0x44, 0x61, 0x79, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x70,
	0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x70, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x87, 0x05, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x68, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x3c, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x69, 0x70, 0x44, 0x61, 0x79, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x69, 0x70, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x76,
	0x0a, 0x13, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x97, 0x05, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x68, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x68,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x61, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x70, 0x74,
	0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x44, 0x61, 0x79, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x76, 0x69, 0x70, 0x44, 0x61, 0x79, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69,
	0x70, 0x54, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x69, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x74, 0x68, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x22, 0x76, 0x0a, 0x13, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x23, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2a, 0x0a,
	0x16, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x5b, 0x0a, 0x13, 0x50, 0x61, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x9e, 0x05, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x6b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x50, 0x61,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x5f, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x18, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x70, 0x61, 0x79, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x12, 0x71, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x1a, 0x12, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x6c, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12,
	0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x3a,
	0x01, 0x2a, 0x12, 0x6e, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x79, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a, 0x12,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x73, 0x0a, 0x13, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x79, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x2a, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61,
	0x79, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x1f, 0x5a, 0x1d, 0x68, 0x6f, 0x70, 0x65, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x6e, 0x6f, 0x76, 0x65, 0x6c, 0x2f, 0x70, 0x61, 0x79, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_novel_payorder_v1_pay_order_proto_rawDescOnce sync.Once
	file_api_novel_payorder_v1_pay_order_proto_rawDescData = file_api_novel_payorder_v1_pay_order_proto_rawDesc
)

func file_api_novel_payorder_v1_pay_order_proto_rawDescGZIP() []byte {
	file_api_novel_payorder_v1_pay_order_proto_rawDescOnce.Do(func() {
		file_api_novel_payorder_v1_pay_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_novel_payorder_v1_pay_order_proto_rawDescData)
	})
	return file_api_novel_payorder_v1_pay_order_proto_rawDescData
}

var file_api_novel_payorder_v1_pay_order_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_novel_payorder_v1_pay_order_proto_goTypes = []interface{}{
	(*PayOrderData)(nil),           // 0: payorder.v1.PayOrderData
	(*PayOrderPageReq)(nil),        // 1: payorder.v1.PayOrderPageReq
	(*PayOrderPageReply)(nil),      // 2: payorder.v1.PayOrderPageReply
	(*PayOrderReq)(nil),            // 3: payorder.v1.PayOrderReq
	(*PayOrderReply)(nil),          // 4: payorder.v1.PayOrderReply
	(*PayOrderCreateReq)(nil),      // 5: payorder.v1.PayOrderCreateReq
	(*PayOrderCreateReply)(nil),    // 6: payorder.v1.PayOrderCreateReply
	(*PayOrderUpdateReq)(nil),      // 7: payorder.v1.PayOrderUpdateReq
	(*PayOrderUpdateReply)(nil),    // 8: payorder.v1.PayOrderUpdateReply
	(*PayOrderDeleteReq)(nil),      // 9: payorder.v1.PayOrderDeleteReq
	(*PayOrderBatchDeleteReq)(nil), // 10: payorder.v1.PayOrderBatchDeleteReq
	(*PayOrderDeleteReply)(nil),    // 11: payorder.v1.PayOrderDeleteReply
	(*timestamppb.Timestamp)(nil),  // 12: google.protobuf.Timestamp
	(*pagin.Pagination)(nil),       // 13: pagin.Pagination
}
var file_api_novel_payorder_v1_pay_order_proto_depIdxs = []int32{
	12, // 0: payorder.v1.PayOrderData.paymentTime:type_name -> google.protobuf.Timestamp
	12, // 1: payorder.v1.PayOrderData.closeTime:type_name -> google.protobuf.Timestamp
	12, // 2: payorder.v1.PayOrderData.createdAt:type_name -> google.protobuf.Timestamp
	12, // 3: payorder.v1.PayOrderData.updatedAt:type_name -> google.protobuf.Timestamp
	13, // 4: payorder.v1.PayOrderPageReq.pagin:type_name -> pagin.Pagination
	3,  // 5: payorder.v1.PayOrderPageReq.param:type_name -> payorder.v1.PayOrderReq
	0,  // 6: payorder.v1.PayOrderPageReply.items:type_name -> payorder.v1.PayOrderData
	12, // 7: payorder.v1.PayOrderReq.paymentTime:type_name -> google.protobuf.Timestamp
	12, // 8: payorder.v1.PayOrderReq.closeTime:type_name -> google.protobuf.Timestamp
	12, // 9: payorder.v1.PayOrderReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 10: payorder.v1.PayOrderReq.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 11: payorder.v1.PayOrderReply.result:type_name -> payorder.v1.PayOrderData
	12, // 12: payorder.v1.PayOrderCreateReq.paymentTime:type_name -> google.protobuf.Timestamp
	12, // 13: payorder.v1.PayOrderCreateReq.closeTime:type_name -> google.protobuf.Timestamp
	0,  // 14: payorder.v1.PayOrderCreateReply.result:type_name -> payorder.v1.PayOrderData
	12, // 15: payorder.v1.PayOrderUpdateReq.paymentTime:type_name -> google.protobuf.Timestamp
	12, // 16: payorder.v1.PayOrderUpdateReq.closeTime:type_name -> google.protobuf.Timestamp
	0,  // 17: payorder.v1.PayOrderUpdateReply.result:type_name -> payorder.v1.PayOrderData
	1,  // 18: payorder.v1.PayOrder.GetPagePayOrder:input_type -> payorder.v1.PayOrderPageReq
	3,  // 19: payorder.v1.PayOrder.GetPayOrder:input_type -> payorder.v1.PayOrderReq
	7,  // 20: payorder.v1.PayOrder.UpdatePayOrder:input_type -> payorder.v1.PayOrderUpdateReq
	5,  // 21: payorder.v1.PayOrder.CreatePayOrder:input_type -> payorder.v1.PayOrderCreateReq
	9,  // 22: payorder.v1.PayOrder.DeletePayOrder:input_type -> payorder.v1.PayOrderDeleteReq
	10, // 23: payorder.v1.PayOrder.BatchDeletePayOrder:input_type -> payorder.v1.PayOrderBatchDeleteReq
	2,  // 24: payorder.v1.PayOrder.GetPagePayOrder:output_type -> payorder.v1.PayOrderPageReply
	4,  // 25: payorder.v1.PayOrder.GetPayOrder:output_type -> payorder.v1.PayOrderReply
	8,  // 26: payorder.v1.PayOrder.UpdatePayOrder:output_type -> payorder.v1.PayOrderUpdateReply
	6,  // 27: payorder.v1.PayOrder.CreatePayOrder:output_type -> payorder.v1.PayOrderCreateReply
	11, // 28: payorder.v1.PayOrder.DeletePayOrder:output_type -> payorder.v1.PayOrderDeleteReply
	11, // 29: payorder.v1.PayOrder.BatchDeletePayOrder:output_type -> payorder.v1.PayOrderDeleteReply
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_novel_payorder_v1_pay_order_proto_init() }
func file_api_novel_payorder_v1_pay_order_proto_init() {
	if File_api_novel_payorder_v1_pay_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_novel_payorder_v1_pay_order_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayOrderDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_novel_payorder_v1_pay_order_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_novel_payorder_v1_pay_order_proto_goTypes,
		DependencyIndexes: file_api_novel_payorder_v1_pay_order_proto_depIdxs,
		MessageInfos:      file_api_novel_payorder_v1_pay_order_proto_msgTypes,
	}.Build()
	File_api_novel_payorder_v1_pay_order_proto = out.File
	file_api_novel_payorder_v1_pay_order_proto_rawDesc = nil
	file_api_novel_payorder_v1_pay_order_proto_goTypes = nil
	file_api_novel_payorder_v1_pay_order_proto_depIdxs = nil
}
