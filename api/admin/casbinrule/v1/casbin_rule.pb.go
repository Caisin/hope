// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/admin/casbinrule/v1/casbin_rule.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type CasbinRulePageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *CasbinRuleReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *CasbinRulePageReq) Reset() {
	*x = CasbinRulePageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasbinRulePageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinRulePageReq) ProtoMessage() {}

func (x *CasbinRulePageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinRulePageReq.ProtoReflect.Descriptor instead.
func (*CasbinRulePageReq) Descriptor() ([]byte, []int) {
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP(), []int{0}
}

func (x *CasbinRulePageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *CasbinRulePageReq) GetParam() *CasbinRuleReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type CasbinRulePageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*CasbinRuleReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *CasbinRulePageReply) Reset() {
	*x = CasbinRulePageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasbinRulePageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinRulePageReply) ProtoMessage() {}

func (x *CasbinRulePageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinRulePageReply.ProtoReflect.Descriptor instead.
func (*CasbinRulePageReply) Descriptor() ([]byte, []int) {
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP(), []int{1}
}

func (x *CasbinRulePageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *CasbinRulePageReply) GetItems() []*CasbinRuleReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type CasbinRuleReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//
	PType string `protobuf:"bytes,2,opt,name=p_type,json=pType,proto3" json:"p_type,omitempty"`
	//
	V0 string `protobuf:"bytes,3,opt,name=v0,proto3" json:"v0,omitempty"`
	//
	V1 string `protobuf:"bytes,4,opt,name=v1,proto3" json:"v1,omitempty"`
	//
	V2 string `protobuf:"bytes,5,opt,name=v2,proto3" json:"v2,omitempty"`
	//
	V3 string `protobuf:"bytes,6,opt,name=v3,proto3" json:"v3,omitempty"`
	//
	V4 string `protobuf:"bytes,7,opt,name=v4,proto3" json:"v4,omitempty"`
	//
	V5 string `protobuf:"bytes,8,opt,name=v5,proto3" json:"v5,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,11,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,12,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,13,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *CasbinRuleReq) Reset() {
	*x = CasbinRuleReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasbinRuleReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinRuleReq) ProtoMessage() {}

func (x *CasbinRuleReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinRuleReq.ProtoReflect.Descriptor instead.
func (*CasbinRuleReq) Descriptor() ([]byte, []int) {
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP(), []int{2}
}

func (x *CasbinRuleReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CasbinRuleReq) GetPType() string {
	if x != nil {
		return x.PType
	}
	return ""
}

func (x *CasbinRuleReq) GetV0() string {
	if x != nil {
		return x.V0
	}
	return ""
}

func (x *CasbinRuleReq) GetV1() string {
	if x != nil {
		return x.V1
	}
	return ""
}

func (x *CasbinRuleReq) GetV2() string {
	if x != nil {
		return x.V2
	}
	return ""
}

func (x *CasbinRuleReq) GetV3() string {
	if x != nil {
		return x.V3
	}
	return ""
}

func (x *CasbinRuleReq) GetV4() string {
	if x != nil {
		return x.V4
	}
	return ""
}

func (x *CasbinRuleReq) GetV5() string {
	if x != nil {
		return x.V5
	}
	return ""
}

func (x *CasbinRuleReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CasbinRuleReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CasbinRuleReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *CasbinRuleReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *CasbinRuleReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type CasbinRuleReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//
	PType string `protobuf:"bytes,2,opt,name=p_type,json=pType,proto3" json:"p_type,omitempty"`
	//
	V0 string `protobuf:"bytes,3,opt,name=v0,proto3" json:"v0,omitempty"`
	//
	V1 string `protobuf:"bytes,4,opt,name=v1,proto3" json:"v1,omitempty"`
	//
	V2 string `protobuf:"bytes,5,opt,name=v2,proto3" json:"v2,omitempty"`
	//
	V3 string `protobuf:"bytes,6,opt,name=v3,proto3" json:"v3,omitempty"`
	//
	V4 string `protobuf:"bytes,7,opt,name=v4,proto3" json:"v4,omitempty"`
	//
	V5 string `protobuf:"bytes,8,opt,name=v5,proto3" json:"v5,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,11,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,12,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,13,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *CasbinRuleReply) Reset() {
	*x = CasbinRuleReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasbinRuleReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinRuleReply) ProtoMessage() {}

func (x *CasbinRuleReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinRuleReply.ProtoReflect.Descriptor instead.
func (*CasbinRuleReply) Descriptor() ([]byte, []int) {
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP(), []int{3}
}

func (x *CasbinRuleReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CasbinRuleReply) GetPType() string {
	if x != nil {
		return x.PType
	}
	return ""
}

func (x *CasbinRuleReply) GetV0() string {
	if x != nil {
		return x.V0
	}
	return ""
}

func (x *CasbinRuleReply) GetV1() string {
	if x != nil {
		return x.V1
	}
	return ""
}

func (x *CasbinRuleReply) GetV2() string {
	if x != nil {
		return x.V2
	}
	return ""
}

func (x *CasbinRuleReply) GetV3() string {
	if x != nil {
		return x.V3
	}
	return ""
}

func (x *CasbinRuleReply) GetV4() string {
	if x != nil {
		return x.V4
	}
	return ""
}

func (x *CasbinRuleReply) GetV5() string {
	if x != nil {
		return x.V5
	}
	return ""
}

func (x *CasbinRuleReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CasbinRuleReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CasbinRuleReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *CasbinRuleReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *CasbinRuleReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建CasbinRule请求
type CasbinRuleCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//
	PType string `protobuf:"bytes,1,opt,name=p_type,json=pType,proto3" json:"p_type,omitempty"`
	//
	V0 string `protobuf:"bytes,2,opt,name=v0,proto3" json:"v0,omitempty"`
	//
	V1 string `protobuf:"bytes,3,opt,name=v1,proto3" json:"v1,omitempty"`
	//
	V2 string `protobuf:"bytes,4,opt,name=v2,proto3" json:"v2,omitempty"`
	//
	V3 string `protobuf:"bytes,5,opt,name=v3,proto3" json:"v3,omitempty"`
	//
	V4 string `protobuf:"bytes,6,opt,name=v4,proto3" json:"v4,omitempty"`
	//
	V5 string `protobuf:"bytes,7,opt,name=v5,proto3" json:"v5,omitempty"`
}

func (x *CasbinRuleCreateReq) Reset() {
	*x = CasbinRuleCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasbinRuleCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinRuleCreateReq) ProtoMessage() {}

func (x *CasbinRuleCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinRuleCreateReq.ProtoReflect.Descriptor instead.
func (*CasbinRuleCreateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP(), []int{4}
}

func (x *CasbinRuleCreateReq) GetPType() string {
	if x != nil {
		return x.PType
	}
	return ""
}

func (x *CasbinRuleCreateReq) GetV0() string {
	if x != nil {
		return x.V0
	}
	return ""
}

func (x *CasbinRuleCreateReq) GetV1() string {
	if x != nil {
		return x.V1
	}
	return ""
}

func (x *CasbinRuleCreateReq) GetV2() string {
	if x != nil {
		return x.V2
	}
	return ""
}

func (x *CasbinRuleCreateReq) GetV3() string {
	if x != nil {
		return x.V3
	}
	return ""
}

func (x *CasbinRuleCreateReq) GetV4() string {
	if x != nil {
		return x.V4
	}
	return ""
}

func (x *CasbinRuleCreateReq) GetV5() string {
	if x != nil {
		return x.V5
	}
	return ""
}

// 创建CasbinRule返回
type CasbinRuleCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//
	PType string `protobuf:"bytes,2,opt,name=p_type,json=pType,proto3" json:"p_type,omitempty"`
	//
	V0 string `protobuf:"bytes,3,opt,name=v0,proto3" json:"v0,omitempty"`
	//
	V1 string `protobuf:"bytes,4,opt,name=v1,proto3" json:"v1,omitempty"`
	//
	V2 string `protobuf:"bytes,5,opt,name=v2,proto3" json:"v2,omitempty"`
	//
	V3 string `protobuf:"bytes,6,opt,name=v3,proto3" json:"v3,omitempty"`
	//
	V4 string `protobuf:"bytes,7,opt,name=v4,proto3" json:"v4,omitempty"`
	//
	V5 string `protobuf:"bytes,8,opt,name=v5,proto3" json:"v5,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,11,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,12,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,13,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *CasbinRuleCreateReply) Reset() {
	*x = CasbinRuleCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasbinRuleCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinRuleCreateReply) ProtoMessage() {}

func (x *CasbinRuleCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinRuleCreateReply.ProtoReflect.Descriptor instead.
func (*CasbinRuleCreateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP(), []int{5}
}

func (x *CasbinRuleCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CasbinRuleCreateReply) GetPType() string {
	if x != nil {
		return x.PType
	}
	return ""
}

func (x *CasbinRuleCreateReply) GetV0() string {
	if x != nil {
		return x.V0
	}
	return ""
}

func (x *CasbinRuleCreateReply) GetV1() string {
	if x != nil {
		return x.V1
	}
	return ""
}

func (x *CasbinRuleCreateReply) GetV2() string {
	if x != nil {
		return x.V2
	}
	return ""
}

func (x *CasbinRuleCreateReply) GetV3() string {
	if x != nil {
		return x.V3
	}
	return ""
}

func (x *CasbinRuleCreateReply) GetV4() string {
	if x != nil {
		return x.V4
	}
	return ""
}

func (x *CasbinRuleCreateReply) GetV5() string {
	if x != nil {
		return x.V5
	}
	return ""
}

func (x *CasbinRuleCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *CasbinRuleCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *CasbinRuleCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *CasbinRuleCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *CasbinRuleCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新CasbinRule请求
type CasbinRuleUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//
	PType string `protobuf:"bytes,2,opt,name=p_type,json=pType,proto3" json:"p_type,omitempty"`
	//
	V0 string `protobuf:"bytes,3,opt,name=v0,proto3" json:"v0,omitempty"`
	//
	V1 string `protobuf:"bytes,4,opt,name=v1,proto3" json:"v1,omitempty"`
	//
	V2 string `protobuf:"bytes,5,opt,name=v2,proto3" json:"v2,omitempty"`
	//
	V3 string `protobuf:"bytes,6,opt,name=v3,proto3" json:"v3,omitempty"`
	//
	V4 string `protobuf:"bytes,7,opt,name=v4,proto3" json:"v4,omitempty"`
	//
	V5 string `protobuf:"bytes,8,opt,name=v5,proto3" json:"v5,omitempty"`
}

func (x *CasbinRuleUpdateReq) Reset() {
	*x = CasbinRuleUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasbinRuleUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinRuleUpdateReq) ProtoMessage() {}

func (x *CasbinRuleUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinRuleUpdateReq.ProtoReflect.Descriptor instead.
func (*CasbinRuleUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP(), []int{6}
}

func (x *CasbinRuleUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CasbinRuleUpdateReq) GetPType() string {
	if x != nil {
		return x.PType
	}
	return ""
}

func (x *CasbinRuleUpdateReq) GetV0() string {
	if x != nil {
		return x.V0
	}
	return ""
}

func (x *CasbinRuleUpdateReq) GetV1() string {
	if x != nil {
		return x.V1
	}
	return ""
}

func (x *CasbinRuleUpdateReq) GetV2() string {
	if x != nil {
		return x.V2
	}
	return ""
}

func (x *CasbinRuleUpdateReq) GetV3() string {
	if x != nil {
		return x.V3
	}
	return ""
}

func (x *CasbinRuleUpdateReq) GetV4() string {
	if x != nil {
		return x.V4
	}
	return ""
}

func (x *CasbinRuleUpdateReq) GetV5() string {
	if x != nil {
		return x.V5
	}
	return ""
}

// 更新CasbinRule返回
type CasbinRuleUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//
	PType string `protobuf:"bytes,2,opt,name=p_type,json=pType,proto3" json:"p_type,omitempty"`
	//
	V0 string `protobuf:"bytes,3,opt,name=v0,proto3" json:"v0,omitempty"`
	//
	V1 string `protobuf:"bytes,4,opt,name=v1,proto3" json:"v1,omitempty"`
	//
	V2 string `protobuf:"bytes,5,opt,name=v2,proto3" json:"v2,omitempty"`
	//
	V3 string `protobuf:"bytes,6,opt,name=v3,proto3" json:"v3,omitempty"`
	//
	V4 string `protobuf:"bytes,7,opt,name=v4,proto3" json:"v4,omitempty"`
	//
	V5 string `protobuf:"bytes,8,opt,name=v5,proto3" json:"v5,omitempty"`
}

func (x *CasbinRuleUpdateReply) Reset() {
	*x = CasbinRuleUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasbinRuleUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinRuleUpdateReply) ProtoMessage() {}

func (x *CasbinRuleUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinRuleUpdateReply.ProtoReflect.Descriptor instead.
func (*CasbinRuleUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP(), []int{7}
}

func (x *CasbinRuleUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CasbinRuleUpdateReply) GetPType() string {
	if x != nil {
		return x.PType
	}
	return ""
}

func (x *CasbinRuleUpdateReply) GetV0() string {
	if x != nil {
		return x.V0
	}
	return ""
}

func (x *CasbinRuleUpdateReply) GetV1() string {
	if x != nil {
		return x.V1
	}
	return ""
}

func (x *CasbinRuleUpdateReply) GetV2() string {
	if x != nil {
		return x.V2
	}
	return ""
}

func (x *CasbinRuleUpdateReply) GetV3() string {
	if x != nil {
		return x.V3
	}
	return ""
}

func (x *CasbinRuleUpdateReply) GetV4() string {
	if x != nil {
		return x.V4
	}
	return ""
}

func (x *CasbinRuleUpdateReply) GetV5() string {
	if x != nil {
		return x.V5
	}
	return ""
}

// 删除CasbinRule请求
type CasbinRuleDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CasbinRuleDeleteReq) Reset() {
	*x = CasbinRuleDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasbinRuleDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinRuleDeleteReq) ProtoMessage() {}

func (x *CasbinRuleDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinRuleDeleteReq.ProtoReflect.Descriptor instead.
func (*CasbinRuleDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP(), []int{8}
}

func (x *CasbinRuleDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除CasbinRule请求
type CasbinRuleBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *CasbinRuleBatchDeleteReq) Reset() {
	*x = CasbinRuleBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasbinRuleBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinRuleBatchDeleteReq) ProtoMessage() {}

func (x *CasbinRuleBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinRuleBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*CasbinRuleBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP(), []int{9}
}

func (x *CasbinRuleBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除CasbinRule返回
type CasbinRuleDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *CasbinRuleDeleteReply) Reset() {
	*x = CasbinRuleDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CasbinRuleDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CasbinRuleDeleteReply) ProtoMessage() {}

func (x *CasbinRuleDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CasbinRuleDeleteReply.ProtoReflect.Descriptor instead.
func (*CasbinRuleDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP(), []int{10}
}

func (x *CasbinRuleDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_admin_casbinrule_v1_casbin_rule_proto protoreflect.FileDescriptor

var file_api_admin_casbinrule_v1_casbin_rule_proto_rawDesc = []byte{
	0x0a, 0x29, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x63, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e,
	0x5f, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x63, 0x61, 0x73,
	0x62, 0x69, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x70, 0x0a, 0x11, 0x43, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x32, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x74, 0x0a, 0x13, 0x43, 0x61,
	0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0xde, 0x02, 0x0a, 0x0d, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x30, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x31, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x32, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x33, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x34, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x35, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x35, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0xe0, 0x02, 0x0a, 0x0f, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x30, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x31, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x32, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x33, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x34, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x35, 0x12, 0x38, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x8c, 0x01, 0x0a, 0x13, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x15, 0x0a, 0x06,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x30, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x76, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x76, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x76, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x33, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x76, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x34, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x76, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x35, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x76, 0x35, 0x22, 0xe6, 0x02, 0x0a, 0x15, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75,
	0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a,
	0x06, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x76, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x76, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x76, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x76, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x76, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x76, 0x35, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9c, 0x01, 0x0a,
	0x13, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x76,
	0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x30, 0x12, 0x0e, 0x0a, 0x02, 0x76,
	0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x31, 0x12, 0x0e, 0x0a, 0x02, 0x76,
	0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x32, 0x12, 0x0e, 0x0a, 0x02, 0x76,
	0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x33, 0x12, 0x0e, 0x0a, 0x02, 0x76,
	0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x34, 0x12, 0x0e, 0x0a, 0x02, 0x76,
	0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x35, 0x22, 0x9e, 0x01, 0x0a, 0x15,
	0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x30, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x30, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x31, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x32, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x33, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x33, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x34, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x34, 0x12, 0x0e, 0x0a, 0x02,
	0x76, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x35, 0x22, 0x25, 0x0a, 0x13,
	0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x2c, 0x0a, 0x18, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x22, 0x2f, 0x0a, 0x15, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x32, 0xe8, 0x05, 0x0a, 0x0a, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x77, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67, 0x65, 0x43, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x72,
	0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x61, 0x73, 0x62, 0x69,
	0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e,
	0x2f, 0x72, 0x75, 0x6c, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x6b, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1c, 0x2e, 0x63, 0x61,
	0x73, 0x62, 0x69, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x63, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x72, 0x75,
	0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7d, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x61,
	0x73, 0x62, 0x69, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a,
	0x24, 0x2e, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x1a, 0x14, 0x2f,
	0x76, 0x31, 0x2f, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x78, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x73,
	0x62, 0x69, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62, 0x69,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x22, 0x0f, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x3a, 0x01, 0x2a,
	0x12, 0x7a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e,
	0x52, 0x75, 0x6c, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x72, 0x75, 0x6c,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x63, 0x61, 0x73, 0x62, 0x69,
	0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52,
	0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x73, 0x62,
	0x69, 0x6e, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7f, 0x0a, 0x15,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x61, 0x73, 0x62, 0x69,
	0x6e, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x27, 0x2e, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x72, 0x75,
	0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x24,
	0x2e, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x73, 0x62, 0x69, 0x6e, 0x52, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x42, 0x21, 0x5a,
	0x1f, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f,
	0x63, 0x61, 0x73, 0x62, 0x69, 0x6e, 0x72, 0x75, 0x6c, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescOnce sync.Once
	file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescData = file_api_admin_casbinrule_v1_casbin_rule_proto_rawDesc
)

func file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescGZIP() []byte {
	file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescOnce.Do(func() {
		file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescData)
	})
	return file_api_admin_casbinrule_v1_casbin_rule_proto_rawDescData
}

var file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_admin_casbinrule_v1_casbin_rule_proto_goTypes = []interface{}{
	(*CasbinRulePageReq)(nil),        // 0: casbinrule.v1.CasbinRulePageReq
	(*CasbinRulePageReply)(nil),      // 1: casbinrule.v1.CasbinRulePageReply
	(*CasbinRuleReq)(nil),            // 2: casbinrule.v1.CasbinRuleReq
	(*CasbinRuleReply)(nil),          // 3: casbinrule.v1.CasbinRuleReply
	(*CasbinRuleCreateReq)(nil),      // 4: casbinrule.v1.CasbinRuleCreateReq
	(*CasbinRuleCreateReply)(nil),    // 5: casbinrule.v1.CasbinRuleCreateReply
	(*CasbinRuleUpdateReq)(nil),      // 6: casbinrule.v1.CasbinRuleUpdateReq
	(*CasbinRuleUpdateReply)(nil),    // 7: casbinrule.v1.CasbinRuleUpdateReply
	(*CasbinRuleDeleteReq)(nil),      // 8: casbinrule.v1.CasbinRuleDeleteReq
	(*CasbinRuleBatchDeleteReq)(nil), // 9: casbinrule.v1.CasbinRuleBatchDeleteReq
	(*CasbinRuleDeleteReply)(nil),    // 10: casbinrule.v1.CasbinRuleDeleteReply
	(*pagin.Pagination)(nil),         // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),    // 12: google.protobuf.Timestamp
}
var file_api_admin_casbinrule_v1_casbin_rule_proto_depIdxs = []int32{
	11, // 0: casbinrule.v1.CasbinRulePageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: casbinrule.v1.CasbinRulePageReq.param:type_name -> casbinrule.v1.CasbinRuleReq
	11, // 2: casbinrule.v1.CasbinRulePageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: casbinrule.v1.CasbinRulePageReply.items:type_name -> casbinrule.v1.CasbinRuleReply
	12, // 4: casbinrule.v1.CasbinRuleReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: casbinrule.v1.CasbinRuleReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: casbinrule.v1.CasbinRuleReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: casbinrule.v1.CasbinRuleReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: casbinrule.v1.CasbinRuleCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: casbinrule.v1.CasbinRuleCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: casbinrule.v1.CasbinRule.GetPageCasbinRule:input_type -> casbinrule.v1.CasbinRulePageReq
	2,  // 11: casbinrule.v1.CasbinRule.GetCasbinRule:input_type -> casbinrule.v1.CasbinRuleReq
	6,  // 12: casbinrule.v1.CasbinRule.UpdateCasbinRule:input_type -> casbinrule.v1.CasbinRuleUpdateReq
	4,  // 13: casbinrule.v1.CasbinRule.CreateCasbinRule:input_type -> casbinrule.v1.CasbinRuleCreateReq
	8,  // 14: casbinrule.v1.CasbinRule.DeleteCasbinRule:input_type -> casbinrule.v1.CasbinRuleDeleteReq
	9,  // 15: casbinrule.v1.CasbinRule.BatchDeleteCasbinRule:input_type -> casbinrule.v1.CasbinRuleBatchDeleteReq
	1,  // 16: casbinrule.v1.CasbinRule.GetPageCasbinRule:output_type -> casbinrule.v1.CasbinRulePageReply
	3,  // 17: casbinrule.v1.CasbinRule.GetCasbinRule:output_type -> casbinrule.v1.CasbinRuleReply
	7,  // 18: casbinrule.v1.CasbinRule.UpdateCasbinRule:output_type -> casbinrule.v1.CasbinRuleUpdateReply
	5,  // 19: casbinrule.v1.CasbinRule.CreateCasbinRule:output_type -> casbinrule.v1.CasbinRuleCreateReply
	10, // 20: casbinrule.v1.CasbinRule.DeleteCasbinRule:output_type -> casbinrule.v1.CasbinRuleDeleteReply
	10, // 21: casbinrule.v1.CasbinRule.BatchDeleteCasbinRule:output_type -> casbinrule.v1.CasbinRuleDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_admin_casbinrule_v1_casbin_rule_proto_init() }
func file_api_admin_casbinrule_v1_casbin_rule_proto_init() {
	if File_api_admin_casbinrule_v1_casbin_rule_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasbinRulePageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasbinRulePageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasbinRuleReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasbinRuleReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasbinRuleCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasbinRuleCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasbinRuleUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasbinRuleUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasbinRuleDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasbinRuleBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CasbinRuleDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_admin_casbinrule_v1_casbin_rule_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_admin_casbinrule_v1_casbin_rule_proto_goTypes,
		DependencyIndexes: file_api_admin_casbinrule_v1_casbin_rule_proto_depIdxs,
		MessageInfos:      file_api_admin_casbinrule_v1_casbin_rule_proto_msgTypes,
	}.Build()
	File_api_admin_casbinrule_v1_casbin_rule_proto = out.File
	file_api_admin_casbinrule_v1_casbin_rule_proto_rawDesc = nil
	file_api_admin_casbinrule_v1_casbin_rule_proto_goTypes = nil
	file_api_admin_casbinrule_v1_casbin_rule_proto_depIdxs = nil
}
