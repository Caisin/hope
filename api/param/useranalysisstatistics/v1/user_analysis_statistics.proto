syntax = "proto3";
package useranalysisstatistics.v1;

import "google/api/annotations.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/descriptor.proto";
import "pagin.proto";

option go_package = "hope/api/param/useranalysisstatistics/v1;v1";

// The UserAnalysisStatistics service definition.
service UserAnalysisStatistics {

  // 分页查询UserAnalysisStatistics
  rpc GetPageUserAnalysisStatistics (UserAnalysisStatisticsPageReq) returns (UserAnalysisStatisticsPageReply)  {
    option (google.api.http) = {
      get: "/v1/useranalysisstatistics/page"
    };
  }

  // 获取UserAnalysisStatistics
  rpc GetUserAnalysisStatistics (UserAnalysisStatisticsReq) returns (UserAnalysisStatisticsReply)  {
    option (google.api.http) = {
      get: "/v1/useranalysisstatistics/{id}"
    };
  }

  // 更新UserAnalysisStatistics
  rpc UpdateUserAnalysisStatistics (UserAnalysisStatisticsUpdateReq) returns (UserAnalysisStatisticsUpdateReply)  {
    option (google.api.http) = {
      put: "/v1/useranalysisstatistics/{id}"
      body: "*"
    };
  }

  // 创建UserAnalysisStatistics
  rpc CreateUserAnalysisStatistics (UserAnalysisStatisticsCreateReq) returns (UserAnalysisStatisticsCreateReply)  {
    option (google.api.http) = {
      post: "/v1/useranalysisstatistics"
      body: "*"
    };
  }

  // 删除UserAnalysisStatistics
  rpc DeleteUserAnalysisStatistics (UserAnalysisStatisticsDeleteReq) returns (UserAnalysisStatisticsDeleteReply)  {
    option (google.api.http) = {
      delete: "/v1/useranalysisstatistics/{id}"
    };
  }

  // 批量删除UserAnalysisStatistics
  rpc BatchDeleteUserAnalysisStatistics (UserAnalysisStatisticsBatchDeleteReq) returns (UserAnalysisStatisticsDeleteReply)  {
    option (google.api.http) = {
      delete: "/v1/useranalysisstatistics"
    };
  }

}

// 查询搜索请求
message UserAnalysisStatisticsPageReq {
    //分页查询参数
    pagin.Pagination pagin = 1;
    //查询条件参数
    UserAnalysisStatisticsReq param = 2;
}

// 查询搜索返回
message UserAnalysisStatisticsPageReply {
    //分页参数
    pagin.Pagination pagin = 1;
    //查询条目
    repeated UserAnalysisStatisticsReply items = 2;
}


// 查询搜索请求
message UserAnalysisStatisticsReq {
    int64 id = 1;
    //统计日期
    string statisticsDate = 2;
    //累计注册
    int64 allUserNum = 3;
    //累计充值
    int64 allPayment = 4;
    //总充值人数
    int64 allPayUser = 5;
    //总订单数
    int64 allOrderNum = 6;
    //当日注册人数
    int64 dayUserNum = 7;
    //当日订单金额
    int64 dayPayment = 8;
    //当日订单数
    int64 dayOrderNum = 9;
    //当日充值人数
    int64 dayPayUser = 10;
    //当日注册充值
    int64 dayRegPayment = 11;
    //当日注册充值人数
    int64 dayRegUserNum = 12;
    //当日注册充值笔数
    int64 dayRegOrderNum = 13;
    //当日老用户充值
    int64 oldRegPayment = 14;
    //当日老用户充值人数
    int64 oldRegUserNum = 15;
    //当日老用户充值笔数
    int64 oldRegOrderNum = 16;
    //付费率=当日充值笔数/当日注册
    int64 payRate = 17;
    //ARPU(average revenue per user)=充值/注册
    int64 arpu = 18;
    //当日注册充值客单价=当日注册充值/当日注册充值笔数
    int64 dayRegArpu = 19;
    //今日充值客单价=今日充值金额/充值笔数
    int64 dayArpu = 20;
    //老用户充值客单价=老用户充值/老用户充值笔数
    int64 dayOldArpu = 21;
    //创建时间
    google.protobuf.Timestamp createdAt = 22;
    //更新时间
    google.protobuf.Timestamp updatedAt = 23;
    //创建者
    int64 createBy = 24;
    //更新者
    int64 updateBy = 25;
    //租户
    int64 tenantId = 26;

}

// 查询搜索返回
message UserAnalysisStatisticsReply {
    int64 id = 1;
    //统计日期
    string statisticsDate = 2;
    //累计注册
    int64 allUserNum = 3;
    //累计充值
    int64 allPayment = 4;
    //总充值人数
    int64 allPayUser = 5;
    //总订单数
    int64 allOrderNum = 6;
    //当日注册人数
    int64 dayUserNum = 7;
    //当日订单金额
    int64 dayPayment = 8;
    //当日订单数
    int64 dayOrderNum = 9;
    //当日充值人数
    int64 dayPayUser = 10;
    //当日注册充值
    int64 dayRegPayment = 11;
    //当日注册充值人数
    int64 dayRegUserNum = 12;
    //当日注册充值笔数
    int64 dayRegOrderNum = 13;
    //当日老用户充值
    int64 oldRegPayment = 14;
    //当日老用户充值人数
    int64 oldRegUserNum = 15;
    //当日老用户充值笔数
    int64 oldRegOrderNum = 16;
    //付费率=当日充值笔数/当日注册
    int64 payRate = 17;
    //ARPU(average revenue per user)=充值/注册
    int64 arpu = 18;
    //当日注册充值客单价=当日注册充值/当日注册充值笔数
    int64 dayRegArpu = 19;
    //今日充值客单价=今日充值金额/充值笔数
    int64 dayArpu = 20;
    //老用户充值客单价=老用户充值/老用户充值笔数
    int64 dayOldArpu = 21;
    //创建时间
    google.protobuf.Timestamp createdAt = 22;
    //更新时间
    google.protobuf.Timestamp updatedAt = 23;
    //创建者
    int64 createBy = 24;
    //更新者
    int64 updateBy = 25;
    //租户
    int64 tenantId = 26;

}

// 创建UserAnalysisStatistics请求
message UserAnalysisStatisticsCreateReq {
    //统计日期
    string statisticsDate = 1;
    //累计注册
    int64 allUserNum = 2;
    //累计充值
    int64 allPayment = 3;
    //总充值人数
    int64 allPayUser = 4;
    //总订单数
    int64 allOrderNum = 5;
    //当日注册人数
    int64 dayUserNum = 6;
    //当日订单金额
    int64 dayPayment = 7;
    //当日订单数
    int64 dayOrderNum = 8;
    //当日充值人数
    int64 dayPayUser = 9;
    //当日注册充值
    int64 dayRegPayment = 10;
    //当日注册充值人数
    int64 dayRegUserNum = 11;
    //当日注册充值笔数
    int64 dayRegOrderNum = 12;
    //当日老用户充值
    int64 oldRegPayment = 13;
    //当日老用户充值人数
    int64 oldRegUserNum = 14;
    //当日老用户充值笔数
    int64 oldRegOrderNum = 15;
    //付费率=当日充值笔数/当日注册
    int64 payRate = 16;
    //ARPU(average revenue per user)=充值/注册
    int64 arpu = 17;
    //当日注册充值客单价=当日注册充值/当日注册充值笔数
    int64 dayRegArpu = 18;
    //今日充值客单价=今日充值金额/充值笔数
    int64 dayArpu = 19;
    //老用户充值客单价=老用户充值/老用户充值笔数
    int64 dayOldArpu = 20;

}

// 创建UserAnalysisStatistics返回
message UserAnalysisStatisticsCreateReply {
    int64 id = 1;
    //统计日期
    string statisticsDate = 2;
    //累计注册
    int64 allUserNum = 3;
    //累计充值
    int64 allPayment = 4;
    //总充值人数
    int64 allPayUser = 5;
    //总订单数
    int64 allOrderNum = 6;
    //当日注册人数
    int64 dayUserNum = 7;
    //当日订单金额
    int64 dayPayment = 8;
    //当日订单数
    int64 dayOrderNum = 9;
    //当日充值人数
    int64 dayPayUser = 10;
    //当日注册充值
    int64 dayRegPayment = 11;
    //当日注册充值人数
    int64 dayRegUserNum = 12;
    //当日注册充值笔数
    int64 dayRegOrderNum = 13;
    //当日老用户充值
    int64 oldRegPayment = 14;
    //当日老用户充值人数
    int64 oldRegUserNum = 15;
    //当日老用户充值笔数
    int64 oldRegOrderNum = 16;
    //付费率=当日充值笔数/当日注册
    int64 payRate = 17;
    //ARPU(average revenue per user)=充值/注册
    int64 arpu = 18;
    //当日注册充值客单价=当日注册充值/当日注册充值笔数
    int64 dayRegArpu = 19;
    //今日充值客单价=今日充值金额/充值笔数
    int64 dayArpu = 20;
    //老用户充值客单价=老用户充值/老用户充值笔数
    int64 dayOldArpu = 21;
    //创建时间
    google.protobuf.Timestamp createdAt = 22;
    //更新时间
    google.protobuf.Timestamp updatedAt = 23;
    //创建者
    int64 createBy = 24;
    //更新者
    int64 updateBy = 25;
    //租户
    int64 tenantId = 26;

}

// 更新UserAnalysisStatistics请求
message UserAnalysisStatisticsUpdateReq {
    int64 id = 1;
    //统计日期
    string statisticsDate = 2;
    //累计注册
    int64 allUserNum = 3;
    //累计充值
    int64 allPayment = 4;
    //总充值人数
    int64 allPayUser = 5;
    //总订单数
    int64 allOrderNum = 6;
    //当日注册人数
    int64 dayUserNum = 7;
    //当日订单金额
    int64 dayPayment = 8;
    //当日订单数
    int64 dayOrderNum = 9;
    //当日充值人数
    int64 dayPayUser = 10;
    //当日注册充值
    int64 dayRegPayment = 11;
    //当日注册充值人数
    int64 dayRegUserNum = 12;
    //当日注册充值笔数
    int64 dayRegOrderNum = 13;
    //当日老用户充值
    int64 oldRegPayment = 14;
    //当日老用户充值人数
    int64 oldRegUserNum = 15;
    //当日老用户充值笔数
    int64 oldRegOrderNum = 16;
    //付费率=当日充值笔数/当日注册
    int64 payRate = 17;
    //ARPU(average revenue per user)=充值/注册
    int64 arpu = 18;
    //当日注册充值客单价=当日注册充值/当日注册充值笔数
    int64 dayRegArpu = 19;
    //今日充值客单价=今日充值金额/充值笔数
    int64 dayArpu = 20;
    //老用户充值客单价=老用户充值/老用户充值笔数
    int64 dayOldArpu = 21;

}


// 更新UserAnalysisStatistics返回
message UserAnalysisStatisticsUpdateReply {
    int64 id = 1;
    //统计日期
    string statisticsDate = 2;
    //累计注册
    int64 allUserNum = 3;
    //累计充值
    int64 allPayment = 4;
    //总充值人数
    int64 allPayUser = 5;
    //总订单数
    int64 allOrderNum = 6;
    //当日注册人数
    int64 dayUserNum = 7;
    //当日订单金额
    int64 dayPayment = 8;
    //当日订单数
    int64 dayOrderNum = 9;
    //当日充值人数
    int64 dayPayUser = 10;
    //当日注册充值
    int64 dayRegPayment = 11;
    //当日注册充值人数
    int64 dayRegUserNum = 12;
    //当日注册充值笔数
    int64 dayRegOrderNum = 13;
    //当日老用户充值
    int64 oldRegPayment = 14;
    //当日老用户充值人数
    int64 oldRegUserNum = 15;
    //当日老用户充值笔数
    int64 oldRegOrderNum = 16;
    //付费率=当日充值笔数/当日注册
    int64 payRate = 17;
    //ARPU(average revenue per user)=充值/注册
    int64 arpu = 18;
    //当日注册充值客单价=当日注册充值/当日注册充值笔数
    int64 dayRegArpu = 19;
    //今日充值客单价=今日充值金额/充值笔数
    int64 dayArpu = 20;
    //老用户充值客单价=老用户充值/老用户充值笔数
    int64 dayOldArpu = 21;

}

// 删除UserAnalysisStatistics请求
message UserAnalysisStatisticsDeleteReq {
    int64 id = 1;
}


// 批量删除UserAnalysisStatistics请求
message UserAnalysisStatisticsBatchDeleteReq {
    repeated int64 ids = 1;
}


// 删除UserAnalysisStatistics返回
message UserAnalysisStatisticsDeleteReply {
    bool result = 1;
}

