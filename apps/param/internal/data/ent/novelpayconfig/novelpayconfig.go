// Code generated by entc, DO NOT EDIT.

package novelpayconfig

import (
	"time"
)

const (
	// Label holds the string label denoting the novelpayconfig type in the database.
	Label = "novel_pay_config"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldProductId holds the string denoting the productid field in the database.
	FieldProductId = "product_id"
	// FieldPaymentName holds the string denoting the paymentname field in the database.
	FieldPaymentName = "payment_name"
	// FieldFirstPayment holds the string denoting the firstpayment field in the database.
	FieldFirstPayment = "first_payment"
	// FieldPayment holds the string denoting the payment field in the database.
	FieldPayment = "payment"
	// FieldOriginalPrice holds the string denoting the originalprice field in the database.
	FieldOriginalPrice = "original_price"
	// FieldCfgType holds the string denoting the cfgtype field in the database.
	FieldCfgType = "cfg_type"
	// FieldCoin holds the string denoting the coin field in the database.
	FieldCoin = "coin"
	// FieldCurrency holds the string denoting the currency field in the database.
	FieldCurrency = "currency"
	// FieldCoupon holds the string denoting the coupon field in the database.
	FieldCoupon = "coupon"
	// FieldCoinItem holds the string denoting the coinitem field in the database.
	FieldCoinItem = "coin_item"
	// FieldCouponItem holds the string denoting the couponitem field in the database.
	FieldCouponItem = "coupon_item"
	// FieldSort holds the string denoting the sort field in the database.
	FieldSort = "sort"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldIsSend holds the string denoting the issend field in the database.
	FieldIsSend = "is_send"
	// FieldPayType holds the string denoting the paytype field in the database.
	FieldPayType = "pay_type"
	// FieldVipType holds the string denoting the viptype field in the database.
	FieldVipType = "vip_type"
	// FieldIsHot holds the string denoting the ishot field in the database.
	FieldIsHot = "is_hot"
	// FieldCycleDay holds the string denoting the cycleday field in the database.
	FieldCycleDay = "cycle_day"
	// FieldSummary holds the string denoting the summary field in the database.
	FieldSummary = "summary"
	// FieldRemark holds the string denoting the remark field in the database.
	FieldRemark = "remark"
	// FieldEffectTime holds the string denoting the effecttime field in the database.
	FieldEffectTime = "effect_time"
	// FieldExpiredTime holds the string denoting the expiredtime field in the database.
	FieldExpiredTime = "expired_time"
	// FieldCreatedAt holds the string denoting the createdat field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updatedat field in the database.
	FieldUpdatedAt = "updated_at"
	// FieldCreateBy holds the string denoting the createby field in the database.
	FieldCreateBy = "create_by"
	// FieldUpdateBy holds the string denoting the updateby field in the database.
	FieldUpdateBy = "update_by"
	// FieldTenantId holds the string denoting the tenantid field in the database.
	FieldTenantId = "tenant_id"
	// Table holds the table name of the novelpayconfig in the database.
	Table = "novel_pay_configs"
)

// Columns holds all SQL columns for novelpayconfig fields.
var Columns = []string{
	FieldID,
	FieldProductId,
	FieldPaymentName,
	FieldFirstPayment,
	FieldPayment,
	FieldOriginalPrice,
	FieldCfgType,
	FieldCoin,
	FieldCurrency,
	FieldCoupon,
	FieldCoinItem,
	FieldCouponItem,
	FieldSort,
	FieldState,
	FieldIsSend,
	FieldPayType,
	FieldVipType,
	FieldIsHot,
	FieldCycleDay,
	FieldSummary,
	FieldRemark,
	FieldEffectTime,
	FieldExpiredTime,
	FieldCreatedAt,
	FieldUpdatedAt,
	FieldCreateBy,
	FieldUpdateBy,
	FieldTenantId,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultEffectTime holds the default value on creation for the "effectTime" field.
	DefaultEffectTime func() time.Time
	// DefaultExpiredTime holds the default value on creation for the "expiredTime" field.
	DefaultExpiredTime func() time.Time
	// DefaultCreatedAt holds the default value on creation for the "createdAt" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updatedAt" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updatedAt" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultCreateBy holds the default value on creation for the "createBy" field.
	DefaultCreateBy int64
	// DefaultUpdateBy holds the default value on creation for the "updateBy" field.
	DefaultUpdateBy int64
	// DefaultTenantId holds the default value on creation for the "tenantId" field.
	DefaultTenantId int64
)
