// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/admin/sysdicttype/v1/sys_dict_type.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type SysDictTypePageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *SysDictTypeReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *SysDictTypePageReq) Reset() {
	*x = SysDictTypePageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypePageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypePageReq) ProtoMessage() {}

func (x *SysDictTypePageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypePageReq.ProtoReflect.Descriptor instead.
func (*SysDictTypePageReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP(), []int{0}
}

func (x *SysDictTypePageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SysDictTypePageReq) GetParam() *SysDictTypeReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type SysDictTypePageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*SysDictTypeReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SysDictTypePageReply) Reset() {
	*x = SysDictTypePageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypePageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypePageReply) ProtoMessage() {}

func (x *SysDictTypePageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypePageReply.ProtoReflect.Descriptor instead.
func (*SysDictTypePageReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP(), []int{1}
}

func (x *SysDictTypePageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SysDictTypePageReply) GetItems() []*SysDictTypeReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type SysDictTypeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//字典名称
	DictName string `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName,omitempty"`
	//字典类型
	TypeCode string `protobuf:"bytes,3,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//状态
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	//备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,8,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,9,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,10,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysDictTypeReq) Reset() {
	*x = SysDictTypeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypeReq) ProtoMessage() {}

func (x *SysDictTypeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypeReq.ProtoReflect.Descriptor instead.
func (*SysDictTypeReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP(), []int{2}
}

func (x *SysDictTypeReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDictTypeReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *SysDictTypeReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *SysDictTypeReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDictTypeReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysDictTypeReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysDictTypeReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysDictTypeReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysDictTypeReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysDictTypeReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type SysDictTypeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//字典名称
	DictName string `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName,omitempty"`
	//字典类型
	TypeCode string `protobuf:"bytes,3,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//状态
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	//备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,8,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,9,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,10,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysDictTypeReply) Reset() {
	*x = SysDictTypeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypeReply) ProtoMessage() {}

func (x *SysDictTypeReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypeReply.ProtoReflect.Descriptor instead.
func (*SysDictTypeReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP(), []int{3}
}

func (x *SysDictTypeReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDictTypeReply) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *SysDictTypeReply) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *SysDictTypeReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDictTypeReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysDictTypeReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysDictTypeReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysDictTypeReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysDictTypeReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysDictTypeReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建SysDictType请求
type SysDictTypeCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//字典名称
	DictName string `protobuf:"bytes,1,opt,name=dictName,proto3" json:"dictName,omitempty"`
	//字典类型
	TypeCode string `protobuf:"bytes,2,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//状态
	Status int32 `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	//备注
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SysDictTypeCreateReq) Reset() {
	*x = SysDictTypeCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypeCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypeCreateReq) ProtoMessage() {}

func (x *SysDictTypeCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypeCreateReq.ProtoReflect.Descriptor instead.
func (*SysDictTypeCreateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP(), []int{4}
}

func (x *SysDictTypeCreateReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *SysDictTypeCreateReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *SysDictTypeCreateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDictTypeCreateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 创建SysDictType返回
type SysDictTypeCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//字典名称
	DictName string `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName,omitempty"`
	//字典类型
	TypeCode string `protobuf:"bytes,3,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//状态
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	//备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,8,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,9,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,10,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysDictTypeCreateReply) Reset() {
	*x = SysDictTypeCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypeCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypeCreateReply) ProtoMessage() {}

func (x *SysDictTypeCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypeCreateReply.ProtoReflect.Descriptor instead.
func (*SysDictTypeCreateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP(), []int{5}
}

func (x *SysDictTypeCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDictTypeCreateReply) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *SysDictTypeCreateReply) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *SysDictTypeCreateReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDictTypeCreateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *SysDictTypeCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysDictTypeCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysDictTypeCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysDictTypeCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysDictTypeCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新SysDictType请求
type SysDictTypeUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//字典名称
	DictName string `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName,omitempty"`
	//字典类型
	TypeCode string `protobuf:"bytes,3,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//状态
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	//备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SysDictTypeUpdateReq) Reset() {
	*x = SysDictTypeUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypeUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypeUpdateReq) ProtoMessage() {}

func (x *SysDictTypeUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypeUpdateReq.ProtoReflect.Descriptor instead.
func (*SysDictTypeUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP(), []int{6}
}

func (x *SysDictTypeUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDictTypeUpdateReq) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *SysDictTypeUpdateReq) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *SysDictTypeUpdateReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDictTypeUpdateReq) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 更新SysDictType返回
type SysDictTypeUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//字典名称
	DictName string `protobuf:"bytes,2,opt,name=dictName,proto3" json:"dictName,omitempty"`
	//字典类型
	TypeCode string `protobuf:"bytes,3,opt,name=typeCode,proto3" json:"typeCode,omitempty"`
	//状态
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	//备注
	Remark string `protobuf:"bytes,5,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *SysDictTypeUpdateReply) Reset() {
	*x = SysDictTypeUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypeUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypeUpdateReply) ProtoMessage() {}

func (x *SysDictTypeUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypeUpdateReply.ProtoReflect.Descriptor instead.
func (*SysDictTypeUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP(), []int{7}
}

func (x *SysDictTypeUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysDictTypeUpdateReply) GetDictName() string {
	if x != nil {
		return x.DictName
	}
	return ""
}

func (x *SysDictTypeUpdateReply) GetTypeCode() string {
	if x != nil {
		return x.TypeCode
	}
	return ""
}

func (x *SysDictTypeUpdateReply) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *SysDictTypeUpdateReply) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 删除SysDictType请求
type SysDictTypeDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SysDictTypeDeleteReq) Reset() {
	*x = SysDictTypeDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypeDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypeDeleteReq) ProtoMessage() {}

func (x *SysDictTypeDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypeDeleteReq.ProtoReflect.Descriptor instead.
func (*SysDictTypeDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP(), []int{8}
}

func (x *SysDictTypeDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除SysDictType请求
type SysDictTypeBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SysDictTypeBatchDeleteReq) Reset() {
	*x = SysDictTypeBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypeBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypeBatchDeleteReq) ProtoMessage() {}

func (x *SysDictTypeBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypeBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*SysDictTypeBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP(), []int{9}
}

func (x *SysDictTypeBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除SysDictType返回
type SysDictTypeDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysDictTypeDeleteReply) Reset() {
	*x = SysDictTypeDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysDictTypeDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysDictTypeDeleteReply) ProtoMessage() {}

func (x *SysDictTypeDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysDictTypeDeleteReply.ProtoReflect.Descriptor instead.
func (*SysDictTypeDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP(), []int{10}
}

func (x *SysDictTypeDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_admin_sysdicttype_v1_sys_dict_type_proto protoreflect.FileDescriptor

var file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x64,
	0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x64,
	0x69, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x73, 0x0a, 0x12,
	0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x34, 0x0a, 0x05, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x79, 0x73,
	0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x22, 0x77, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x12, 0x36, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd0, 0x02, 0x0a, 0x0e, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xd2, 0x02,
	0x0a, 0x10, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74,
	0x49, 0x64, 0x22, 0x7e, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69,
	0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61,
	0x72, 0x6b, 0x22, 0xd8, 0x02, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8e, 0x01,
	0x0a, 0x14, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0x90,
	0x01, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x22, 0x26, 0x0a, 0x14, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x2d, 0x0a, 0x19, 0x53, 0x79, 0x73,
	0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x30, 0x0a, 0x16, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0x96, 0x06, 0x0a, 0x0b, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x7e, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x50, 0x61, 0x67, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x64, 0x69, 0x63, 0x74,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x72, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x2e, 0x73,
	0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x73,
	0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f,
	0x64, 0x69, 0x63, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x84,
	0x01, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79,
	0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73,
	0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x1a, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x7f, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x2e, 0x73, 0x79, 0x73,
	0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44,
	0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x81, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x2e, 0x73,
	0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x18, 0x2a, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x64, 0x69, 0x63, 0x74,
	0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x86, 0x01, 0x0a, 0x16, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x29, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74,
	0x79, 0x70, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x26, 0x2e, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x44, 0x69, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x64, 0x69, 0x63, 0x74, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x42, 0x22, 0x5a, 0x20, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x64, 0x69, 0x63, 0x74, 0x74, 0x79, 0x70,
	0x65, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescOnce sync.Once
	file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescData = file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDesc
)

func file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescGZIP() []byte {
	file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescOnce.Do(func() {
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescData)
	})
	return file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDescData
}

var file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_admin_sysdicttype_v1_sys_dict_type_proto_goTypes = []interface{}{
	(*SysDictTypePageReq)(nil),        // 0: sysdicttype.v1.SysDictTypePageReq
	(*SysDictTypePageReply)(nil),      // 1: sysdicttype.v1.SysDictTypePageReply
	(*SysDictTypeReq)(nil),            // 2: sysdicttype.v1.SysDictTypeReq
	(*SysDictTypeReply)(nil),          // 3: sysdicttype.v1.SysDictTypeReply
	(*SysDictTypeCreateReq)(nil),      // 4: sysdicttype.v1.SysDictTypeCreateReq
	(*SysDictTypeCreateReply)(nil),    // 5: sysdicttype.v1.SysDictTypeCreateReply
	(*SysDictTypeUpdateReq)(nil),      // 6: sysdicttype.v1.SysDictTypeUpdateReq
	(*SysDictTypeUpdateReply)(nil),    // 7: sysdicttype.v1.SysDictTypeUpdateReply
	(*SysDictTypeDeleteReq)(nil),      // 8: sysdicttype.v1.SysDictTypeDeleteReq
	(*SysDictTypeBatchDeleteReq)(nil), // 9: sysdicttype.v1.SysDictTypeBatchDeleteReq
	(*SysDictTypeDeleteReply)(nil),    // 10: sysdicttype.v1.SysDictTypeDeleteReply
	(*pagin.Pagination)(nil),          // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil),     // 12: google.protobuf.Timestamp
}
var file_api_admin_sysdicttype_v1_sys_dict_type_proto_depIdxs = []int32{
	11, // 0: sysdicttype.v1.SysDictTypePageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: sysdicttype.v1.SysDictTypePageReq.param:type_name -> sysdicttype.v1.SysDictTypeReq
	11, // 2: sysdicttype.v1.SysDictTypePageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: sysdicttype.v1.SysDictTypePageReply.items:type_name -> sysdicttype.v1.SysDictTypeReply
	12, // 4: sysdicttype.v1.SysDictTypeReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: sysdicttype.v1.SysDictTypeReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: sysdicttype.v1.SysDictTypeReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: sysdicttype.v1.SysDictTypeReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: sysdicttype.v1.SysDictTypeCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: sysdicttype.v1.SysDictTypeCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: sysdicttype.v1.SysDictType.GetPageSysDictType:input_type -> sysdicttype.v1.SysDictTypePageReq
	2,  // 11: sysdicttype.v1.SysDictType.GetSysDictType:input_type -> sysdicttype.v1.SysDictTypeReq
	6,  // 12: sysdicttype.v1.SysDictType.UpdateSysDictType:input_type -> sysdicttype.v1.SysDictTypeUpdateReq
	4,  // 13: sysdicttype.v1.SysDictType.CreateSysDictType:input_type -> sysdicttype.v1.SysDictTypeCreateReq
	8,  // 14: sysdicttype.v1.SysDictType.DeleteSysDictType:input_type -> sysdicttype.v1.SysDictTypeDeleteReq
	9,  // 15: sysdicttype.v1.SysDictType.BatchDeleteSysDictType:input_type -> sysdicttype.v1.SysDictTypeBatchDeleteReq
	1,  // 16: sysdicttype.v1.SysDictType.GetPageSysDictType:output_type -> sysdicttype.v1.SysDictTypePageReply
	3,  // 17: sysdicttype.v1.SysDictType.GetSysDictType:output_type -> sysdicttype.v1.SysDictTypeReply
	7,  // 18: sysdicttype.v1.SysDictType.UpdateSysDictType:output_type -> sysdicttype.v1.SysDictTypeUpdateReply
	5,  // 19: sysdicttype.v1.SysDictType.CreateSysDictType:output_type -> sysdicttype.v1.SysDictTypeCreateReply
	10, // 20: sysdicttype.v1.SysDictType.DeleteSysDictType:output_type -> sysdicttype.v1.SysDictTypeDeleteReply
	10, // 21: sysdicttype.v1.SysDictType.BatchDeleteSysDictType:output_type -> sysdicttype.v1.SysDictTypeDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_admin_sysdicttype_v1_sys_dict_type_proto_init() }
func file_api_admin_sysdicttype_v1_sys_dict_type_proto_init() {
	if File_api_admin_sysdicttype_v1_sys_dict_type_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypePageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypePageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypeCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypeCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypeUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypeUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypeDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypeBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysDictTypeDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_admin_sysdicttype_v1_sys_dict_type_proto_goTypes,
		DependencyIndexes: file_api_admin_sysdicttype_v1_sys_dict_type_proto_depIdxs,
		MessageInfos:      file_api_admin_sysdicttype_v1_sys_dict_type_proto_msgTypes,
	}.Build()
	File_api_admin_sysdicttype_v1_sys_dict_type_proto = out.File
	file_api_admin_sysdicttype_v1_sys_dict_type_proto_rawDesc = nil
	file_api_admin_sysdicttype_v1_sys_dict_type_proto_goTypes = nil
	file_api_admin_sysdicttype_v1_sys_dict_type_proto_depIdxs = nil
}
