// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.3
// source: api/admin/sysmenu/v1/sys_menu.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/descriptorpb"
	_ "google.golang.org/protobuf/types/known/durationpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	pagin "hope/pkg/pagin"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 查询搜索请求
type SysMenuPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页查询参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条件参数
	Param *SysMenuReq `protobuf:"bytes,2,opt,name=param,proto3" json:"param,omitempty"`
}

func (x *SysMenuPageReq) Reset() {
	*x = SysMenuPageReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuPageReq) ProtoMessage() {}

func (x *SysMenuPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuPageReq.ProtoReflect.Descriptor instead.
func (*SysMenuPageReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP(), []int{0}
}

func (x *SysMenuPageReq) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SysMenuPageReq) GetParam() *SysMenuReq {
	if x != nil {
		return x.Param
	}
	return nil
}

// 查询搜索返回
type SysMenuPageReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//分页参数
	Pagin *pagin.Pagination `protobuf:"bytes,1,opt,name=pagin,proto3" json:"pagin,omitempty"`
	//查询条目
	Items []*SysMenuReply `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SysMenuPageReply) Reset() {
	*x = SysMenuPageReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuPageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuPageReply) ProtoMessage() {}

func (x *SysMenuPageReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuPageReply.ProtoReflect.Descriptor instead.
func (*SysMenuPageReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP(), []int{1}
}

func (x *SysMenuPageReply) GetPagin() *pagin.Pagination {
	if x != nil {
		return x.Pagin
	}
	return nil
}

func (x *SysMenuPageReply) GetItems() []*SysMenuReply {
	if x != nil {
		return x.Items
	}
	return nil
}

// 查询搜索请求
type SysMenuReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//菜单名
	MenuName string `protobuf:"bytes,2,opt,name=menuName,proto3" json:"menuName,omitempty"`
	//菜单标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	//图标
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	//路径
	Path string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	//多级路径
	Paths string `protobuf:"bytes,6,opt,name=paths,proto3" json:"paths,omitempty"`
	//M-目录C-菜单F-按钮
	MenuType string `protobuf:"bytes,7,opt,name=menuType,proto3" json:"menuType,omitempty"`
	//
	Action string `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
	//权限
	Permission string `protobuf:"bytes,9,opt,name=permission,proto3" json:"permission,omitempty"`
	//无缓存
	NoCache bool `protobuf:"varint,10,opt,name=noCache,proto3" json:"noCache,omitempty"`
	//面包屑
	Breadcrumb string `protobuf:"bytes,11,opt,name=breadcrumb,proto3" json:"breadcrumb,omitempty"`
	//组件
	Component string `protobuf:"bytes,12,opt,name=component,proto3" json:"component,omitempty"`
	//排序
	Sort int32 `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	//是否可见
	Visible bool `protobuf:"varint,14,opt,name=visible,proto3" json:"visible,omitempty"`
	//是否外链1是0否
	IsFrame bool `protobuf:"varint,15,opt,name=isFrame,proto3" json:"isFrame,omitempty"`
	//
	SysApi string `protobuf:"bytes,16,opt,name=sysApi,proto3" json:"sysApi,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,19,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,20,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,21,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysMenuReq) Reset() {
	*x = SysMenuReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuReq) ProtoMessage() {}

func (x *SysMenuReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuReq.ProtoReflect.Descriptor instead.
func (*SysMenuReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP(), []int{2}
}

func (x *SysMenuReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysMenuReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *SysMenuReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SysMenuReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysMenuReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysMenuReq) GetPaths() string {
	if x != nil {
		return x.Paths
	}
	return ""
}

func (x *SysMenuReq) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *SysMenuReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SysMenuReq) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SysMenuReq) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

func (x *SysMenuReq) GetBreadcrumb() string {
	if x != nil {
		return x.Breadcrumb
	}
	return ""
}

func (x *SysMenuReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysMenuReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysMenuReq) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *SysMenuReq) GetIsFrame() bool {
	if x != nil {
		return x.IsFrame
	}
	return false
}

func (x *SysMenuReq) GetSysApi() string {
	if x != nil {
		return x.SysApi
	}
	return ""
}

func (x *SysMenuReq) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysMenuReq) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysMenuReq) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysMenuReq) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysMenuReq) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 查询搜索返回
type SysMenuReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//菜单名
	MenuName string `protobuf:"bytes,2,opt,name=menuName,proto3" json:"menuName,omitempty"`
	//菜单标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	//图标
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	//路径
	Path string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	//多级路径
	Paths string `protobuf:"bytes,6,opt,name=paths,proto3" json:"paths,omitempty"`
	//M-目录C-菜单F-按钮
	MenuType string `protobuf:"bytes,7,opt,name=menuType,proto3" json:"menuType,omitempty"`
	//
	Action string `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
	//权限
	Permission string `protobuf:"bytes,9,opt,name=permission,proto3" json:"permission,omitempty"`
	//无缓存
	NoCache bool `protobuf:"varint,10,opt,name=noCache,proto3" json:"noCache,omitempty"`
	//面包屑
	Breadcrumb string `protobuf:"bytes,11,opt,name=breadcrumb,proto3" json:"breadcrumb,omitempty"`
	//组件
	Component string `protobuf:"bytes,12,opt,name=component,proto3" json:"component,omitempty"`
	//排序
	Sort int32 `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	//是否可见
	Visible bool `protobuf:"varint,14,opt,name=visible,proto3" json:"visible,omitempty"`
	//是否外链1是0否
	IsFrame bool `protobuf:"varint,15,opt,name=isFrame,proto3" json:"isFrame,omitempty"`
	//
	SysApi string `protobuf:"bytes,16,opt,name=sysApi,proto3" json:"sysApi,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,19,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,20,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,21,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysMenuReply) Reset() {
	*x = SysMenuReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuReply) ProtoMessage() {}

func (x *SysMenuReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuReply.ProtoReflect.Descriptor instead.
func (*SysMenuReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP(), []int{3}
}

func (x *SysMenuReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysMenuReply) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *SysMenuReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SysMenuReply) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysMenuReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysMenuReply) GetPaths() string {
	if x != nil {
		return x.Paths
	}
	return ""
}

func (x *SysMenuReply) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *SysMenuReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SysMenuReply) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SysMenuReply) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

func (x *SysMenuReply) GetBreadcrumb() string {
	if x != nil {
		return x.Breadcrumb
	}
	return ""
}

func (x *SysMenuReply) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysMenuReply) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysMenuReply) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *SysMenuReply) GetIsFrame() bool {
	if x != nil {
		return x.IsFrame
	}
	return false
}

func (x *SysMenuReply) GetSysApi() string {
	if x != nil {
		return x.SysApi
	}
	return ""
}

func (x *SysMenuReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysMenuReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysMenuReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysMenuReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysMenuReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 创建SysMenu请求
type SysMenuCreateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//菜单名
	MenuName string `protobuf:"bytes,1,opt,name=menuName,proto3" json:"menuName,omitempty"`
	//菜单标题
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	//图标
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	//路径
	Path string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	//多级路径
	Paths string `protobuf:"bytes,5,opt,name=paths,proto3" json:"paths,omitempty"`
	//M-目录C-菜单F-按钮
	MenuType string `protobuf:"bytes,6,opt,name=menuType,proto3" json:"menuType,omitempty"`
	//
	Action string `protobuf:"bytes,7,opt,name=action,proto3" json:"action,omitempty"`
	//权限
	Permission string `protobuf:"bytes,8,opt,name=permission,proto3" json:"permission,omitempty"`
	//无缓存
	NoCache bool `protobuf:"varint,9,opt,name=noCache,proto3" json:"noCache,omitempty"`
	//面包屑
	Breadcrumb string `protobuf:"bytes,10,opt,name=breadcrumb,proto3" json:"breadcrumb,omitempty"`
	//组件
	Component string `protobuf:"bytes,11,opt,name=component,proto3" json:"component,omitempty"`
	//排序
	Sort int32 `protobuf:"varint,12,opt,name=sort,proto3" json:"sort,omitempty"`
	//是否可见
	Visible bool `protobuf:"varint,13,opt,name=visible,proto3" json:"visible,omitempty"`
	//是否外链1是0否
	IsFrame bool `protobuf:"varint,14,opt,name=isFrame,proto3" json:"isFrame,omitempty"`
	//
	SysApi string `protobuf:"bytes,15,opt,name=sysApi,proto3" json:"sysApi,omitempty"`
}

func (x *SysMenuCreateReq) Reset() {
	*x = SysMenuCreateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuCreateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuCreateReq) ProtoMessage() {}

func (x *SysMenuCreateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuCreateReq.ProtoReflect.Descriptor instead.
func (*SysMenuCreateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP(), []int{4}
}

func (x *SysMenuCreateReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *SysMenuCreateReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SysMenuCreateReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysMenuCreateReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysMenuCreateReq) GetPaths() string {
	if x != nil {
		return x.Paths
	}
	return ""
}

func (x *SysMenuCreateReq) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *SysMenuCreateReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SysMenuCreateReq) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SysMenuCreateReq) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

func (x *SysMenuCreateReq) GetBreadcrumb() string {
	if x != nil {
		return x.Breadcrumb
	}
	return ""
}

func (x *SysMenuCreateReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysMenuCreateReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysMenuCreateReq) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *SysMenuCreateReq) GetIsFrame() bool {
	if x != nil {
		return x.IsFrame
	}
	return false
}

func (x *SysMenuCreateReq) GetSysApi() string {
	if x != nil {
		return x.SysApi
	}
	return ""
}

// 创建SysMenu返回
type SysMenuCreateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//菜单名
	MenuName string `protobuf:"bytes,2,opt,name=menuName,proto3" json:"menuName,omitempty"`
	//菜单标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	//图标
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	//路径
	Path string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	//多级路径
	Paths string `protobuf:"bytes,6,opt,name=paths,proto3" json:"paths,omitempty"`
	//M-目录C-菜单F-按钮
	MenuType string `protobuf:"bytes,7,opt,name=menuType,proto3" json:"menuType,omitempty"`
	//
	Action string `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
	//权限
	Permission string `protobuf:"bytes,9,opt,name=permission,proto3" json:"permission,omitempty"`
	//无缓存
	NoCache bool `protobuf:"varint,10,opt,name=noCache,proto3" json:"noCache,omitempty"`
	//面包屑
	Breadcrumb string `protobuf:"bytes,11,opt,name=breadcrumb,proto3" json:"breadcrumb,omitempty"`
	//组件
	Component string `protobuf:"bytes,12,opt,name=component,proto3" json:"component,omitempty"`
	//排序
	Sort int32 `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	//是否可见
	Visible bool `protobuf:"varint,14,opt,name=visible,proto3" json:"visible,omitempty"`
	//是否外链1是0否
	IsFrame bool `protobuf:"varint,15,opt,name=isFrame,proto3" json:"isFrame,omitempty"`
	//
	SysApi string `protobuf:"bytes,16,opt,name=sysApi,proto3" json:"sysApi,omitempty"`
	//创建时间
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	//更新时间
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	//创建者
	CreateBy int64 `protobuf:"varint,19,opt,name=createBy,proto3" json:"createBy,omitempty"`
	//更新者
	UpdateBy int64 `protobuf:"varint,20,opt,name=updateBy,proto3" json:"updateBy,omitempty"`
	//租户
	TenantId int64 `protobuf:"varint,21,opt,name=tenantId,proto3" json:"tenantId,omitempty"`
}

func (x *SysMenuCreateReply) Reset() {
	*x = SysMenuCreateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuCreateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuCreateReply) ProtoMessage() {}

func (x *SysMenuCreateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuCreateReply.ProtoReflect.Descriptor instead.
func (*SysMenuCreateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP(), []int{5}
}

func (x *SysMenuCreateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysMenuCreateReply) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *SysMenuCreateReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SysMenuCreateReply) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysMenuCreateReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysMenuCreateReply) GetPaths() string {
	if x != nil {
		return x.Paths
	}
	return ""
}

func (x *SysMenuCreateReply) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *SysMenuCreateReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SysMenuCreateReply) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SysMenuCreateReply) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

func (x *SysMenuCreateReply) GetBreadcrumb() string {
	if x != nil {
		return x.Breadcrumb
	}
	return ""
}

func (x *SysMenuCreateReply) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysMenuCreateReply) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysMenuCreateReply) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *SysMenuCreateReply) GetIsFrame() bool {
	if x != nil {
		return x.IsFrame
	}
	return false
}

func (x *SysMenuCreateReply) GetSysApi() string {
	if x != nil {
		return x.SysApi
	}
	return ""
}

func (x *SysMenuCreateReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SysMenuCreateReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SysMenuCreateReply) GetCreateBy() int64 {
	if x != nil {
		return x.CreateBy
	}
	return 0
}

func (x *SysMenuCreateReply) GetUpdateBy() int64 {
	if x != nil {
		return x.UpdateBy
	}
	return 0
}

func (x *SysMenuCreateReply) GetTenantId() int64 {
	if x != nil {
		return x.TenantId
	}
	return 0
}

// 更新SysMenu请求
type SysMenuUpdateReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//菜单名
	MenuName string `protobuf:"bytes,2,opt,name=menuName,proto3" json:"menuName,omitempty"`
	//菜单标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	//图标
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	//路径
	Path string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	//多级路径
	Paths string `protobuf:"bytes,6,opt,name=paths,proto3" json:"paths,omitempty"`
	//M-目录C-菜单F-按钮
	MenuType string `protobuf:"bytes,7,opt,name=menuType,proto3" json:"menuType,omitempty"`
	//
	Action string `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
	//权限
	Permission string `protobuf:"bytes,9,opt,name=permission,proto3" json:"permission,omitempty"`
	//无缓存
	NoCache bool `protobuf:"varint,10,opt,name=noCache,proto3" json:"noCache,omitempty"`
	//面包屑
	Breadcrumb string `protobuf:"bytes,11,opt,name=breadcrumb,proto3" json:"breadcrumb,omitempty"`
	//组件
	Component string `protobuf:"bytes,12,opt,name=component,proto3" json:"component,omitempty"`
	//排序
	Sort int32 `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	//是否可见
	Visible bool `protobuf:"varint,14,opt,name=visible,proto3" json:"visible,omitempty"`
	//是否外链1是0否
	IsFrame bool `protobuf:"varint,15,opt,name=isFrame,proto3" json:"isFrame,omitempty"`
	//
	SysApi string `protobuf:"bytes,16,opt,name=sysApi,proto3" json:"sysApi,omitempty"`
}

func (x *SysMenuUpdateReq) Reset() {
	*x = SysMenuUpdateReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuUpdateReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuUpdateReq) ProtoMessage() {}

func (x *SysMenuUpdateReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuUpdateReq.ProtoReflect.Descriptor instead.
func (*SysMenuUpdateReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP(), []int{6}
}

func (x *SysMenuUpdateReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysMenuUpdateReq) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *SysMenuUpdateReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SysMenuUpdateReq) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysMenuUpdateReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysMenuUpdateReq) GetPaths() string {
	if x != nil {
		return x.Paths
	}
	return ""
}

func (x *SysMenuUpdateReq) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *SysMenuUpdateReq) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SysMenuUpdateReq) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SysMenuUpdateReq) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

func (x *SysMenuUpdateReq) GetBreadcrumb() string {
	if x != nil {
		return x.Breadcrumb
	}
	return ""
}

func (x *SysMenuUpdateReq) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysMenuUpdateReq) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysMenuUpdateReq) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *SysMenuUpdateReq) GetIsFrame() bool {
	if x != nil {
		return x.IsFrame
	}
	return false
}

func (x *SysMenuUpdateReq) GetSysApi() string {
	if x != nil {
		return x.SysApi
	}
	return ""
}

// 更新SysMenu返回
type SysMenuUpdateReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//菜单名
	MenuName string `protobuf:"bytes,2,opt,name=menuName,proto3" json:"menuName,omitempty"`
	//菜单标题
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	//图标
	Icon string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"`
	//路径
	Path string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`
	//多级路径
	Paths string `protobuf:"bytes,6,opt,name=paths,proto3" json:"paths,omitempty"`
	//M-目录C-菜单F-按钮
	MenuType string `protobuf:"bytes,7,opt,name=menuType,proto3" json:"menuType,omitempty"`
	//
	Action string `protobuf:"bytes,8,opt,name=action,proto3" json:"action,omitempty"`
	//权限
	Permission string `protobuf:"bytes,9,opt,name=permission,proto3" json:"permission,omitempty"`
	//无缓存
	NoCache bool `protobuf:"varint,10,opt,name=noCache,proto3" json:"noCache,omitempty"`
	//面包屑
	Breadcrumb string `protobuf:"bytes,11,opt,name=breadcrumb,proto3" json:"breadcrumb,omitempty"`
	//组件
	Component string `protobuf:"bytes,12,opt,name=component,proto3" json:"component,omitempty"`
	//排序
	Sort int32 `protobuf:"varint,13,opt,name=sort,proto3" json:"sort,omitempty"`
	//是否可见
	Visible bool `protobuf:"varint,14,opt,name=visible,proto3" json:"visible,omitempty"`
	//是否外链1是0否
	IsFrame bool `protobuf:"varint,15,opt,name=isFrame,proto3" json:"isFrame,omitempty"`
	//
	SysApi string `protobuf:"bytes,16,opt,name=sysApi,proto3" json:"sysApi,omitempty"`
}

func (x *SysMenuUpdateReply) Reset() {
	*x = SysMenuUpdateReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuUpdateReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuUpdateReply) ProtoMessage() {}

func (x *SysMenuUpdateReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuUpdateReply.ProtoReflect.Descriptor instead.
func (*SysMenuUpdateReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP(), []int{7}
}

func (x *SysMenuUpdateReply) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SysMenuUpdateReply) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *SysMenuUpdateReply) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SysMenuUpdateReply) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SysMenuUpdateReply) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SysMenuUpdateReply) GetPaths() string {
	if x != nil {
		return x.Paths
	}
	return ""
}

func (x *SysMenuUpdateReply) GetMenuType() string {
	if x != nil {
		return x.MenuType
	}
	return ""
}

func (x *SysMenuUpdateReply) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *SysMenuUpdateReply) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SysMenuUpdateReply) GetNoCache() bool {
	if x != nil {
		return x.NoCache
	}
	return false
}

func (x *SysMenuUpdateReply) GetBreadcrumb() string {
	if x != nil {
		return x.Breadcrumb
	}
	return ""
}

func (x *SysMenuUpdateReply) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SysMenuUpdateReply) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SysMenuUpdateReply) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *SysMenuUpdateReply) GetIsFrame() bool {
	if x != nil {
		return x.IsFrame
	}
	return false
}

func (x *SysMenuUpdateReply) GetSysApi() string {
	if x != nil {
		return x.SysApi
	}
	return ""
}

// 删除SysMenu请求
type SysMenuDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SysMenuDeleteReq) Reset() {
	*x = SysMenuDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuDeleteReq) ProtoMessage() {}

func (x *SysMenuDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuDeleteReq.ProtoReflect.Descriptor instead.
func (*SysMenuDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP(), []int{8}
}

func (x *SysMenuDeleteReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

// 批量删除SysMenu请求
type SysMenuBatchDeleteReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SysMenuBatchDeleteReq) Reset() {
	*x = SysMenuBatchDeleteReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuBatchDeleteReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuBatchDeleteReq) ProtoMessage() {}

func (x *SysMenuBatchDeleteReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuBatchDeleteReq.ProtoReflect.Descriptor instead.
func (*SysMenuBatchDeleteReq) Descriptor() ([]byte, []int) {
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP(), []int{9}
}

func (x *SysMenuBatchDeleteReq) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 删除SysMenu返回
type SysMenuDeleteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result bool `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SysMenuDeleteReply) Reset() {
	*x = SysMenuDeleteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SysMenuDeleteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SysMenuDeleteReply) ProtoMessage() {}

func (x *SysMenuDeleteReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SysMenuDeleteReply.ProtoReflect.Descriptor instead.
func (*SysMenuDeleteReply) Descriptor() ([]byte, []int) {
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP(), []int{10}
}

func (x *SysMenuDeleteReply) GetResult() bool {
	if x != nil {
		return x.Result
	}
	return false
}

var File_api_admin_sysmenu_v1_sys_menu_proto protoreflect.FileDescriptor

var file_api_admin_sysmenu_v1_sys_menu_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x6d,
	0x65, 0x6e, 0x75, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x73, 0x79, 0x73, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76,
	0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x0b, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x67, 0x0a, 0x0e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x05, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x05, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x79, 0x73, 0x6d,
	0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x71, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x22, 0x6b, 0x0a, 0x10, 0x53, 0x79, 0x73, 0x4d,
	0x65, 0x6e, 0x75, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x27, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xe0, 0x04, 0x0a, 0x0a, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70,
	0x61, 0x74, 0x68, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63,
	0x68, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75,
	0x6d, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x41,
	0x70, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0xe2, 0x04, 0x0a, 0x0c, 0x53, 0x79, 0x73,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e,
	0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64,
	0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x65,
	0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x79, 0x73, 0x41, 0x70, 0x69, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x8e, 0x03,
	0x0a, 0x10, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74,
	0x68, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69, 0x22, 0xe8,
	0x04, 0x0a, 0x12, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d,
	0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72,
	0x75, 0x6d, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73,
	0x41, 0x70, 0x69, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x41, 0x70,
	0x69, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x79, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x9e, 0x03, 0x0a, 0x10, 0x53, 0x79,
	0x73, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x74, 0x68,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69, 0x22, 0xa0, 0x03, 0x0a, 0x12, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x74, 0x68, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x74, 0x68,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x72, 0x65, 0x61, 0x64, 0x63, 0x72, 0x75, 0x6d, 0x62, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69,
	0x73, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x73, 0x41, 0x70, 0x69, 0x22, 0x22, 0x0a,
	0x10, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x29, 0x0a, 0x15, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2c, 0x0a, 0x12,
	0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xf9, 0x04, 0x0a, 0x07, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x65, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x67,
	0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1a, 0x2e, 0x73, 0x79, 0x73, 0x6d, 0x65,
	0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x79, 0x73, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x70, 0x61, 0x67, 0x65, 0x12, 0x59, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x16, 0x2e, 0x73, 0x79,
	0x73, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x73, 0x79, 0x73, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x6d,
	0x65, 0x6e, 0x75, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6b, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x6d,
	0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x6d, 0x65, 0x6e,
	0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x1a,
	0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x66, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x2e, 0x73, 0x79, 0x73, 0x6d, 0x65, 0x6e, 0x75,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x3a, 0x01, 0x2a, 0x12, 0x68, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1c,
	0x2e, 0x73, 0x79, 0x73, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d,
	0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1e, 0x2e, 0x73,
	0x79, 0x73, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e,
	0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79, 0x73, 0x2f, 0x6d, 0x65,
	0x6e, 0x75, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6d, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x21, 0x2e,
	0x73, 0x79, 0x73, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x73, 0x4d, 0x65,
	0x6e, 0x75, 0x42, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x1a, 0x1e, 0x2e, 0x73, 0x79, 0x73, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79,
	0x73, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x2a, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x79,
	0x73, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x42, 0x1e, 0x5a, 0x1c, 0x68, 0x6f, 0x70, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x73, 0x79, 0x73, 0x6d, 0x65, 0x6e, 0x75,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_admin_sysmenu_v1_sys_menu_proto_rawDescOnce sync.Once
	file_api_admin_sysmenu_v1_sys_menu_proto_rawDescData = file_api_admin_sysmenu_v1_sys_menu_proto_rawDesc
)

func file_api_admin_sysmenu_v1_sys_menu_proto_rawDescGZIP() []byte {
	file_api_admin_sysmenu_v1_sys_menu_proto_rawDescOnce.Do(func() {
		file_api_admin_sysmenu_v1_sys_menu_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_admin_sysmenu_v1_sys_menu_proto_rawDescData)
	})
	return file_api_admin_sysmenu_v1_sys_menu_proto_rawDescData
}

var file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_admin_sysmenu_v1_sys_menu_proto_goTypes = []interface{}{
	(*SysMenuPageReq)(nil),        // 0: sysmenu.v1.SysMenuPageReq
	(*SysMenuPageReply)(nil),      // 1: sysmenu.v1.SysMenuPageReply
	(*SysMenuReq)(nil),            // 2: sysmenu.v1.SysMenuReq
	(*SysMenuReply)(nil),          // 3: sysmenu.v1.SysMenuReply
	(*SysMenuCreateReq)(nil),      // 4: sysmenu.v1.SysMenuCreateReq
	(*SysMenuCreateReply)(nil),    // 5: sysmenu.v1.SysMenuCreateReply
	(*SysMenuUpdateReq)(nil),      // 6: sysmenu.v1.SysMenuUpdateReq
	(*SysMenuUpdateReply)(nil),    // 7: sysmenu.v1.SysMenuUpdateReply
	(*SysMenuDeleteReq)(nil),      // 8: sysmenu.v1.SysMenuDeleteReq
	(*SysMenuBatchDeleteReq)(nil), // 9: sysmenu.v1.SysMenuBatchDeleteReq
	(*SysMenuDeleteReply)(nil),    // 10: sysmenu.v1.SysMenuDeleteReply
	(*pagin.Pagination)(nil),      // 11: pagin.Pagination
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
}
var file_api_admin_sysmenu_v1_sys_menu_proto_depIdxs = []int32{
	11, // 0: sysmenu.v1.SysMenuPageReq.pagin:type_name -> pagin.Pagination
	2,  // 1: sysmenu.v1.SysMenuPageReq.param:type_name -> sysmenu.v1.SysMenuReq
	11, // 2: sysmenu.v1.SysMenuPageReply.pagin:type_name -> pagin.Pagination
	3,  // 3: sysmenu.v1.SysMenuPageReply.items:type_name -> sysmenu.v1.SysMenuReply
	12, // 4: sysmenu.v1.SysMenuReq.createdAt:type_name -> google.protobuf.Timestamp
	12, // 5: sysmenu.v1.SysMenuReq.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 6: sysmenu.v1.SysMenuReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 7: sysmenu.v1.SysMenuReply.updatedAt:type_name -> google.protobuf.Timestamp
	12, // 8: sysmenu.v1.SysMenuCreateReply.createdAt:type_name -> google.protobuf.Timestamp
	12, // 9: sysmenu.v1.SysMenuCreateReply.updatedAt:type_name -> google.protobuf.Timestamp
	0,  // 10: sysmenu.v1.SysMenu.GetPageSysMenu:input_type -> sysmenu.v1.SysMenuPageReq
	2,  // 11: sysmenu.v1.SysMenu.GetSysMenu:input_type -> sysmenu.v1.SysMenuReq
	6,  // 12: sysmenu.v1.SysMenu.UpdateSysMenu:input_type -> sysmenu.v1.SysMenuUpdateReq
	4,  // 13: sysmenu.v1.SysMenu.CreateSysMenu:input_type -> sysmenu.v1.SysMenuCreateReq
	8,  // 14: sysmenu.v1.SysMenu.DeleteSysMenu:input_type -> sysmenu.v1.SysMenuDeleteReq
	9,  // 15: sysmenu.v1.SysMenu.BatchDeleteSysMenu:input_type -> sysmenu.v1.SysMenuBatchDeleteReq
	1,  // 16: sysmenu.v1.SysMenu.GetPageSysMenu:output_type -> sysmenu.v1.SysMenuPageReply
	3,  // 17: sysmenu.v1.SysMenu.GetSysMenu:output_type -> sysmenu.v1.SysMenuReply
	7,  // 18: sysmenu.v1.SysMenu.UpdateSysMenu:output_type -> sysmenu.v1.SysMenuUpdateReply
	5,  // 19: sysmenu.v1.SysMenu.CreateSysMenu:output_type -> sysmenu.v1.SysMenuCreateReply
	10, // 20: sysmenu.v1.SysMenu.DeleteSysMenu:output_type -> sysmenu.v1.SysMenuDeleteReply
	10, // 21: sysmenu.v1.SysMenu.BatchDeleteSysMenu:output_type -> sysmenu.v1.SysMenuDeleteReply
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_admin_sysmenu_v1_sys_menu_proto_init() }
func file_api_admin_sysmenu_v1_sys_menu_proto_init() {
	if File_api_admin_sysmenu_v1_sys_menu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuPageReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuPageReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuCreateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuCreateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuUpdateReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuUpdateReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuBatchDeleteReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SysMenuDeleteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_admin_sysmenu_v1_sys_menu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_admin_sysmenu_v1_sys_menu_proto_goTypes,
		DependencyIndexes: file_api_admin_sysmenu_v1_sys_menu_proto_depIdxs,
		MessageInfos:      file_api_admin_sysmenu_v1_sys_menu_proto_msgTypes,
	}.Build()
	File_api_admin_sysmenu_v1_sys_menu_proto = out.File
	file_api_admin_sysmenu_v1_sys_menu_proto_rawDesc = nil
	file_api_admin_sysmenu_v1_sys_menu_proto_goTypes = nil
	file_api_admin_sysmenu_v1_sys_menu_proto_depIdxs = nil
}
